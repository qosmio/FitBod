window.TF_PLAN = {"format_version":"1.1","terraform_version":"1.3.0-dev","variables":{"app_image_name":{"value":"fitbodinc/my_workout:0.1.0"},"app_master_key_file":{"value":""},"app_name":{"value":"myworkout"},"app_user_pass":{"value":{"admin":{"email":"admin@example.com","password":""},"user1":{"email":"user1@fitbod.me","password":""}}},"db_availability_type":{"value":"ZONAL"},"db_create_timeout":{"value":"15m"},"db_delete_timeout":{"value":"5m"},"db_deletion_protection":{"value":false},"db_disk_autoresize":{"value":false},"db_disk_size_gb":{"value":10},"db_disk_type":{"value":"PD_HDD"},"db_enable_default_db":{"value":true},"db_enable_default_user":{"value":true},"db_tier":{"value":"db-g1-small"},"db_update_timeout":{"value":"5m"},"db_user":{"value":"fitbod-adm"},"environment":{"value":"dev"},"gce_disk_size_gb":{"value":2},"gce_disk_type":{"value":"pd-balanced"},"gcp_region":{"value":null},"gcp_zones":{"value":["us-east1-d"]},"gke_dataplane_v2_enabled":{"value":true},"gke_disk_size_gb":{"value":50},"gke_disk_type":{"value":"pd-ssd"},"gke_enable_preemptible":{"value":true},"gke_image_type":{"value":"COS_CONTAINERD"},"gke_is_regional":{"value":false},"gke_machine_type":{"value":"e2-highcpu-4"},"gke_max_cpu_cores":{"value":4},"gke_max_memory_gb":{"value":8},"gke_max_num_nodes":{"value":8},"gke_min_cpu_cores":{"value":2},"gke_min_memory_gb":{"value":2},"gke_min_num_nodes":{"value":1},"gke_version":{"value":"latest"},"pg_name":{"value":"fitbod"},"pg_version":{"value":"POSTGRES_14"},"project_id":{"value":"zkhan-1"},"project_name":{"value":"fitbod"}},"planned_values":{"outputs":{"admin_pass":{"sensitive":true},"app_url":{"sensitive":false},"ca_certificate":{"sensitive":true},"db_host":{"sensitive":false},"db_pass":{"sensitive":true},"endpoint":{"sensitive":true},"gcp_region":{"sensitive":false,"type":"string","value":"us-east1"},"gke_cluster_type":{"sensitive":false,"type":"string","value":"zonal"},"gke_name":{"sensitive":false},"grafana_pass":{"sensitive":true},"grafana_url":{"sensitive":false},"grafana_user":{"sensitive":true},"horizontal_pod_autoscaling_enabled":{"sensitive":false,"type":"bool","value":true},"http_load_balancing_enabled":{"sensitive":false,"type":"bool","value":false},"location":{"sensitive":false,"type":"string","value":"us-east1-d"},"logging_service":{"sensitive":false,"type":"string","value":"logging.googleapis.com/kubernetes"},"master_authorized_networks_config":{"sensitive":false,"type":["list",["object",{"cidr_blocks":["set",["object",{"cidr_block":"string","display_name":"string"}]]}]],"value":[]},"master_version":{"sensitive":false},"min_master_version":{"sensitive":false,"type":"string","value":"1.24.1-gke.1400"},"monitoring_service":{"sensitive":false,"type":"string","value":"monitoring.googleapis.com/kubernetes"},"network_module":{"sensitive":false},"network_policy_enabled":{"sensitive":false,"type":"bool","value":false},"service_account":{"sensitive":false},"subnets_ips":{"sensitive":false,"type":["tuple",["string"]],"value":["10.10.0.0/16"]},"subnets_secondary_ranges":{"sensitive":false,"type":["tuple",[["list",["object",{"ip_cidr_range":"string","range_name":"string"}]]]],"value":[[{"ip_cidr_range":"10.20.0.0/16","range_name":"ip-range-pods"},{"ip_cidr_range":"10.30.0.0/16","range_name":"ip-range-services"}]]},"user1_pass":{"sensitive":true},"vpc_network_out":{"sensitive":false,"type":"string","value":"dev-fitbod-net"},"vpc_subnet_out":{"sensitive":false,"type":"string","value":"dev-fitbod-subnet"}},"root_module":{"resources":[{"address":"google_compute_address.ingress_ip","mode":"managed","type":"google_compute_address","name":"ingress_ip","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"address_type":"EXTERNAL","description":null,"name":"fitbod-ingress-ip","network":null,"prefix_length":null,"region":"us-east1","timeouts":null},"sensitive_values":{"users":[]}},{"address":"google_compute_disk.app","mode":"managed","type":"google_compute_disk","name":"app","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"description":null,"disk_encryption_key":[],"image":null,"labels":null,"name":"app","project":"zkhan-1","provisioned_iops":null,"size":1,"snapshot":null,"source_image_encryption_key":[],"source_snapshot_encryption_key":[],"timeouts":null,"type":"pd-balanced","zone":"us-east1-d"},"sensitive_values":{"disk_encryption_key":[],"source_image_encryption_key":[],"source_snapshot_encryption_key":[],"users":[]}},{"address":"google_compute_disk.monitoring","mode":"managed","type":"google_compute_disk","name":"monitoring","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"description":null,"disk_encryption_key":[],"image":null,"labels":null,"name":"monitoring","project":"zkhan-1","provisioned_iops":null,"size":2,"snapshot":null,"source_image_encryption_key":[],"source_snapshot_encryption_key":[],"timeouts":null,"type":"pd-balanced","zone":"us-east1-d"},"sensitive_values":{"disk_encryption_key":[],"source_image_encryption_key":[],"source_snapshot_encryption_key":[],"users":[]}},{"address":"google_project_service.services[\"clouddebugger.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"clouddebugger.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"clouddebugger.googleapis.com","timeouts":null},"sensitive_values":{}},{"address":"google_project_service.services[\"cloudfunctions.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"cloudfunctions.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"cloudfunctions.googleapis.com","timeouts":null},"sensitive_values":{}},{"address":"google_project_service.services[\"cloudresourcemanager.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"cloudresourcemanager.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"cloudresourcemanager.googleapis.com","timeouts":null},"sensitive_values":{}},{"address":"google_project_service.services[\"cloudscheduler.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"cloudscheduler.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"cloudscheduler.googleapis.com","timeouts":null},"sensitive_values":{}},{"address":"google_project_service.services[\"compute.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"compute.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"compute.googleapis.com","timeouts":null},"sensitive_values":{}},{"address":"google_project_service.services[\"container.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"container.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"container.googleapis.com","timeouts":null},"sensitive_values":{}},{"address":"google_project_service.services[\"containerregistry.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"containerregistry.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"containerregistry.googleapis.com","timeouts":null},"sensitive_values":{}},{"address":"google_project_service.services[\"dns.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"dns.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"dns.googleapis.com","timeouts":null},"sensitive_values":{}},{"address":"google_project_service.services[\"run.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"run.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"run.googleapis.com","timeouts":null},"sensitive_values":{}},{"address":"google_project_service.services[\"secretmanager.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"secretmanager.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"secretmanager.googleapis.com","timeouts":null},"sensitive_values":{}},{"address":"google_project_service.services[\"servicenetworking.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"servicenetworking.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"servicenetworking.googleapis.com","timeouts":null},"sensitive_values":{}},{"address":"google_project_service.services[\"sql-component.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"sql-component.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"sql-component.googleapis.com","timeouts":null},"sensitive_values":{}},{"address":"google_project_service.services[\"sqladmin.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"sqladmin.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"sqladmin.googleapis.com","timeouts":null},"sensitive_values":{}},{"address":"google_project_service.services[\"storage-api.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"storage-api.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"storage-api.googleapis.com","timeouts":null},"sensitive_values":{}},{"address":"google_project_service.services[\"vpcaccess.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"vpcaccess.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"vpcaccess.googleapis.com","timeouts":null},"sensitive_values":{}},{"address":"helm_release.nginx_controller","mode":"managed","type":"helm_release","name":"nginx_controller","provider_name":"registry.terraform.io/hashicorp/helm","schema_version":0,"values":{"atomic":false,"chart":"ingress-nginx","cleanup_on_fail":false,"create_namespace":true,"dependency_update":false,"description":null,"devel":null,"disable_crd_hooks":false,"disable_openapi_validation":false,"disable_webhooks":false,"force_update":false,"keyring":null,"lint":false,"max_history":0,"name":"ingress-nginx","namespace":"ingress-nginx","pass_credentials":false,"postrender":[],"recreate_pods":false,"render_subchart_notes":true,"replace":false,"repository":"https://kubernetes.github.io/ingress-nginx","repository_ca_file":null,"repository_cert_file":null,"repository_key_file":null,"repository_password":null,"repository_username":null,"reset_values":false,"reuse_values":false,"set":[],"set_sensitive":[],"skip_crds":false,"status":"deployed","timeout":60,"verify":false,"version":"4.2.0","wait":true,"wait_for_jobs":false},"sensitive_values":{"metadata":[],"postrender":[],"set":[],"set_sensitive":[],"values":[]}},{"address":"helm_release.prometheus","mode":"managed","type":"helm_release","name":"prometheus","provider_name":"registry.terraform.io/hashicorp/helm","schema_version":0,"values":{"atomic":false,"chart":"kube-prometheus-stack","cleanup_on_fail":true,"create_namespace":true,"dependency_update":false,"description":null,"devel":null,"disable_crd_hooks":false,"disable_openapi_validation":false,"disable_webhooks":false,"force_update":true,"keyring":null,"lint":false,"max_history":0,"name":"prometheus","namespace":"monitoring","pass_credentials":false,"postrender":[],"recreate_pods":false,"render_subchart_notes":true,"replace":false,"repository":"https://prometheus-community.github.io/helm-charts","repository_ca_file":null,"repository_cert_file":null,"repository_key_file":null,"repository_password":null,"repository_username":null,"reset_values":false,"reuse_values":false,"set":[],"set_sensitive":[],"skip_crds":false,"status":"deployed","timeout":120,"verify":false,"version":"37.2.0","wait":true,"wait_for_jobs":false},"sensitive_values":{"metadata":[],"postrender":[],"set":[],"set_sensitive":[],"values":[]}},{"address":"kubernetes_cluster_role_binding.cilium_node_patcher","mode":"managed","type":"kubernetes_cluster_role_binding","name":"cilium_node_patcher","provider_name":"registry.terraform.io/hashicorp/kubernetes","schema_version":0,"values":{"metadata":[{"annotations":null,"labels":null,"name":"cilium-node-patcher"}],"role_ref":[{"api_group":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"system:node"}],"subject":[{"kind":"ServiceAccount","name":"cilium","namespace":"kube-system"}]},"sensitive_values":{"metadata":[{}],"role_ref":[{}],"subject":[{}]}},{"address":"kubernetes_config_map.config","mode":"managed","type":"kubernetes_config_map","name":"config","provider_name":"registry.terraform.io/hashicorp/kubernetes","schema_version":0,"values":{"binary_data":null,"metadata":[{"annotations":null,"generate_name":null,"labels":null,"name":"myworkout-config","namespace":"default"}]},"sensitive_values":{"data":{},"metadata":[{}]}},{"address":"kubernetes_config_map.grafana_dashboards","mode":"managed","type":"kubernetes_config_map","name":"grafana_dashboards","provider_name":"registry.terraform.io/hashicorp/kubernetes","schema_version":0,"values":{"binary_data":null,"data":{"fitbod-k8s.json":"{\n  \"annotations\": {\n    \"list\": [\n      {\n        \"$$hashKey\": \"object:247\",\n        \"builtIn\": 1,\n        \"datasource\": {\n          \"type\": \"datasource\",\n          \"uid\": \"grafana\"\n        },\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations \u0026 Alerts\",\n        \"target\": {\n          \"limit\": 100,\n          \"matchAny\": false,\n          \"tags\": [],\n          \"type\": \"dashboard\"\n        },\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"description\": \"\",\n  \"editable\": true,\n  \"fiscalYearStartMonth\": 0,\n  \"gnetId\": 15661,\n  \"graphTooltip\": 0,\n  \"id\": 31,\n  \"iteration\": 1657535266413,\n  \"links\": [\n    {\n      \"icon\": \"bolt\",\n      \"tags\": [],\n      \"targetBlank\": true,\n      \"title\": \"Update\",\n      \"tooltip\": \" Update current dashboard \",\n      \"type\": \"link\",\n      \"url\": \"https://grafana.com/dashboards/13105\"\n    },\n    {\n      \"$$hashKey\": \"object:1091\",\n      \"asDropdown\": true,\n      \"icon\": \"external link\",\n      \"tags\": [],\n      \"targetBlank\": true,\n      \"type\": \"dashboards\"\n    }\n  ],\n  \"liveNow\": true,\n  \"panels\": [\n    {\n      \"collapsed\": false,\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 54,\n      \"panels\": [],\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \" Node Storage Information ： Number of cores used :【$Node】\",\n      \"type\": \"row\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"decimals\": 1,\n          \"mappings\": [],\n          \"max\": 1,\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"rgba(50, 172, 45, 0.97)\",\n                \"value\": null\n              },\n              {\n                \"color\": \"rgba(237, 129, 40, 0.89)\",\n                \"value\": 0.8\n              },\n              {\n                \"color\": \"rgba(245, 54, 54, 0.9)\",\n                \"value\": 0.99\n              }\n            ]\n          },\n          \"unit\": \"percentunit\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 4,\n        \"w\": 4,\n        \"x\": 0,\n        \"y\": 1\n      },\n      \"id\": 44,\n      \"links\": [],\n      \"options\": {\n        \"displayMode\": \"basic\",\n        \"minVizHeight\": 10,\n        \"minVizWidth\": 0,\n        \"orientation\": \"vertical\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"showUnfilled\": true,\n        \"text\": {}\n      },\n      \"pluginVersion\": \"9.0.1\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(container_memory_working_set_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container!=\\\"\\\",node=~\\\"^$Node$\\\"}) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\", node=~\\\"^$Node$\\\"})\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Memory Limit Rate \",\n          \"refId\": \"C\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",node=~\\\"^$Node$\\\"}) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\", node=~\\\"^$Node$\\\"})\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Total memory usage \",\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",node=~\\\"^$Node$\\\"}) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\", node=~\\\"^$Node$\\\"})\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \" Total Memory Demand \",\n          \"refId\": \"B\",\n          \"step\": 10\n        }\n      ],\n      \"title\": \" Overall core usage \",\n      \"type\": \"bargauge\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"decimals\": 1,\n          \"mappings\": [],\n          \"max\": 1,\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"rgba(50, 172, 45, 0.97)\",\n                \"value\": null\n              },\n              {\n                \"color\": \"rgba(237, 129, 40, 0.89)\",\n                \"value\": 0.8\n              },\n              {\n                \"color\": \"rgba(245, 54, 54, 0.9)\",\n                \"value\": 0.99\n              }\n            ]\n          },\n          \"unit\": \"percentunit\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 4,\n        \"w\": 4,\n        \"x\": 4,\n        \"y\": 1\n      },\n      \"id\": 45,\n      \"links\": [],\n      \"options\": {\n        \"displayMode\": \"basic\",\n        \"minVizHeight\": 10,\n        \"minVizWidth\": 0,\n        \"orientation\": \"vertical\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"showUnfilled\": true,\n        \"text\": {}\n      },\n      \"pluginVersion\": \"9.0.1\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (irate(container_cpu_usage_seconds_total{origin_prometheus=~\\\"$origin_prometheus\\\",container!=\\\"\\\",node=~\\\"^$Node$\\\"}[2m])) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\", node=~\\\"^$Node$\\\"})\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"CPU Request Rate \",\n          \"refId\": \"C\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",node=~\\\"^$Node$\\\"}) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\", node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"CPU total memory \",\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",node=~\\\"^$Node$\\\"}) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\", node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"CPU Nodes \",\n          \"refId\": \"B\"\n        }\n      ],\n      \"title\": \" container CPU proportion \",\n      \"type\": \"bargauge\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"description\": \" Memory Request Rate ， container POD core ， container POD disk \",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"mappings\": [],\n          \"max\": 1000,\n          \"min\": 1,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"#EAB839\",\n                \"value\": 1000\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 2000\n              }\n            ]\n          },\n          \"unit\": \"none\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 4,\n        \"w\": 3,\n        \"x\": 8,\n        \"y\": 1\n      },\n      \"id\": 74,\n      \"options\": {\n        \"displayMode\": \"basic\",\n        \"minVizHeight\": 10,\n        \"minVizWidth\": 0,\n        \"orientation\": \"vertical\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"showUnfilled\": true,\n        \"text\": {}\n      },\n      \"pluginVersion\": \"9.0.1\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"count(kube_node_info{origin_prometheus=~\\\"$origin_prometheus\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Total Cores \",\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"count(kube_pod_info{origin_prometheus=~\\\"$origin_prometheus\\\",created_by_kind!~\\\"\u003cnone\u003e|Job\\\",node=~\\\"^$Node$\\\"})\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"Pod core \",\n          \"refId\": \"B\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"pods\\\", unit=\\\"integer\\\",node=~\\\"^$Node$\\\"})\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" disk Pod\",\n          \"refId\": \"C\"\n        }\n      ],\n      \"title\": \" microservice Pod\",\n      \"type\": \"bargauge\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"custom\": {\n            \"align\": \"center\",\n            \"displayMode\": \"auto\",\n            \"filterable\": false,\n            \"inspect\": false\n          },\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" use \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 130\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"Pod\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 21\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"SVC\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 7\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" usage \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 61\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" memory \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 52\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" request \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 51\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 7,\n        \"x\": 11,\n        \"y\": 1\n      },\n      \"id\": 51,\n      \"options\": {\n        \"footer\": {\n          \"fields\": \"\",\n          \"reducer\": [\n            \"sum\"\n          ],\n          \"show\": false\n        },\n        \"showHeader\": true,\n        \"sortBy\": [\n          {\n            \"desc\": false,\n            \"displayName\": \" use \"\n          }\n        ]\n      },\n      \"pluginVersion\": \"9.0.1\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"count(kube_pod_info{origin_prometheus=~\\\"$origin_prometheus\\\",node=~\\\"^$Node$\\\"}) by (namespace)\",\n          \"format\": \"table\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"count(kube_service_info{origin_prometheus=~\\\"$origin_prometheus\\\"}) by(namespace)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"C\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"count(count(kube_pod_container_info{origin_prometheus=~\\\"$origin_prometheus\\\"}) by(container,namespace))by(namespace)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"D\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"count(kube_configmap_info{origin_prometheus=~\\\"$origin_prometheus\\\"}) by(namespace)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"configmap\",\n          \"refId\": \"B\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"count(kube_secret_info{origin_prometheus=~\\\"$origin_prometheus\\\"}) by(namespace)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"secret\",\n          \"refId\": \"E\"\n        }\n      ],\n      \"title\": \" average memory \",\n      \"transformations\": [\n        {\n          \"id\": \"seriesToColumns\",\n          \"options\": {\n            \"byField\": \"namespace\"\n          }\n        },\n        {\n          \"id\": \"organize\",\n          \"options\": {\n            \"excludeByName\": {\n              \"Time 1\": true,\n              \"Time 2\": true,\n              \"Time 3\": true,\n              \"Time 4\": true,\n              \"Time 5\": true\n            },\n            \"indexByName\": {\n              \"Time 1\": 2,\n              \"Time 2\": 4,\n              \"Time 3\": 6,\n              \"Value #A\": 3,\n              \"Value #C\": 5,\n              \"Value #D\": 1,\n              \"namespace\": 0\n            },\n            \"renameByName\": {\n              \"Time 1\": \"\",\n              \"Time 2\": \"\",\n              \"Value #A\": \"Pod\",\n              \"Value #B\": \" memory \",\n              \"Value #C\": \"SVC\",\n              \"Value #D\": \" usage \",\n              \"Value #E\": \" request \",\n              \"namespace\": \" use \"\n            }\n          }\n        }\n      ],\n      \"type\": \"table\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"links\": []\n        },\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 6,\n        \"x\": 18,\n        \"y\": 1\n      },\n      \"height\": \"200px\",\n      \"hiddenSeries\": false,\n      \"id\": 32,\n      \"isNew\": true,\n      \"legend\": {\n        \"alignAsTable\": false,\n        \"avg\": true,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": false,\n        \"show\": false,\n        \"sideWidth\": 200,\n        \"sort\": \"current\",\n        \"sortDesc\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"9.0.1\",\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (rate(container_network_receive_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}[2m]))*8\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \" inflow \",\n          \"metric\": \"network\",\n          \"refId\": \"A\",\n          \"step\": 10\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (rate(container_network_transmit_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}[2m]))*8\",\n          \"instant\": false,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \" status \",\n          \"metric\": \"network\",\n          \"refId\": \"B\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": [],\n      \"timeRegions\": [],\n      \"title\": \"$NameSpace： selected nodes （ Associating nodes and namespaces ）\",\n      \"tooltip\": {\n        \"msResolution\": false,\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"mode\": \"time\",\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:750\",\n          \"format\": \"binbps\",\n          \"logBase\": 1,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:751\",\n          \"format\": \"Bps\",\n          \"logBase\": 1,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false\n      }\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"decimals\": 1,\n          \"mappings\": [],\n          \"max\": 1000000000000,\n          \"min\": 1,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"#EAB839\",\n                \"value\": 800000000000\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1000000000000\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 4,\n        \"w\": 4,\n        \"x\": 0,\n        \"y\": 5\n      },\n      \"id\": 71,\n      \"options\": {\n        \"displayMode\": \"basic\",\n        \"minVizHeight\": 10,\n        \"minVizWidth\": 0,\n        \"orientation\": \"vertical\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"showUnfilled\": true,\n        \"text\": {}\n      },\n      \"pluginVersion\": \"9.0.1\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\", node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Requests \",\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (container_memory_working_set_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container!=\\\"\\\",node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Nodes \",\n          \"refId\": \"C\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" total disk \",\n          \"refId\": \"D\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" limit rate \",\n          \"refId\": \"B\"\n        }\n      ],\n      \"title\": \" Resource comprehensive display \",\n      \"type\": \"bargauge\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"decimals\": 1,\n          \"mappings\": [],\n          \"max\": 500,\n          \"min\": 1,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"#EAB839\",\n                \"value\": 500\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1000\n              }\n            ]\n          },\n          \"unit\": \"locale\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 4,\n        \"w\": 4,\n        \"x\": 4,\n        \"y\": 5\n      },\n      \"id\": 72,\n      \"options\": {\n        \"displayMode\": \"basic\",\n        \"minVizHeight\": 10,\n        \"minVizWidth\": 0,\n        \"orientation\": \"vertical\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"showUnfilled\": true,\n        \"text\": {}\n      },\n      \"pluginVersion\": \"9.0.1\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\", node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" usage \",\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (irate(container_cpu_usage_seconds_total{origin_prometheus=~\\\"$origin_prometheus\\\",id=\\\"/\\\",node=~\\\"^$Node$\\\"}[2m]))\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Nodes \",\n          \"refId\": \"C\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" total disk \",\n          \"refId\": \"D\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" limit rate \",\n          \"refId\": \"B\"\n        }\n      ],\n      \"title\": \" container CPU node \",\n      \"type\": \"bargauge\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"decimals\": 2,\n          \"mappings\": [],\n          \"max\": 8000000000000,\n          \"min\": 1,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"#EAB839\",\n                \"value\": 5000000000000\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 10000000000000\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Request Rate \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"unit\",\n                \"value\": \"percentunit\"\n              },\n              {\n                \"id\": \"max\",\n                \"value\": 1\n              },\n              {\n                \"id\": \"min\",\n                \"value\": 0\n              },\n              {\n                \"id\": \"thresholds\",\n                \"value\": {\n                  \"mode\": \"percentage\",\n                  \"steps\": [\n                    {\n                      \"color\": \"green\",\n                      \"value\": null\n                    },\n                    {\n                      \"color\": \"orange\",\n                      \"value\": 80\n                    },\n                    {\n                      \"color\": \"red\",\n                      \"value\": 90\n                    }\n                  ]\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 4,\n        \"w\": 3,\n        \"x\": 8,\n        \"y\": 5\n      },\n      \"id\": 73,\n      \"options\": {\n        \"displayMode\": \"basic\",\n        \"minVizHeight\": 10,\n        \"minVizWidth\": 0,\n        \"orientation\": \"vertical\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"showUnfilled\": true,\n        \"text\": {}\n      },\n      \"pluginVersion\": \"9.0.1\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (container_fs_usage_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",device=~\\\"^/dev/.*$\\\",id=\\\"/\\\",node=~\\\"^$Node$\\\"}) / sum (container_fs_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",device=~\\\"^/dev/.*$\\\",id=\\\"/\\\",node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Request Rate \",\n          \"refId\": \"C\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (container_fs_usage_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",device=~\\\"^/dev/.*$\\\",id=\\\"/\\\",node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Nodes \",\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (container_fs_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",device=~\\\"^/dev/.*$\\\",id=\\\"/\\\",node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" name \",\n          \"refId\": \"B\"\n        }\n      ],\n      \"title\": \" Node memory ratio \",\n      \"type\": \"bargauge\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"custom\": {\n            \"align\": \"center\",\n            \"displayMode\": \"auto\",\n            \"filterable\": false,\n            \"inspect\": false\n          },\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"Pod\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 51\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" include \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 70\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"CPU limit ( number )\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 63\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"CPU total \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 78\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"CPU total \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 58\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" memory request \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 78\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Total Memory \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 76\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Network bandwidth \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 83\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" English version \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 120\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" container name \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 84\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" config %\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 92\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Memory Usage %\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 63\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Network bandwidth %\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 59\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"CPU limit %\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 81\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"CPU max %\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 77\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"CPU total %\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 112\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" English version %\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 72\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byRegexp\",\n              \"options\": \".*%\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"unit\",\n                \"value\": \"percentunit\"\n              },\n              {\n                \"id\": \"thresholds\",\n                \"value\": {\n                  \"mode\": \"percentage\",\n                  \"steps\": [\n                    {\n                      \"color\": \"green\",\n                      \"value\": null\n                    },\n                    {\n                      \"color\": \"orange\",\n                      \"value\": 80\n                    },\n                    {\n                      \"color\": \"red\",\n                      \"value\": 90\n                    }\n                  ]\n                }\n              },\n              {\n                \"id\": \"custom.displayMode\",\n                \"value\": \"color-background\"\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byRegexp\",\n              \"options\": \"( memory request | Total Memory | Memory Usage | Network bandwidth | English version | container name )\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"unit\",\n                \"value\": \"bytes\"\n              },\n              {\n                \"id\": \"decimals\",\n                \"value\": 2\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" container \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 109\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" memory request %\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 67\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Memory Usage \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 75\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"CPU max \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 58\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byRegexp\",\n              \"options\": \"(CPU total | Total Memory | container name |Pod disk )\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.displayMode\",\n                \"value\": \"color-background\"\n              },\n              {\n                \"id\": \"thresholds\",\n                \"value\": {\n                  \"mode\": \"absolute\",\n                  \"steps\": [\n                    {\n                      \"color\": \"blue\",\n                      \"value\": null\n                    }\n                  ]\n                }\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"Pod disk \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 79\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byRegexp\",\n              \"options\": \"CPU limit \\\\( number \\\\)$| memory request $| English version $\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.displayMode\",\n                \"value\": \"color-text\"\n              },\n              {\n                \"id\": \"color\",\n                \"value\": {\n                  \"fixedColor\": \"orange\",\n                  \"mode\": \"fixed\"\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 9\n      },\n      \"id\": 52,\n      \"options\": {\n        \"footer\": {\n          \"fields\": \"\",\n          \"reducer\": [\n            \"sum\"\n          ],\n          \"show\": false\n        },\n        \"showHeader\": true,\n        \"sortBy\": [\n          {\n            \"desc\": false,\n            \"displayName\": \" English version \"\n          }\n        ]\n      },\n      \"pluginVersion\": \"9.0.1\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"count(kube_pod_info{origin_prometheus=~\\\"$origin_prometheus\\\",created_by_kind!~\\\"\u003cnone\u003e|Job\\\",node=~\\\"^$Node$\\\"}) by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"pod core \",\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"kube_node_status_condition{origin_prometheus=~\\\"$origin_prometheus\\\",status=\\\"true\\\",node=~\\\"^$Node$\\\"}  == 1\",\n          \"format\": \"table\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" include \",\n          \"refId\": \"B\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (irate(container_cpu_usage_seconds_total{origin_prometheus=~\\\"$origin_prometheus\\\",container!=\\\"\\\",node=~\\\"^$Node$\\\"}[2m])) by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"I\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\", node=~\\\"^$Node$\\\"} - 0\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"C\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",node=~\\\"^$Node$\\\"}) by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"E\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",node=~\\\"^$Node$\\\"}) by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"F\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (container_memory_working_set_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container!=\\\"\\\",node=~\\\"^$Node$\\\"}) by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"J\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\", node=~\\\"^$Node$\\\"}) by (node) - 0\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"D\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",node=~\\\"^$Node$\\\"}) by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"G\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",node=~\\\"^$Node$\\\"}) by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"H\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (container_fs_usage_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",device=~\\\"^/dev/.*$\\\",id=\\\"/\\\",node=~\\\"^$Node$\\\"}) by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"K\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (container_fs_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",device=~\\\"^/dev/.*$\\\",id=\\\"/\\\",node=~\\\"^$Node$\\\"}) by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"L\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (container_memory_working_set_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container!=\\\"\\\",node=~\\\"^$Node$\\\"})by (node) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\", node=~\\\"^$Node$\\\"})by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" memory request %\",\n          \"refId\": \"M\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",node=~\\\"^$Node$\\\"})by (node) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\", node=~\\\"^$Node$\\\"})by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Memory Usage %\",\n          \"refId\": \"N\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",node=~\\\"^$Node$\\\"})by (node) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\", node=~\\\"^$Node$\\\"})by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Network bandwidth %\",\n          \"refId\": \"O\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (irate(container_cpu_usage_seconds_total{origin_prometheus=~\\\"$origin_prometheus\\\",container!=\\\"\\\",node=~\\\"^$Node$\\\"}[2m]))by (node) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\", node=~\\\"^$Node$\\\"})by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"CPU limit %\",\n          \"refId\": \"P\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",node=~\\\"^$Node$\\\"})by (node) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\", node=~\\\"^$Node$\\\"})by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"CPU max %\",\n          \"refId\": \"Q\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",node=~\\\"^$Node$\\\"})by (node) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\", node=~\\\"^$Node$\\\"})by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Network bandwidth %\",\n          \"refId\": \"R\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (container_fs_usage_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",device=~\\\"^/dev/.*$\\\",id=\\\"/\\\",node=~\\\"^$Node$\\\"})by (node) / sum (container_fs_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",device=~\\\"^/dev/.*$\\\",id=\\\"/\\\",node=~\\\"^$Node$\\\"})by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" English version %\",\n          \"refId\": \"S\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"pods\\\", unit=\\\"integer\\\",node=~\\\"^$Node$\\\"})by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"Pod disk \",\n          \"refId\": \"T\"\n        }\n      ],\n      \"title\": \"$Node： Node memory details \",\n      \"transformations\": [\n        {\n          \"id\": \"merge\",\n          \"options\": {}\n        },\n        {\n          \"id\": \"organize\",\n          \"options\": {\n            \"excludeByName\": {\n              \"Time\": true,\n              \"Time 1\": true,\n              \"Time 10\": true,\n              \"Time 11\": true,\n              \"Time 12\": true,\n              \"Time 13\": true,\n              \"Time 14\": true,\n              \"Time 15\": true,\n              \"Time 16\": true,\n              \"Time 17\": true,\n              \"Time 18\": true,\n              \"Time 19\": true,\n              \"Time 2\": true,\n              \"Time 20\": true,\n              \"Time 3\": true,\n              \"Time 4\": true,\n              \"Time 5\": true,\n              \"Time 6\": true,\n              \"Time 7\": true,\n              \"Time 8\": true,\n              \"Time 9\": true,\n              \"Value #B\": true,\n              \"Value #E\": false,\n              \"Value #F\": false,\n              \"__name__\": true,\n              \"app_kubernetes_io_name\": true,\n              \"app_kubernetes_io_name 1\": true,\n              \"app_kubernetes_io_name 2\": true,\n              \"app_kubernetes_io_name 3\": true,\n              \"app_kubernetes_io_version\": true,\n              \"app_kubernetes_io_version 1\": true,\n              \"app_kubernetes_io_version 2\": true,\n              \"app_kubernetes_io_version 3\": true,\n              \"condition\": false,\n              \"instance\": true,\n              \"instance 1\": true,\n              \"instance 2\": true,\n              \"instance 3\": true,\n              \"job\": true,\n              \"job 1\": true,\n              \"job 2\": true,\n              \"job 3\": true,\n              \"k8s_namespace\": true,\n              \"k8s_namespace 1\": true,\n              \"k8s_namespace 2\": true,\n              \"k8s_namespace 3\": true,\n              \"k8s_sname\": true,\n              \"k8s_sname 1\": true,\n              \"k8s_sname 2\": true,\n              \"k8s_sname 3\": true,\n              \"origin_prometheus\": true,\n              \"origin_prometheus 1\": true,\n              \"origin_prometheus 2\": true,\n              \"origin_prometheus 3\": true,\n              \"resource\": true,\n              \"status\": true,\n              \"unit\": true\n            },\n            \"indexByName\": {\n              \"Time\": 26,\n              \"Value #A\": 3,\n              \"Value #B\": 6,\n              \"Value #C\": 7,\n              \"Value #D\": 14,\n              \"Value #E\": 10,\n              \"Value #F\": 12,\n              \"Value #G\": 17,\n              \"Value #H\": 19,\n              \"Value #I\": 8,\n              \"Value #J\": 15,\n              \"Value #K\": 22,\n              \"Value #L\": 21,\n              \"Value #M\": 16,\n              \"Value #N\": 18,\n              \"Value #O\": 20,\n              \"Value #P\": 9,\n              \"Value #Q\": 11,\n              \"Value #R\": 13,\n              \"Value #S\": 23,\n              \"Value #T\": 2,\n              \"__name__\": 4,\n              \"app_kubernetes_io_name\": 27,\n              \"app_kubernetes_io_version\": 28,\n              \"condition\": 1,\n              \"instance\": 29,\n              \"job\": 30,\n              \"k8s_namespace\": 31,\n              \"k8s_sname\": 32,\n              \"node\": 0,\n              \"origin_prometheus\": 33,\n              \"resource\": 24,\n              \"status\": 5,\n              \"unit\": 25\n            },\n            \"renameByName\": {\n              \"Value #A\": \"Pod\",\n              \"Value #C\": \"CPU total \",\n              \"Value #D\": \" Total Memory \",\n              \"Value #E\": \"CPU max \",\n              \"Value #F\": \"CPU total \",\n              \"Value #G\": \" Memory Usage \",\n              \"Value #H\": \" Network bandwidth \",\n              \"Value #I\": \"CPU limit ( number )\",\n              \"Value #J\": \" memory request \",\n              \"Value #K\": \" English version \",\n              \"Value #L\": \" container name \",\n              \"Value #M\": \" memory request %\",\n              \"Value #N\": \" Memory Usage %\",\n              \"Value #O\": \" Network bandwidth %\",\n              \"Value #P\": \"CPU limit %\",\n              \"Value #Q\": \"CPU max %\",\n              \"Value #R\": \"CPU total %\",\n              \"Value #S\": \" English version %\",\n              \"Value #T\": \"Pod disk \",\n              \"condition\": \" include \",\n              \"node\": \" container \"\n            }\n          }\n        },\n        {\n          \"id\": \"filterFieldsByName\",\n          \"options\": {}\n        }\n      ],\n      \"type\": \"table\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"fill\": 0,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 8,\n        \"x\": 0,\n        \"y\": 12\n      },\n      \"hiddenSeries\": false,\n      \"id\": 75,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"max\": true,\n        \"min\": false,\n        \"rightSide\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"9.0.1\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [\n        {\n          \"$$hashKey\": \"object:2068\",\n          \"alias\": \"/ usage .*/\",\n          \"color\": \"#C4162A\"\n        }\n      ],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (irate(container_cpu_usage_seconds_total{origin_prometheus=~\\\"$origin_prometheus\\\",container!=\\\"\\\",node=~\\\"^$Node$\\\"}[2m]))by (node) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\", node=~\\\"^$Node$\\\"})by (node)*100\",\n          \"format\": \"time_series\",\n          \"hide\": false,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{node}}\",\n          \"refId\": \"I\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeRegions\": [],\n      \"title\": \"$Node： container CPU receive \",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"transformations\": [],\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"mode\": \"time\",\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:1711\",\n          \"format\": \"percent\",\n          \"logBase\": 1,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:1712\",\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"fill\": 0,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 8,\n        \"x\": 8,\n        \"y\": 12\n      },\n      \"hiddenSeries\": false,\n      \"id\": 76,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"max\": true,\n        \"min\": false,\n        \"rightSide\": false,\n        \"show\": true,\n        \"sort\": \"current\",\n        \"sortDesc\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"9.0.1\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (container_memory_working_set_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container!=\\\"\\\",node=~\\\"^$Node$\\\"})by (node) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\", node=~\\\"^$Node$\\\"})by (node)*100\",\n          \"format\": \"time_series\",\n          \"hide\": false,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{node}}\",\n          \"refId\": \"I\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeRegions\": [],\n      \"title\": \"$Node： Node Memory Information \",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"transformations\": [],\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"mode\": \"time\",\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:1711\",\n          \"format\": \"percent\",\n          \"logBase\": 1,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:1712\",\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"links\": []\n        },\n        \"overrides\": []\n      },\n      \"fill\": 0,\n      \"fillGradient\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 8,\n        \"x\": 16,\n        \"y\": 12\n      },\n      \"height\": \"200px\",\n      \"hiddenSeries\": false,\n      \"id\": 78,\n      \"isNew\": true,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"max\": true,\n        \"min\": false,\n        \"rightSide\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"9.0.1\",\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (irate(container_network_receive_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",node=~\\\"^$Node$\\\"}[2m]))by (node) *8\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \" update :{{node}}\",\n          \"metric\": \"network\",\n          \"refId\": \"A\",\n          \"step\": 10\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (irate(container_network_transmit_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",node=~\\\"^$Node$\\\"}[2m]))by (node) *8\",\n          \"instant\": false,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \" restart :{{node}}\",\n          \"metric\": \"network\",\n          \"refId\": \"B\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": [],\n      \"timeRegions\": [],\n      \"title\": \"$Node： Overall resource overview \",\n      \"tooltip\": {\n        \"msResolution\": false,\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"mode\": \"time\",\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:750\",\n          \"format\": \"binbps\",\n          \"logBase\": 1,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:751\",\n          \"format\": \"Bps\",\n          \"logBase\": 1,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false\n      }\n    },\n    {\n      \"collapsed\": false,\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 22\n      },\n      \"id\": 61,\n      \"panels\": [],\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \" usage ( container number ) Memory Requirements ： Associated nodes :【$Container】\",\n      \"type\": \"row\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"custom\": {\n            \"align\": \"center\",\n            \"displayMode\": \"auto\",\n            \"filterable\": false,\n            \"inspect\": false\n          },\n          \"displayName\": \"\",\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"percentage\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"orange\",\n                \"value\": 70\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 90\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byRegexp\",\n              \"options\": \".*%.*\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"unit\",\n                \"value\": \"percent\"\n              },\n              {\n                \"id\": \"custom.displayMode\",\n                \"value\": \"gradient-gauge\"\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byRegexp\",\n              \"options\": \" Requests .*\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"unit\",\n                \"value\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Number of cluster nodes \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"unit\",\n                \"value\": \"bytes\"\n              },\n              {\n                \"id\": \"thresholds\",\n                \"value\": {\n                  \"mode\": \"absolute\",\n                  \"steps\": [\n                    {\n                      \"color\": \"green\",\n                      \"value\": null\n                    },\n                    {\n                      \"color\": \"orange\",\n                      \"value\": 10737418240\n                    },\n                    {\n                      \"color\": \"red\",\n                      \"value\": 16106127360\n                    }\n                  ]\n                }\n              },\n              {\n                \"id\": \"custom.displayMode\",\n                \"value\": \"color-background\"\n              },\n              {\n                \"id\": \"custom.width\",\n                \"value\": 90\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byRegexp\",\n              \"options\": \".* total \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"color\",\n                \"value\": {\n                  \"fixedColor\": \"blue\",\n                  \"mode\": \"fixed\"\n                }\n              },\n              {\n                \"id\": \"custom.displayMode\",\n                \"value\": \"color-background\"\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" total CPU total \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 84\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Total Disk Usage \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 77\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Selected microservices (RSS) \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 119\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Total memory limit \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 82\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" limit amount \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 69\n              },\n              {\n                \"id\": \"thresholds\",\n                \"value\": {\n                  \"mode\": \"absolute\",\n                  \"steps\": [\n                    {\n                      \"color\": \"orange\",\n                      \"value\": null\n                    },\n                    {\n                      \"color\": \"green\",\n                      \"value\": 2\n                    }\n                  ]\n                }\n              },\n              {\n                \"id\": \"custom.displayMode\",\n                \"value\": \"color-background\"\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Resource Details %(RSS)\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 112\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" password CPU%( overall 100%)\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 150\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Node Network Overview \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 100\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" total CPU selected \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 82\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Resource Details %(WSS)\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 130\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Selected microservices (WSS)\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 120\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" average memory \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 107\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byRegexp\",\n              \"options\": \" Node Network Overview $| Selected microservices \\\\(WSS\\\\)$| Selected microservices \\\\(RSS\\\\) $\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"color\",\n                \"value\": {\n                  \"fixedColor\": \"orange\",\n                  \"mode\": \"fixed\"\n                }\n              },\n              {\n                \"id\": \"custom.displayMode\",\n                \"value\": \"color-text\"\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" container number \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 149\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 23\n      },\n      \"id\": 57,\n      \"options\": {\n        \"footer\": {\n          \"fields\": \"\",\n          \"reducer\": [\n            \"sum\"\n          ],\n          \"show\": false\n        },\n        \"showHeader\": true,\n        \"sortBy\": [\n          {\n            \"desc\": true,\n            \"displayName\": \" container number \"\n          }\n        ]\n      },\n      \"pluginVersion\": \"9.0.1\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(irate(container_cpu_usage_seconds_total{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}[2m])) by (container) / (sum(container_spec_cpu_quota{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}/100000) by (container)) * 100\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(irate(container_cpu_usage_seconds_total{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}[2m])) by (container)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Node Network Overview \",\n          \"refId\": \"L\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container)\",\n          \"format\": \"table\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"C\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (container_memory_working_set_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container)/ sum(container_spec_memory_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container) * 100\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"I\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (container_memory_working_set_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"D\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (container_memory_rss{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container)/ sum(container_spec_memory_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container) * 100\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Resource Details %(RSS)\",\n          \"refId\": \"H\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (container_memory_rss{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Selected microservices (RSS) \",\n          \"refId\": \"K\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"E\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"F\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum(container_fs_usage_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container)\",\n          \"format\": \"table\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"J\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"count(kube_pod_container_info{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by(container,namespace) - 0\",\n          \"format\": \"table\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"G\"\n        }\n      ],\n      \"title\": \" usage ( container number ) namespace \",\n      \"transformations\": [\n        {\n          \"id\": \"merge\",\n          \"options\": {}\n        },\n        {\n          \"id\": \"organize\",\n          \"options\": {\n            \"excludeByName\": {\n              \"Time\": true,\n              \"Time 1\": true,\n              \"Time 10\": true,\n              \"Time 11\": true,\n              \"Time 12\": true,\n              \"Time 2\": true,\n              \"Time 3\": true,\n              \"Time 4\": true,\n              \"Time 5\": true,\n              \"Time 6\": true,\n              \"Time 7\": true,\n              \"Time 8\": true,\n              \"Time 9\": true\n            },\n            \"indexByName\": {\n              \"Time 1\": 2,\n              \"Time 10\": 20,\n              \"Time 11\": 22,\n              \"Time 12\": 24,\n              \"Time 2\": 4,\n              \"Time 3\": 6,\n              \"Time 4\": 8,\n              \"Time 5\": 10,\n              \"Time 6\": 12,\n              \"Time 7\": 14,\n              \"Time 8\": 16,\n              \"Time 9\": 18,\n              \"Value #A\": 3,\n              \"Value #B\": 7,\n              \"Value #C\": 9,\n              \"Value #D\": 13,\n              \"Value #E\": 19,\n              \"Value #F\": 21,\n              \"Value #G\": 25,\n              \"Value #H\": 15,\n              \"Value #I\": 11,\n              \"Value #J\": 23,\n              \"Value #K\": 17,\n              \"Value #L\": 5,\n              \"container\": 1,\n              \"namespace\": 0\n            },\n            \"renameByName\": {\n              \"Time 1\": \"\",\n              \"Value #A\": \" password CPU%( overall 100%)\",\n              \"Value #B\": \" total CPU selected \",\n              \"Value #C\": \" total CPU total \",\n              \"Value #D\": \" Selected microservices (WSS)\",\n              \"Value #E\": \" Total memory limit \",\n              \"Value #F\": \" Total Disk Usage \",\n              \"Value #G\": \" limit amount \",\n              \"Value #H\": \" Resource Details %(RSS)\",\n              \"Value #I\": \" Resource Details %(WSS)\",\n              \"Value #J\": \" Number of cluster nodes \",\n              \"Value #K\": \" Selected microservices (RSS) \",\n              \"Value #L\": \" Node Network Overview \",\n              \"container\": \" container number \",\n              \"namespace\": \" average memory \"\n            }\n          }\n        },\n        {\n          \"id\": \"filterFieldsByName\",\n          \"options\": {}\n        }\n      ],\n      \"type\": \"table\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"decimals\": 3,\n      \"editable\": true,\n      \"error\": false,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"links\": []\n        },\n        \"overrides\": []\n      },\n      \"fill\": 0,\n      \"fillGradient\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 9,\n        \"w\": 8,\n        \"x\": 0,\n        \"y\": 31\n      },\n      \"height\": \"\",\n      \"hiddenSeries\": false,\n      \"id\": 24,\n      \"isNew\": true,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"hideEmpty\": false,\n        \"hideZero\": false,\n        \"max\": true,\n        \"min\": true,\n        \"rightSide\": false,\n        \"show\": true,\n        \"sort\": \"current\",\n        \"sortDesc\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"9.0.1\",\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum(rate(container_cpu_usage_seconds_total{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}[2m])) by (container) / (sum(container_spec_cpu_quota{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}/100000) by (container)) * 100\",\n          \"hide\": false,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{ container}}\",\n          \"metric\": \"container_cpu\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": [],\n      \"timeRegions\": [],\n      \"title\": \" usage ( container number ) password CPU Request Rate ( overall 100%)\",\n      \"tooltip\": {\n        \"msResolution\": true,\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"mode\": \"time\",\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:5607\",\n          \"format\": \"percent\",\n          \"label\": \"\",\n          \"logBase\": 1,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:5608\",\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"links\": []\n        },\n        \"overrides\": []\n      },\n      \"fill\": 0,\n      \"fillGradient\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 9,\n        \"w\": 8,\n        \"x\": 8,\n        \"y\": 31\n      },\n      \"hiddenSeries\": false,\n      \"id\": 59,\n      \"isNew\": true,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"max\": true,\n        \"min\": true,\n        \"rightSide\": false,\n        \"show\": true,\n        \"sort\": \"current\",\n        \"sortDesc\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"9.0.1\",\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (container_memory_working_set_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container)/ sum(container_spec_memory_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container) * 100\",\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"WSS：{{ container }}\",\n          \"metric\": \"container_memory_usage:sort_desc\",\n          \"refId\": \"A\",\n          \"step\": 10\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (container_memory_rss{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container)/ sum(container_spec_memory_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container) * 100\",\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"RSS：{{ container }}\",\n          \"metric\": \"container_memory_usage:sort_desc\",\n          \"refId\": \"B\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": [],\n      \"timeRegions\": [],\n      \"title\": \" usage ( container number ) Microservice resource details \",\n      \"tooltip\": {\n        \"msResolution\": false,\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"mode\": \"time\",\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:5686\",\n          \"format\": \"percent\",\n          \"logBase\": 1,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:5687\",\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false\n      }\n    },\n    {\n      \"aliasColors\": {\n        \" restart :wholion-lbs\": \"green\",\n        \" update :wholion-lbs\": \"purple\"\n      },\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"links\": []\n        },\n        \"overrides\": []\n      },\n      \"fill\": 0,\n      \"fillGradient\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 9,\n        \"w\": 8,\n        \"x\": 16,\n        \"y\": 31\n      },\n      \"hiddenSeries\": false,\n      \"id\": 16,\n      \"isNew\": true,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"max\": true,\n        \"min\": false,\n        \"rightSide\": false,\n        \"show\": true,\n        \"sort\": \"current\",\n        \"sortDesc\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"9.0.1\",\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(sum(irate(container_network_receive_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",image!=\\\"\\\",name=~\\\"^k8s_.*\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\",pod=~\\\".*$Container.*\\\"}[2m])) by (pod)* on(pod) group_right kube_pod_container_info) by(container) *8\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \" update :{{ container }}\",\n          \"metric\": \"network\",\n          \"refId\": \"A\",\n          \"step\": 10\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(sum(irate(container_network_transmit_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",image!=\\\"\\\",name=~\\\"^k8s_.*\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\",pod=~\\\".*$Container.*\\\"}[2m])) by (pod)* on(pod) group_right kube_pod_container_info) by(container) *8\",\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \" restart :{{ container }}\",\n          \"metric\": \"network\",\n          \"refId\": \"B\",\n          \"step\": 10\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (rate (container_network_receive_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",image!=\\\"\\\",name=~\\\"^k8s_.*\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\",pod=~\\\".*$Container.*\\\"}[2m])) by (pod)\",\n          \"hide\": true,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"-\u003e {{ pod }}\",\n          \"metric\": \"network\",\n          \"refId\": \"C\",\n          \"step\": 10\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"- sum (rate (container_network_transmit_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",image!=\\\"\\\",name=~\\\"^k8s_.*\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\",pod=~\\\".*$Container.*\\\"}[2m])) by (pod)\",\n          \"hide\": true,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"\u003c- {{ pod }}\",\n          \"metric\": \"network\",\n          \"refId\": \"D\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": [],\n      \"timeRegions\": [],\n      \"title\": \" usage ( container number ) Container memory usage ( Memory Usage )\",\n      \"tooltip\": {\n        \"msResolution\": false,\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"mode\": \"time\",\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:8106\",\n          \"format\": \"binbps\",\n          \"logBase\": 1,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:8107\",\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false\n      }\n    },\n    {\n      \"collapsed\": true,\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 40\n      },\n      \"id\": 49,\n      \"panels\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"fieldConfig\": {\n            \"defaults\": {\n              \"color\": {\n                \"mode\": \"thresholds\"\n              },\n              \"custom\": {\n                \"align\": \"center\",\n                \"displayMode\": \"auto\",\n                \"filterable\": false\n              },\n              \"displayName\": \"\",\n              \"mappings\": [],\n              \"thresholds\": {\n                \"mode\": \"percentage\",\n                \"steps\": [\n                  {\n                    \"color\": \"green\"\n                  },\n                  {\n                    \"color\": \"#EAB839\",\n                    \"value\": 80\n                  },\n                  {\n                    \"color\": \"red\",\n                    \"value\": 90\n                  }\n                ]\n              },\n              \"unit\": \"short\"\n            },\n            \"overrides\": [\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \"CPU%( overall 100%)\"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 140\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \" average memory \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 78\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \"Pod core count \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 136\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \" core usage \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 71\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \"CPU selected \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 68\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \"CPU total \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 65\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \"WSS%\"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 129\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \"WSS\"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 73\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \"RSS%\"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 132\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \"RSS\"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 68\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \" resource statistics \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 69\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \" Network bandwidth \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 71\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \" send \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 67\n                  },\n                  {\n                    \"id\": \"thresholds\",\n                    \"value\": {\n                      \"mode\": \"absolute\",\n                      \"steps\": [\n                        {\n                          \"color\": \"green\"\n                        },\n                        {\n                          \"color\": \"#EAB839\",\n                          \"value\": 1\n                        },\n                        {\n                          \"color\": \"red\",\n                          \"value\": 3\n                        }\n                      ]\n                    }\n                  },\n                  {\n                    \"id\": \"custom.displayMode\",\n                    \"value\": \"color-background\"\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \" demand \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 71\n                  },\n                  {\n                    \"id\": \"unit\",\n                    \"value\": \"bytes\"\n                  },\n                  {\n                    \"id\": \"thresholds\",\n                    \"value\": {\n                      \"mode\": \"absolute\",\n                      \"steps\": [\n                        {\n                          \"color\": \"green\"\n                        },\n                        {\n                          \"color\": \"#EAB839\",\n                          \"value\": 10737418240\n                        },\n                        {\n                          \"color\": \"red\",\n                          \"value\": 16106127360\n                        }\n                      ]\n                    }\n                  },\n                  {\n                    \"id\": \"custom.displayMode\",\n                    \"value\": \"color-background\"\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byRegexp\",\n                  \"options\": \".*%.*\"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"unit\",\n                    \"value\": \"percent\"\n                  },\n                  {\n                    \"id\": \"custom.displayMode\",\n                    \"value\": \"gradient-gauge\"\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byRegexp\",\n                  \"options\": \" config .*|WSS$|RSS$\"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"unit\",\n                    \"value\": \"bytes\"\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byRegexp\",\n                  \"options\": \".* total \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"color\",\n                    \"value\": {\n                      \"fixedColor\": \"blue\",\n                      \"mode\": \"fixed\"\n                    }\n                  },\n                  {\n                    \"id\": \"custom.displayMode\",\n                    \"value\": \"color-background\"\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \" container \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 87\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byRegexp\",\n                  \"options\": \" core usage $|WSS$|RSS$\"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.displayMode\",\n                    \"value\": \"color-text\"\n                  },\n                  {\n                    \"id\": \"color\",\n                    \"value\": {\n                      \"fixedColor\": \"orange\",\n                      \"mode\": \"fixed\"\n                    }\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \" container number \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 116\n                  }\n                ]\n              }\n            ]\n          },\n          \"gridPos\": {\n            \"h\": 8,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 3\n          },\n          \"id\": 47,\n          \"options\": {\n            \"showHeader\": true,\n            \"sortBy\": []\n          },\n          \"pluginVersion\": \"7.5.11\",\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum(irate(container_cpu_usage_seconds_total{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}[2m])) by (container, pod,node,namespace) / (sum(container_spec_cpu_quota{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}/100000) by (container, pod,node,namespace)) * 100\",\n              \"format\": \"table\",\n              \"hide\": false,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"\",\n              \"refId\": \"A\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum(irate(container_cpu_usage_seconds_total{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}[2m])) by (container, pod,node,namespace)\",\n              \"format\": \"table\",\n              \"hide\": false,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"CPU disk usage \",\n              \"refId\": \"Q\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container,pod,node,namespace)\",\n              \"format\": \"table\",\n              \"hide\": false,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"\",\n              \"refId\": \"B\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container,pod,node,namespace)\",\n              \"format\": \"table\",\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"\",\n              \"refId\": \"C\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum (container_memory_working_set_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container, pod,node,namespace)/ sum(container_spec_memory_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container, pod,node,namespace) * 100\",\n              \"format\": \"table\",\n              \"hide\": false,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"wss%\",\n              \"refId\": \"I\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum (container_memory_working_set_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container, pod,node,namespace)\",\n              \"format\": \"table\",\n              \"hide\": false,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"wss\",\n              \"refId\": \"D\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum (container_memory_rss{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container, pod,node,namespace)/ sum(container_spec_memory_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container, pod,node,namespace) * 100\",\n              \"format\": \"table\",\n              \"hide\": false,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"rss%\",\n              \"refId\": \"L\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum (container_memory_rss{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container, pod,node,namespace)\",\n              \"format\": \"table\",\n              \"hide\": false,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"rss\",\n              \"refId\": \"K\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container,pod,node,namespace)\",\n              \"format\": \"table\",\n              \"hide\": false,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"\",\n              \"refId\": \"E\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container,pod,node,namespace)\",\n              \"format\": \"table\",\n              \"hide\": false,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"\",\n              \"refId\": \"F\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum(container_fs_usage_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container,pod,node,namespace)\",\n              \"format\": \"table\",\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"\",\n              \"refId\": \"J\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"kube_pod_container_status_restarts_total{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"} * on (pod) group_left(node) kube_pod_info{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}\",\n              \"format\": \"table\",\n              \"hide\": false,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"\",\n              \"refId\": \"H\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"cass_jvm_heap{service=~\\\"$Container\\\"} * on (pod_ip) group_right(service) kube_pod_info{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",namespace=~\\\"$NameSpace\\\"}\",\n              \"format\": \"table\",\n              \"hide\": true,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"\",\n              \"refId\": \"M\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"cass_jvm_heap_max{service=~\\\"$Container\\\"} * on (pod_ip) group_right(service) kube_pod_info{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",namespace=~\\\"$NameSpace\\\"}\",\n              \"format\": \"table\",\n              \"hide\": true,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"\",\n              \"refId\": \"N\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"expr\": \"cass_jvm_noheap{service=~\\\"$Container\\\"} * on (pod_ip) group_right(service) kube_pod_info{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",namespace=~\\\"$NameSpace\\\"}\",\n              \"format\": \"table\",\n              \"hide\": true,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"\",\n              \"refId\": \"O\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"expr\": \"cass_jvm_noheap_max{service=~\\\"$Container\\\"} * on (pod_ip) group_right(service) kube_pod_info{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",namespace=~\\\"$NameSpace\\\"}\",\n              \"format\": \"table\",\n              \"hide\": true,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"\",\n              \"refId\": \"P\"\n            }\n          ],\n          \"title\": \"$Node：Pod Memory Limit ( Memory Usage )\",\n          \"transformations\": [\n            {\n              \"id\": \"merge\",\n              \"options\": {}\n            },\n            {\n              \"id\": \"organize\",\n              \"options\": {\n                \"excludeByName\": {\n                  \"Time\": true,\n                  \"Time 1\": true,\n                  \"Time 10\": true,\n                  \"Time 11\": true,\n                  \"Time 12\": true,\n                  \"Time 13\": true,\n                  \"Time 2\": true,\n                  \"Time 3\": true,\n                  \"Time 4\": true,\n                  \"Time 5\": true,\n                  \"Time 6\": true,\n                  \"Time 7\": true,\n                  \"Time 8\": true,\n                  \"Time 9\": true,\n                  \"Value #G\": true,\n                  \"__name__\": true,\n                  \"app_kubernetes_io_name\": true,\n                  \"app_kubernetes_io_name 1\": true,\n                  \"app_kubernetes_io_name 2\": true,\n                  \"app_kubernetes_io_version\": true,\n                  \"app_kubernetes_io_version 1\": true,\n                  \"app_kubernetes_io_version 2\": true,\n                  \"container 1\": true,\n                  \"container 10\": true,\n                  \"container 11\": true,\n                  \"container 12\": true,\n                  \"container 2\": true,\n                  \"container 3\": true,\n                  \"container 4\": true,\n                  \"container 5\": true,\n                  \"container 6\": true,\n                  \"container 7\": true,\n                  \"container 8\": true,\n                  \"container 9\": true,\n                  \"created_by_kind\": true,\n                  \"created_by_name\": true,\n                  \"host_ip\": true,\n                  \"instance\": true,\n                  \"instance 1\": true,\n                  \"instance 2\": true,\n                  \"job\": true,\n                  \"job 1\": true,\n                  \"job 2\": true,\n                  \"k8s_namespace\": true,\n                  \"k8s_namespace 1\": true,\n                  \"k8s_namespace 2\": true,\n                  \"k8s_sname\": true,\n                  \"k8s_sname 1\": true,\n                  \"k8s_sname 2\": true,\n                  \"namespace\": false,\n                  \"namespace 1\": true,\n                  \"namespace 10\": true,\n                  \"namespace 11\": true,\n                  \"namespace 12\": false,\n                  \"namespace 2\": true,\n                  \"namespace 3\": true,\n                  \"namespace 4\": true,\n                  \"namespace 5\": true,\n                  \"namespace 6\": true,\n                  \"namespace 7\": true,\n                  \"namespace 8\": true,\n                  \"namespace 9\": true,\n                  \"node 1\": true,\n                  \"node 10\": true,\n                  \"node 11\": false,\n                  \"node 12\": true,\n                  \"node 2\": true,\n                  \"node 3\": true,\n                  \"node 4\": true,\n                  \"node 5\": true,\n                  \"node 6\": true,\n                  \"node 7\": true,\n                  \"node 8\": true,\n                  \"node 9\": true,\n                  \"origin_prometheus\": true,\n                  \"origin_prometheus 1\": true,\n                  \"origin_prometheus 2\": true,\n                  \"phase\": true,\n                  \"pod_ip\": true,\n                  \"priority_class\": true,\n                  \"uid\": true\n                },\n                \"indexByName\": {\n                  \"Time\": 23,\n                  \"Value #A\": 4,\n                  \"Value #B\": 6,\n                  \"Value #C\": 7,\n                  \"Value #D\": 9,\n                  \"Value #E\": 12,\n                  \"Value #F\": 13,\n                  \"Value #H\": 22,\n                  \"Value #I\": 8,\n                  \"Value #J\": 14,\n                  \"Value #K\": 11,\n                  \"Value #L\": 10,\n                  \"Value #Q\": 5,\n                  \"app_kubernetes_io_name\": 15,\n                  \"app_kubernetes_io_version\": 16,\n                  \"container\": 2,\n                  \"instance\": 17,\n                  \"job\": 18,\n                  \"k8s_namespace\": 19,\n                  \"k8s_sname\": 20,\n                  \"namespace\": 1,\n                  \"node\": 0,\n                  \"origin_prometheus\": 21,\n                  \"pod\": 3\n                },\n                \"renameByName\": {\n                  \"Value #A\": \"CPU%( overall 100%)\",\n                  \"Value #B\": \"CPU selected \",\n                  \"Value #C\": \"CPU total \",\n                  \"Value #D\": \"WSS\",\n                  \"Value #E\": \" resource statistics \",\n                  \"Value #F\": \" Network bandwidth \",\n                  \"Value #H\": \" send \",\n                  \"Value #I\": \"WSS%\",\n                  \"Value #J\": \" demand \",\n                  \"Value #K\": \"RSS\",\n                  \"Value #L\": \"RSS%\",\n                  \"Value #Q\": \" core usage \",\n                  \"container\": \" container number \",\n                  \"namespace\": \" average memory \",\n                  \"namespace 1\": \"\",\n                  \"namespace 12\": \" average memory \",\n                  \"node\": \" container \",\n                  \"node 1\": \"\",\n                  \"node 11\": \" container \",\n                  \"pod\": \"Pod core count \",\n                  \"priority_class\": \"\"\n                }\n              }\n            },\n            {\n              \"id\": \"filterFieldsByName\",\n              \"options\": {\n                \"include\": {\n                  \"names\": [\n                    \" container \",\n                    \" average memory \",\n                    \"Pod core count \",\n                    \"CPU%( overall 100%)\",\n                    \" core usage \",\n                    \"CPU selected \",\n                    \"CPU total \",\n                    \"WSS%\",\n                    \"WSS\",\n                    \"RSS%\",\n                    \"RSS\",\n                    \" resource statistics \",\n                    \" Network bandwidth \",\n                    \" demand \",\n                    \" send \",\n                    \" container number \"\n                  ]\n                }\n              }\n            }\n          ],\n          \"type\": \"table\"\n        },\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"decimals\": 2,\n          \"editable\": true,\n          \"error\": false,\n          \"fieldConfig\": {\n            \"defaults\": {\n              \"links\": []\n            },\n            \"overrides\": []\n          },\n          \"fill\": 0,\n          \"fillGradient\": 0,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 9,\n            \"w\": 8,\n            \"x\": 0,\n            \"y\": 11\n          },\n          \"height\": \"\",\n          \"hiddenSeries\": false,\n          \"id\": 58,\n          \"isNew\": true,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": true,\n            \"current\": true,\n            \"hideEmpty\": false,\n            \"hideZero\": false,\n            \"max\": true,\n            \"min\": false,\n            \"rightSide\": false,\n            \"show\": true,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 1,\n          \"links\": [],\n          \"nullPointMode\": \"null\",\n          \"options\": {\n            \"alertThreshold\": true\n          },\n          \"percentage\": false,\n          \"pluginVersion\": \"7.5.11\",\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": false,\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum(irate(container_cpu_usage_seconds_total{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}[2m])) by (container, pod) / (sum(container_spec_cpu_quota{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}/100000) by (container, pod)) * 100\",\n              \"hide\": false,\n              \"instant\": false,\n              \"interval\": \"\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"{{ pod }}\",\n              \"metric\": \"container_cpu\",\n              \"refId\": \"A\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeRegions\": [],\n          \"title\": \"Pod upper limit CPU Request Rate ( overall 100% Memory Usage )\",\n          \"tooltip\": {\n            \"msResolution\": true,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"mode\": \"time\",\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"$$hashKey\": \"object:5607\",\n              \"format\": \"percent\",\n              \"label\": \"\",\n              \"logBase\": 1,\n              \"show\": true\n            },\n            {\n              \"$$hashKey\": \"object:5608\",\n              \"format\": \"short\",\n              \"logBase\": 1,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false\n          }\n        },\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"decimals\": 2,\n          \"editable\": true,\n          \"error\": false,\n          \"fieldConfig\": {\n            \"defaults\": {\n              \"links\": []\n            },\n            \"overrides\": []\n          },\n          \"fill\": 0,\n          \"fillGradient\": 0,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 9,\n            \"w\": 8,\n            \"x\": 8,\n            \"y\": 11\n          },\n          \"hiddenSeries\": false,\n          \"id\": 27,\n          \"isNew\": true,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": false,\n            \"current\": true,\n            \"max\": true,\n            \"min\": false,\n            \"rightSide\": false,\n            \"show\": true,\n            \"sort\": \"current\",\n            \"sortDesc\": false,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"null\",\n          \"options\": {\n            \"alertThreshold\": true\n          },\n          \"percentage\": false,\n          \"pluginVersion\": \"7.5.11\",\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": false,\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum (container_memory_working_set_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container, pod)/ sum(container_spec_memory_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container, pod) * 100\",\n              \"interval\": \"\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"WSS：{{ pod }}\",\n              \"metric\": \"container_memory_usage:sort_desc\",\n              \"refId\": \"A\",\n              \"step\": 10\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum (container_memory_rss{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container, pod)/ sum(container_spec_memory_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container, pod) * 100\",\n              \"interval\": \"\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"RSS：{{ pod }}\",\n              \"metric\": \"container_memory_usage:sort_desc\",\n              \"refId\": \"B\",\n              \"step\": 10\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"(cass_jvm_heap{service=~\\\"$Container\\\"} * on (pod_ip) group_right(service) kube_pod_info{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",namespace=~\\\"$NameSpace\\\"}) / (cass_jvm_heap_max{service=~\\\"$Container\\\"} * on (pod_ip) group_right(service) kube_pod_info{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",namespace=~\\\"$NameSpace\\\"}) * 100\",\n              \"instant\": false,\n              \"interval\": \"\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"Heap：{{ pod }}\",\n              \"metric\": \"container_memory_usage:sort_desc\",\n              \"refId\": \"C\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeRegions\": [],\n          \"title\": \"Pod View more dashboards ( Memory Usage )\",\n          \"tooltip\": {\n            \"msResolution\": false,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"mode\": \"time\",\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"$$hashKey\": \"object:5686\",\n              \"format\": \"percent\",\n              \"logBase\": 1,\n              \"max\": \"100\",\n              \"show\": true\n            },\n            {\n              \"$$hashKey\": \"object:5687\",\n              \"format\": \"short\",\n              \"logBase\": 1,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false\n          }\n        },\n        {\n          \"aliasColors\": {\n            \" restart :wholion-lbs\": \"green\",\n            \" update :wholion-lbs\": \"purple\"\n          },\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"decimals\": 2,\n          \"editable\": true,\n          \"error\": false,\n          \"fieldConfig\": {\n            \"defaults\": {\n              \"links\": []\n            },\n            \"overrides\": []\n          },\n          \"fill\": 0,\n          \"fillGradient\": 0,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 9,\n            \"w\": 8,\n            \"x\": 16,\n            \"y\": 11\n          },\n          \"hiddenSeries\": false,\n          \"id\": 77,\n          \"isNew\": true,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": true,\n            \"current\": true,\n            \"max\": true,\n            \"min\": false,\n            \"rightSide\": false,\n            \"show\": true,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 1,\n          \"links\": [],\n          \"nullPointMode\": \"null\",\n          \"options\": {\n            \"alertThreshold\": true\n          },\n          \"percentage\": false,\n          \"pluginVersion\": \"7.5.11\",\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": false,\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum(sum(irate(container_network_receive_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",image!=\\\"\\\",name=~\\\"^k8s_.*\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\",pod=~\\\".*$Container.*\\\"}[2m])) by (pod)* on(pod) group_right kube_pod_container_info) by(pod) *8\",\n              \"hide\": false,\n              \"interval\": \"\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \" update :{{ pod}}\",\n              \"metric\": \"network\",\n              \"refId\": \"A\",\n              \"step\": 10\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum(sum(irate(container_network_transmit_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",image!=\\\"\\\",name=~\\\"^k8s_.*\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\",pod=~\\\".*$Container.*\\\"}[2m])) by (pod)* on(pod) group_right kube_pod_container_info) by(pod) *8\",\n              \"interval\": \"\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \" restart :{{ pod}}\",\n              \"metric\": \"network\",\n              \"refId\": \"B\",\n              \"step\": 10\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"expr\": \"sum (rate (container_network_receive_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",image!=\\\"\\\",name=~\\\"^k8s_.*\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\",pod=~\\\".*$Container.*\\\"}[2m])) by (pod)\",\n              \"hide\": true,\n              \"interval\": \"\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"-\u003e {{ pod }}\",\n              \"metric\": \"network\",\n              \"refId\": \"C\",\n              \"step\": 10\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"expr\": \"- sum (rate (container_network_transmit_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",image!=\\\"\\\",name=~\\\"^k8s_.*\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\",pod=~\\\".*$Container.*\\\"}[2m])) by (pod)\",\n              \"hide\": true,\n              \"interval\": \"\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"\u003c- {{ pod }}\",\n              \"metric\": \"network\",\n              \"refId\": \"D\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeRegions\": [],\n          \"title\": \"Pod Container memory usage ( Memory Usage )\",\n          \"tooltip\": {\n            \"msResolution\": false,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"mode\": \"time\",\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"$$hashKey\": \"object:8106\",\n              \"format\": \"binbps\",\n              \"logBase\": 1,\n              \"show\": true\n            },\n            {\n              \"$$hashKey\": \"object:8107\",\n              \"format\": \"short\",\n              \"logBase\": 1,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false\n          }\n        }\n      ],\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Pod Memory Requirements ： space Pod:【$Pod】\",\n      \"type\": \"row\"\n    }\n  ],\n  \"refresh\": \"\",\n  \"schemaVersion\": 36,\n  \"style\": \"dark\",\n  \"tags\": [\n    \"Prometheus\",\n    \"Kubernetes\"\n  ],\n  \"templating\": {\n    \"list\": [\n      {\n        \"allValue\": \"\",\n        \"current\": {\n          \"isNone\": true,\n          \"selected\": false,\n          \"text\": \"None\",\n          \"value\": \"\"\n        },\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"prometheus\"\n        },\n        \"definition\": \"label_values(origin_prometheus)\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"K8S\",\n        \"multi\": false,\n        \"name\": \"origin_prometheus\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(origin_prometheus)\",\n          \"refId\": \"Prometheus-origin_prometheus-Variable-Query\"\n        },\n        \"refresh\": 2,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 5,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"allValue\": \"\",\n        \"current\": {\n          \"selected\": false,\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"prometheus\"\n        },\n        \"definition\": \"label_values(kube_node_info{origin_prometheus=~\\\"$origin_prometheus\\\"},node)\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \" container \",\n        \"multi\": false,\n        \"name\": \"Node\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(kube_node_info{origin_prometheus=~\\\"$origin_prometheus\\\"},node)\",\n          \"refId\": \"Prometheus-Node-Variable-Query\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 5,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"allValue\": \"\",\n        \"current\": {\n          \"selected\": false,\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"prometheus\"\n        },\n        \"definition\": \"label_values(kube_namespace_labels{origin_prometheus=~\\\"$origin_prometheus\\\"},namespace)\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \" average memory \",\n        \"multi\": false,\n        \"name\": \"NameSpace\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(kube_namespace_labels{origin_prometheus=~\\\"$origin_prometheus\\\"},namespace)\",\n          \"refId\": \"Prometheus-NameSpace-Variable-Query\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 5,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"allValue\": \".*\",\n        \"current\": {\n          \"selected\": true,\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"prometheus\"\n        },\n        \"definition\": \"label_values(kube_pod_container_info{origin_prometheus=~\\\"$origin_prometheus\\\",namespace=~\\\"$NameSpace\\\"},container)\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \" usage ( container number )\",\n        \"multi\": false,\n        \"name\": \"Container\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(kube_pod_container_info{origin_prometheus=~\\\"$origin_prometheus\\\",namespace=~\\\"$NameSpace\\\"},container)\",\n          \"refId\": \"Prometheus-Container-Variable-Query\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 5,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"allValue\": \".*\",\n        \"current\": {\n          \"selected\": false,\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"prometheus\"\n        },\n        \"definition\": \"label_values(kube_pod_container_info{origin_prometheus=~\\\"$origin_prometheus\\\",namespace=~\\\"$NameSpace\\\",container=~\\\"$Container\\\"},pod)\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Pod\",\n        \"multi\": false,\n        \"name\": \"Pod\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(kube_pod_container_info{origin_prometheus=~\\\"$origin_prometheus\\\",namespace=~\\\"$NameSpace\\\",container=~\\\"$Container\\\"},pod)\",\n          \"refId\": \"Prometheus-Pod-Variable-Query\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 5,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      }\n    ]\n  },\n  \"time\": {\n    \"from\": \"now-30m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"browser\",\n  \"title\": \"FitBod GKE Dash\",\n  \"uid\": \"PwMJtdvnz\",\n  \"version\": 5,\n  \"weekStart\": \"\"\n}\n"},"metadata":[{"annotations":null,"generate_name":null,"labels":{"grafana_dashboard":"1"},"name":"grafana-dashboards","namespace":"monitoring"}]},"sensitive_values":{"data":{},"metadata":[{"labels":{}}]}},{"address":"kubernetes_deployment.app","mode":"managed","type":"kubernetes_deployment","name":"app","provider_name":"registry.terraform.io/hashicorp/kubernetes","schema_version":1,"values":{"metadata":[{"annotations":null,"generate_name":null,"labels":{"app":"myworkout"},"name":"myworkout","namespace":"default"}],"spec":[{"min_ready_seconds":0,"paused":false,"progress_deadline_seconds":600,"revision_history_limit":10,"selector":[{"match_expressions":[],"match_labels":{"app":"myworkout"}}],"template":[{"metadata":[{"annotations":null,"generate_name":null,"labels":{"app":"myworkout"},"name":"myworkout","namespace":null}],"spec":[{"active_deadline_seconds":null,"affinity":[],"automount_service_account_token":true,"container":[{"args":null,"command":["/bin/bash","-c","bundle exec rails s -b 0.0.0.0 -p 3001"],"env":[],"env_from":[{"config_map_ref":[{"name":"myworkout-config","optional":null}],"prefix":null,"secret_ref":[]}],"image":"fitbodinc/my_workout:0.1.0","image_pull_policy":"IfNotPresent","lifecycle":[],"liveness_probe":[],"name":"myworkout","port":[{"container_port":3001,"host_ip":null,"host_port":null,"name":null,"protocol":"TCP"}],"readiness_probe":[],"resources":[{"limits":{"cpu":"250m","memory":"512Mi"},"requests":{"cpu":"150m","memory":"128Mi"}}],"security_context":[],"startup_probe":[],"stdin":false,"stdin_once":false,"termination_message_path":"/dev/termination-log","tty":false,"volume_mount":[{"mount_path":"/app/public/assets","mount_propagation":"None","name":"app-pv","read_only":false,"sub_path":null}],"working_dir":null}],"dns_config":[],"dns_policy":"ClusterFirst","enable_service_links":true,"host_aliases":[],"host_ipc":false,"host_network":false,"host_pid":false,"init_container":[],"node_selector":null,"priority_class_name":null,"restart_policy":"Always","security_context":[],"share_process_namespace":false,"subdomain":null,"termination_grace_period_seconds":30,"toleration":[],"topology_spread_constraint":[],"volume":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"config_map":[],"csi":[],"downward_api":[],"empty_dir":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[],"git_repo":[],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"name":"app-pv","nfs":[],"persistent_volume_claim":[{"claim_name":"app-pvc","read_only":false}],"photon_persistent_disk":[],"projected":[],"quobyte":[],"rbd":[],"secret":[],"vsphere_volume":[]}]}]}]}],"timeouts":{"create":"2m","delete":"2m","update":null},"wait_for_rollout":true},"sensitive_values":{"metadata":[{"labels":{}}],"spec":[{"selector":[{"match_expressions":[],"match_labels":{}}],"strategy":[],"template":[{"metadata":[{"labels":{}}],"spec":[{"affinity":[],"container":[{"command":[false,false,false],"env":[],"env_from":[{"config_map_ref":[{}],"secret_ref":[]}],"lifecycle":[],"liveness_probe":[],"port":[{}],"readiness_probe":[],"resources":[{"limits":{},"requests":{}}],"security_context":[],"startup_probe":[],"volume_mount":[{}]}],"dns_config":[],"host_aliases":[],"image_pull_secrets":[],"init_container":[],"readiness_gate":[],"security_context":[],"toleration":[],"topology_spread_constraint":[],"volume":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"config_map":[],"csi":[],"downward_api":[],"empty_dir":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[],"git_repo":[],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"nfs":[],"persistent_volume_claim":[{}],"photon_persistent_disk":[],"projected":[],"quobyte":[],"rbd":[],"secret":[],"vsphere_volume":[]}]}]}]}],"timeouts":{}}},{"address":"kubernetes_ingress_v1.ingress_app","mode":"managed","type":"kubernetes_ingress_v1","name":"ingress_app","provider_name":"registry.terraform.io/hashicorp/kubernetes","schema_version":0,"values":{"metadata":[{"annotations":{"kubernetes.io/ingress.class":"nginx","nginx.ingress.kubernetes.io/server-snippet":"set_real_ip_from 0.0.0.0/0; real_ip_header X-Forwarded-For;"},"generate_name":null,"labels":null,"name":"ingress-nginx","namespace":"default"}],"spec":[{"default_backend":[],"ingress_class_name":null,"rule":[{"host":null,"http":[{"path":[{"backend":[{"resource":[],"service":[{"name":"app-frontend","port":[{"name":null,"number":3001}]}]}],"path":"/","path_type":"Prefix"}]}]}],"tls":[]}],"wait_for_load_balancer":true},"sensitive_values":{"metadata":[{"annotations":{}}],"spec":[{"default_backend":[],"rule":[{"http":[{"path":[{"backend":[{"resource":[],"service":[{"port":[{}]}]}]}]}]}],"tls":[]}],"status":[]}},{"address":"kubernetes_job.grafana_set_main_dash[0]","mode":"managed","type":"kubernetes_job","name":"grafana_set_main_dash","index":0,"provider_name":"registry.terraform.io/hashicorp/kubernetes","schema_version":1,"values":{"metadata":[{"annotations":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"grafana","helm.sh/hook":"post-install","helm.sh/hook-delete-policy":"hook-succeeded","helm.sh/hook-weight":"-5"},"generate_name":null,"labels":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"monitoring"},"name":"prometheus-grafana","namespace":"monitoring"}],"spec":[{"active_deadline_seconds":null,"backoff_limit":null,"completions":1,"manual_selector":null,"parallelism":1,"template":[{"metadata":[{"annotations":null,"generate_name":null,"labels":null}],"spec":[{"active_deadline_seconds":null,"affinity":[],"automount_service_account_token":true,"container":[{"command":["/bin/sh","-c"],"env":[],"env_from":[],"image":"appropriate/curl:latest","image_pull_policy":"IfNotPresent","lifecycle":[],"liveness_probe":[],"name":"prometheus-grafana-set-main-dash","port":[],"readiness_probe":[],"security_context":[],"startup_probe":[],"stdin":false,"stdin_once":false,"termination_message_path":"/dev/termination-log","tty":false,"volume_mount":[],"working_dir":null}],"dns_config":[],"dns_policy":"ClusterFirst","enable_service_links":true,"host_aliases":[],"host_ipc":false,"host_network":false,"host_pid":false,"init_container":[],"node_selector":null,"priority_class_name":null,"restart_policy":"OnFailure","security_context":[],"share_process_namespace":false,"subdomain":null,"termination_grace_period_seconds":30,"toleration":[],"topology_spread_constraint":[]}]}],"ttl_seconds_after_finished":null}],"timeouts":{"create":"1m","delete":"2m","update":null},"wait_for_completion":true},"sensitive_values":{"metadata":[{"annotations":{},"labels":{}}],"spec":[{"selector":[],"template":[{"metadata":[{}],"spec":[{"affinity":[],"container":[{"args":[],"command":[false,false],"env":[],"env_from":[],"lifecycle":[],"liveness_probe":[],"port":[],"readiness_probe":[],"resources":[],"security_context":[],"startup_probe":[],"volume_mount":[]}],"dns_config":[],"host_aliases":[],"image_pull_secrets":[],"init_container":[],"readiness_gate":[],"security_context":[],"toleration":[],"topology_spread_constraint":[],"volume":[]}]}]}],"timeouts":{}}},{"address":"kubernetes_job.init_app[0]","mode":"managed","type":"kubernetes_job","name":"init_app","index":0,"provider_name":"registry.terraform.io/hashicorp/kubernetes","schema_version":1,"values":{"metadata":[{"annotations":null,"generate_name":null,"labels":{"app":"myworkout"},"name":"myworkout-init","namespace":"default"}],"spec":[{"active_deadline_seconds":null,"backoff_limit":null,"completions":1,"manual_selector":null,"parallelism":1,"template":[{"metadata":[{"annotations":null,"generate_name":null,"labels":null}],"spec":[{"active_deadline_seconds":null,"affinity":[],"automount_service_account_token":true,"container":[{"args":["                  bundle exec rake assets:precompile\n                  # This is a very rudimentary way to check if records are already in the database.\n                  bundle exec rake db:create\n                  count=$(psql -U \"$POSTGRES_USER\" -d my_workout_production -h \"$POSTGRES_HOST\" -AXqtc \"SELECT reltuples AS estimate FROM pg_class where relname ='single_sets'\")\n                  if [[ \"$count\" -eq 0 ]]; then\n                          bundle exec rake db:migrate db:seed\n                  elif [[ -z \"$count\" ]]; then\n                          bundle exec rake db:create db:migrate db:seed\n                  else\n                          bundle exec rake db:migrate\n                  fi\n                  readarray -td: ADMIN \u003c \u003c(printf '%s' \"$admin\")\n                  readarray -td: USER1 \u003c \u003c(printf '%s' \"$user1\")\n                  bundle exec rails runner \"AdminUser.find_by_email('${ADMIN[0]}').update_attributes(:password =\u003e '${ADMIN[1]}')\"\n                  bundle exec rails runner \"User.find_by_email('${USER1[0]}').update_attributes(:password =\u003e '${USER1[1]}')\"\n"],"command":["/bin/bash","-c"],"env":[{"name":"admin","value":null,"value_from":[{"config_map_key_ref":[],"field_ref":[],"resource_field_ref":[],"secret_key_ref":[{"key":"login","name":"app-pass-admin","optional":null}]}]},{"name":"user1","value":null,"value_from":[{"config_map_key_ref":[],"field_ref":[],"resource_field_ref":[],"secret_key_ref":[{"key":"login","name":"app-pass-user1","optional":null}]}]}],"env_from":[{"config_map_ref":[{"name":"myworkout-config","optional":null}],"prefix":null,"secret_ref":[]}],"image":"fitbodinc/my_workout:0.1.0","image_pull_policy":"IfNotPresent","lifecycle":[],"liveness_probe":[],"name":"myworkout-init","port":[],"readiness_probe":[],"security_context":[],"startup_probe":[],"stdin":false,"stdin_once":false,"termination_message_path":"/dev/termination-log","tty":false,"volume_mount":[{"mount_path":"/app/public/assets","mount_propagation":"None","name":"app-pv","read_only":false,"sub_path":null}],"working_dir":null}],"dns_config":[],"dns_policy":"ClusterFirst","enable_service_links":true,"host_aliases":[],"host_ipc":false,"host_network":false,"host_pid":false,"init_container":[],"node_selector":null,"priority_class_name":null,"restart_policy":"Never","security_context":[],"share_process_namespace":false,"subdomain":null,"termination_grace_period_seconds":30,"toleration":[],"topology_spread_constraint":[],"volume":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"config_map":[],"csi":[],"downward_api":[],"empty_dir":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[],"git_repo":[],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"name":"app-pv","nfs":[],"persistent_volume_claim":[{"claim_name":"app-pvc","read_only":false}],"photon_persistent_disk":[],"projected":[],"quobyte":[],"rbd":[],"secret":[],"vsphere_volume":[]}]}]}],"ttl_seconds_after_finished":null}],"timeouts":{"create":"3m","delete":"2m","update":null},"wait_for_completion":true},"sensitive_values":{"metadata":[{"labels":{}}],"spec":[{"selector":[],"template":[{"metadata":[{}],"spec":[{"affinity":[],"container":[{"args":[false],"command":[false,false],"env":[{"value_from":[{"config_map_key_ref":[],"field_ref":[],"resource_field_ref":[],"secret_key_ref":[{}]}]},{"value_from":[{"config_map_key_ref":[],"field_ref":[],"resource_field_ref":[],"secret_key_ref":[{}]}]}],"env_from":[{"config_map_ref":[{}],"secret_ref":[]}],"lifecycle":[],"liveness_probe":[],"port":[],"readiness_probe":[],"resources":[],"security_context":[],"startup_probe":[],"volume_mount":[{}]}],"dns_config":[],"host_aliases":[],"image_pull_secrets":[],"init_container":[],"readiness_gate":[],"security_context":[],"toleration":[],"topology_spread_constraint":[],"volume":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"config_map":[],"csi":[],"downward_api":[],"empty_dir":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[],"git_repo":[],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"nfs":[],"persistent_volume_claim":[{}],"photon_persistent_disk":[],"projected":[],"quobyte":[],"rbd":[],"secret":[],"vsphere_volume":[]}]}]}]}],"timeouts":{}}},{"address":"kubernetes_persistent_volume.app_pv","mode":"managed","type":"kubernetes_persistent_volume","name":"app_pv","provider_name":"registry.terraform.io/hashicorp/kubernetes","schema_version":0,"values":{"metadata":[{"annotations":null,"labels":null,"name":"app-pv"}],"spec":[{"access_modes":["ReadWriteMany"],"capacity":{"storage":"0.25"},"mount_options":null,"persistent_volume_reclaim_policy":"Retain","persistent_volume_source":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"csi":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[{"fs_type":"ext4","partition":null,"pd_name":"app","read_only":null}],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"nfs":[],"photon_persistent_disk":[],"quobyte":[],"rbd":[],"vsphere_volume":[]}],"storage_class_name":"standard","volume_mode":"Filesystem"}],"timeouts":null},"sensitive_values":{"metadata":[{}],"spec":[{"access_modes":[false],"capacity":{},"claim_ref":[],"node_affinity":[],"persistent_volume_source":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"csi":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[{}],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"nfs":[],"photon_persistent_disk":[],"quobyte":[],"rbd":[],"vsphere_volume":[]}]}]}},{"address":"kubernetes_persistent_volume.grafana_pv","mode":"managed","type":"kubernetes_persistent_volume","name":"grafana_pv","provider_name":"registry.terraform.io/hashicorp/kubernetes","schema_version":0,"values":{"metadata":[{"annotations":null,"labels":null,"name":"grafana-pv"}],"spec":[{"access_modes":["ReadWriteMany"],"capacity":{"storage":"0.25"},"mount_options":null,"persistent_volume_reclaim_policy":"Retain","persistent_volume_source":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"csi":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[{"fs_type":"ext4","partition":null,"pd_name":"monitoring","read_only":null}],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"nfs":[],"photon_persistent_disk":[],"quobyte":[],"rbd":[],"vsphere_volume":[]}],"storage_class_name":"standard","volume_mode":"Filesystem"}],"timeouts":null},"sensitive_values":{"metadata":[{}],"spec":[{"access_modes":[false],"capacity":{},"claim_ref":[],"node_affinity":[],"persistent_volume_source":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"csi":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[{}],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"nfs":[],"photon_persistent_disk":[],"quobyte":[],"rbd":[],"vsphere_volume":[]}]}]}},{"address":"kubernetes_persistent_volume.prom_pv","mode":"managed","type":"kubernetes_persistent_volume","name":"prom_pv","provider_name":"registry.terraform.io/hashicorp/kubernetes","schema_version":0,"values":{"metadata":[{"annotations":null,"labels":null,"name":"prom-pv"}],"spec":[{"access_modes":["ReadWriteMany"],"capacity":{"storage":"0.25"},"mount_options":null,"persistent_volume_reclaim_policy":"Retain","persistent_volume_source":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"csi":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[{"fs_type":"ext4","partition":null,"pd_name":"monitoring","read_only":null}],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"nfs":[],"photon_persistent_disk":[],"quobyte":[],"rbd":[],"vsphere_volume":[]}],"storage_class_name":"standard-rwo","volume_mode":"Filesystem"}],"timeouts":null},"sensitive_values":{"metadata":[{}],"spec":[{"access_modes":[false],"capacity":{},"claim_ref":[],"node_affinity":[],"persistent_volume_source":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"csi":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[{}],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"nfs":[],"photon_persistent_disk":[],"quobyte":[],"rbd":[],"vsphere_volume":[]}]}]}},{"address":"kubernetes_persistent_volume_claim.app_pvc","mode":"managed","type":"kubernetes_persistent_volume_claim","name":"app_pvc","provider_name":"registry.terraform.io/hashicorp/kubernetes","schema_version":0,"values":{"metadata":[{"annotations":null,"generate_name":null,"labels":null,"name":"app-pvc","namespace":"default"}],"spec":[{"access_modes":["ReadWriteMany"],"resources":[{"limits":null,"requests":{"storage":"0.25"}}],"selector":[],"storage_class_name":"standard","volume_name":"app-pv"}],"timeouts":null,"wait_until_bound":true},"sensitive_values":{"metadata":[{}],"spec":[{"access_modes":[false],"resources":[{"requests":{}}],"selector":[]}]}},{"address":"kubernetes_secret.app_secret[\"admin\"]","mode":"managed","type":"kubernetes_secret","name":"app_secret","index":"admin","provider_name":"registry.terraform.io/hashicorp/kubernetes","schema_version":0,"values":{"binary_data":null,"immutable":null,"metadata":[{"annotations":null,"generate_name":null,"labels":null,"name":"app-pass-admin","namespace":"default"}],"type":"Opaque"},"sensitive_values":{"data":{},"metadata":[{}]}},{"address":"kubernetes_secret.app_secret[\"user1\"]","mode":"managed","type":"kubernetes_secret","name":"app_secret","index":"user1","provider_name":"registry.terraform.io/hashicorp/kubernetes","schema_version":0,"values":{"binary_data":null,"immutable":null,"metadata":[{"annotations":null,"generate_name":null,"labels":null,"name":"app-pass-user1","namespace":"default"}],"type":"Opaque"},"sensitive_values":{"data":{},"metadata":[{}]}},{"address":"kubernetes_secret.db","mode":"managed","type":"kubernetes_secret","name":"db","provider_name":"registry.terraform.io/hashicorp/kubernetes","schema_version":0,"values":{"binary_data":null,"immutable":null,"metadata":[{"annotations":null,"generate_name":null,"labels":null,"name":"db","namespace":"default"}],"type":"Opaque"},"sensitive_values":{"data":{},"metadata":[{}]}},{"address":"kubernetes_secret.grafana","mode":"managed","type":"kubernetes_secret","name":"grafana","provider_name":"registry.terraform.io/hashicorp/kubernetes","schema_version":0,"values":{"binary_data":null,"immutable":null,"metadata":[{"annotations":null,"generate_name":null,"labels":null,"name":"grafana","namespace":"default"}],"type":"Opaque"},"sensitive_values":{"data":{},"metadata":[{}]}},{"address":"kubernetes_service.app_frontend","mode":"managed","type":"kubernetes_service","name":"app_frontend","provider_name":"registry.terraform.io/hashicorp/kubernetes","schema_version":1,"values":{"metadata":[{"annotations":null,"generate_name":null,"labels":null,"name":"app-frontend","namespace":"default"}],"spec":[{"allocate_load_balancer_node_ports":true,"external_ips":null,"external_name":null,"load_balancer_class":null,"load_balancer_ip":null,"load_balancer_source_ranges":null,"port":[{"app_protocol":null,"name":null,"port":3001,"protocol":"TCP","target_port":"3001"}],"publish_not_ready_addresses":false,"selector":{"app":"myworkout"},"session_affinity":"None","type":"NodePort"}],"timeouts":null,"wait_for_load_balancer":true},"sensitive_values":{"metadata":[{}],"spec":[{"cluster_ips":[],"ip_families":[],"port":[{}],"selector":{},"session_affinity_config":[]}],"status":[]}},{"address":"null_resource.kubectl","mode":"managed","type":"null_resource","name":"kubectl","provider_name":"registry.terraform.io/hashicorp/null","schema_version":0,"values":{"triggers":null},"sensitive_values":{}},{"address":"random_password.app_pass[\"admin\"]","mode":"managed","type":"random_password","name":"app_pass","index":"admin","provider_name":"registry.terraform.io/hashicorp/random","schema_version":2,"values":{"keepers":null,"length":16,"lower":true,"min_lower":0,"min_numeric":0,"min_special":0,"min_upper":0,"number":true,"numeric":true,"override_special":"_!%","special":true,"upper":true},"sensitive_values":{}},{"address":"random_password.app_pass[\"user1\"]","mode":"managed","type":"random_password","name":"app_pass","index":"user1","provider_name":"registry.terraform.io/hashicorp/random","schema_version":2,"values":{"keepers":null,"length":16,"lower":true,"min_lower":0,"min_numeric":0,"min_special":0,"min_upper":0,"number":true,"numeric":true,"override_special":"_!%","special":true,"upper":true},"sensitive_values":{}},{"address":"random_password.grafana_pass","mode":"managed","type":"random_password","name":"grafana_pass","provider_name":"registry.terraform.io/hashicorp/random","schema_version":2,"values":{"keepers":null,"length":16,"lower":true,"min_lower":0,"min_numeric":0,"min_special":0,"min_upper":0,"number":true,"numeric":true,"override_special":"!%\u0026?","special":true,"upper":true},"sensitive_values":{}}],"child_modules":[{"resources":[{"address":"module.db.google_sql_database.default[0]","mode":"managed","type":"google_sql_database","name":"default","index":0,"provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"charset":"","name":"default","project":"zkhan-1","timeouts":null},"sensitive_values":{}},{"address":"module.db.google_sql_database_instance.default","mode":"managed","type":"google_sql_database_instance","name":"default","provider_name":"registry.terraform.io/hashicorp/google-beta","schema_version":0,"values":{"clone":[],"database_version":"POSTGRES_14","deletion_protection":false,"project":"zkhan-1","region":"us-east1","restore_backup_context":[],"root_password":null,"settings":[{"activation_policy":"ALWAYS","active_directory_config":[],"availability_type":"ZONAL","backup_configuration":[{"binary_log_enabled":false,"enabled":false,"location":null,"point_in_time_recovery_enabled":false}],"collation":null,"database_flags":[],"disk_autoresize":false,"disk_autoresize_limit":0,"disk_size":10,"disk_type":"PD_HDD","insights_config":[],"ip_configuration":[{"allocated_ip_range":null,"authorized_networks":[],"ipv4_enabled":false,"require_ssl":false}],"location_preference":[{"follow_gae_application":null,"secondary_zone":null,"zone":"us-east1-d"}],"maintenance_window":[{"day":1,"hour":23,"update_track":"canary"}],"pricing_plan":"PER_USE","sql_server_audit_config":[],"tier":"db-g1-small"}],"timeouts":{"create":"15m","delete":"5m","update":"5m"}},"sensitive_values":{"clone":[],"ip_address":[],"replica_configuration":[],"restore_backup_context":[],"server_ca_cert":[],"settings":[{"active_directory_config":[],"backup_configuration":[{"backup_retention_settings":[]}],"database_flags":[],"insights_config":[],"ip_configuration":[{"authorized_networks":[]}],"location_preference":[{}],"maintenance_window":[{}],"sql_server_audit_config":[],"user_labels":{}}],"timeouts":{}}},{"address":"module.db.google_sql_user.default[0]","mode":"managed","type":"google_sql_user","name":"default","index":0,"provider_name":"registry.terraform.io/hashicorp/google","schema_version":1,"values":{"deletion_policy":null,"name":"fitbod-adm","project":"zkhan-1","sql_server_user_details":[],"timeouts":null,"type":null},"sensitive_values":{"password":true,"sql_server_user_details":[]}},{"address":"module.db.null_resource.module_depends_on","mode":"managed","type":"null_resource","name":"module_depends_on","provider_name":"registry.terraform.io/hashicorp/null","schema_version":0,"values":{"triggers":{"value":"1"}},"sensitive_values":{"triggers":{}}},{"address":"module.db.random_id.suffix[0]","mode":"managed","type":"random_id","name":"suffix","index":0,"provider_name":"registry.terraform.io/hashicorp/random","schema_version":0,"values":{"byte_length":4,"keepers":null,"prefix":null},"sensitive_values":{}},{"address":"module.db.random_password.user-password","mode":"managed","type":"random_password","name":"user-password","provider_name":"registry.terraform.io/hashicorp/random","schema_version":2,"values":{"length":32,"lower":true,"min_lower":0,"min_numeric":0,"min_special":0,"min_upper":0,"number":true,"numeric":true,"override_special":null,"special":false,"upper":true},"sensitive_values":{"keepers":{}}}],"address":"module.db"},{"address":"module.gcp_network","child_modules":[{"resources":[{"address":"module.gcp_network.module.vpc.google_compute_network.network","mode":"managed","type":"google_compute_network","name":"network","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"auto_create_subnetworks":false,"delete_default_routes_on_create":false,"description":"","enable_ula_internal_ipv6":null,"mtu":0,"name":"dev-fitbod-net","project":"zkhan-1","routing_mode":"GLOBAL","timeouts":null},"sensitive_values":{}}],"address":"module.gcp_network.module.vpc"},{"resources":[{"address":"module.gcp_network.module.subnets.google_compute_subnetwork.subnetwork[\"us-east1/dev-fitbod-subnet\"]","mode":"managed","type":"google_compute_subnetwork","name":"subnetwork","index":"us-east1/dev-fitbod-subnet","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"description":null,"ip_cidr_range":"10.10.0.0/16","ipv6_access_type":null,"log_config":[],"name":"dev-fitbod-subnet","network":"dev-fitbod-net","private_ip_google_access":false,"project":"zkhan-1","region":"us-east1","role":null,"secondary_ip_range":[{"ip_cidr_range":"10.20.0.0/16","range_name":"ip-range-pods"},{"ip_cidr_range":"10.30.0.0/16","range_name":"ip-range-services"}],"timeouts":null},"sensitive_values":{"log_config":[],"secondary_ip_range":[{},{}]}}],"address":"module.gcp_network.module.subnets"}]},{"resources":[{"address":"module.gke.google_compute_firewall.master_webhooks[0]","mode":"managed","type":"google_compute_firewall","name":"master_webhooks","index":0,"provider_name":"registry.terraform.io/hashicorp/google","schema_version":1,"values":{"allow":[{"ports":["8443","9443","15017"],"protocol":"tcp"}],"deny":[],"description":"Managed by terraform gke module: Allow master to hit pods for admission controllers/webhooks","direction":"INGRESS","disabled":null,"log_config":[],"name":"gke-dev-fitbod-gke-webhooks","network":"dev-fitbod-net","priority":1000,"project":"zkhan-1","source_ranges":["10.0.0.0/28"],"source_service_accounts":null,"source_tags":null,"target_service_accounts":null,"target_tags":["gke-dev-fitbod-gke"],"timeouts":null},"sensitive_values":{"allow":[{"ports":[false,false,false]}],"deny":[],"destination_ranges":[],"log_config":[],"source_ranges":[false],"target_tags":[false]}},{"address":"module.gke.google_container_cluster.primary","mode":"managed","type":"google_container_cluster","name":"primary","provider_name":"registry.terraform.io/hashicorp/google-beta","schema_version":1,"values":{"addons_config":[{"config_connector_config":[{"enabled":false}],"dns_cache_config":[{"enabled":false}],"gce_persistent_disk_csi_driver_config":[{"enabled":true}],"gcp_filestore_csi_driver_config":[{"enabled":false}],"horizontal_pod_autoscaling":[{"disabled":false}],"http_load_balancing":[{"disabled":true}],"istio_config":[{"auth":"AUTH_MUTUAL_TLS","disabled":true}],"kalm_config":[{"enabled":false}],"network_policy_config":[{"disabled":true}]}],"cluster_autoscaling":[{"auto_provisioning_defaults":[{"image_type":"COS_CONTAINERD","min_cpu_platform":"","oauth_scopes":["https://www.googleapis.com/auth/cloud-platform"]}],"autoscaling_profile":"BALANCED","enabled":true,"resource_limits":[{"maximum":4,"minimum":2,"resource_type":"cpu"},{"maximum":8,"minimum":2,"resource_type":"memory"}]}],"database_encryption":[{"key_name":"","state":"DECRYPTED"}],"datapath_provider":"ADVANCED_DATAPATH","default_max_pods_per_node":110,"default_snat_status":[{"disabled":false}],"description":"","dns_config":[],"enable_autopilot":null,"enable_binary_authorization":false,"enable_intranode_visibility":false,"enable_kubernetes_alpha":false,"enable_l4_ilb_subsetting":false,"enable_legacy_abac":false,"enable_shielded_nodes":true,"enable_tpu":false,"initial_node_count":null,"ip_allocation_policy":[{"cluster_secondary_range_name":"ip-range-pods","services_secondary_range_name":"ip-range-services"}],"location":"us-east1-d","logging_service":"logging.googleapis.com/kubernetes","maintenance_policy":[{"daily_maintenance_window":[{"start_time":"05:00"}],"maintenance_exclusion":[],"recurring_window":[]}],"master_auth":[{"client_certificate_config":[{"issue_client_certificate":false}]}],"master_authorized_networks_config":[],"min_master_version":"1.24.1-gke.1400","monitoring_service":"monitoring.googleapis.com/kubernetes","name":"dev-fitbod-gke","network":"projects/zkhan-1/global/networks/dev-fitbod-net","network_policy":[{"enabled":false,"provider":null}],"networking_mode":"VPC_NATIVE","node_pool":[{"autoscaling":[],"initial_node_count":0,"name":"default-pool","node_config":[{"boot_disk_kms_key":"","ephemeral_storage_config":[],"gcfs_config":[],"gvnic":[],"image_type":"COS_CONTAINERD","kubelet_config":[],"linux_node_config":[],"machine_type":"e2-highcpu-4","node_group":null,"preemptible":false,"sandbox_config":[],"shielded_instance_config":[{"enable_integrity_monitoring":true,"enable_secure_boot":false}],"spot":false,"tags":["gke-dev-fitbod-gke","gke-dev-fitbod-gke-default-pool","dev-fitbod-pool"],"workload_metadata_config":[{"mode":"GKE_METADATA"}]}],"placement_policy":[]}],"notification_config":[{"pubsub":[{"enabled":false,"topic":""}]}],"pod_security_policy_config":[],"private_cluster_config":[],"project":"zkhan-1","remove_default_node_pool":true,"resource_labels":null,"resource_usage_export_config":[],"subnetwork":"projects/zkhan-1/regions/us-east1/subnetworks/dev-fitbod-subnet","timeouts":{"create":"45m","delete":"45m","read":null,"update":"45m"},"vertical_pod_autoscaling":[{"enabled":false}],"workload_identity_config":[{"workload_pool":"zkhan-1.svc.id.goog"}]},"sensitive_values":{"addons_config":[{"cloudrun_config":[],"config_connector_config":[{}],"dns_cache_config":[{}],"gce_persistent_disk_csi_driver_config":[{}],"gcp_filestore_csi_driver_config":[{}],"gke_backup_agent_config":[],"horizontal_pod_autoscaling":[{}],"http_load_balancing":[{}],"istio_config":[{}],"kalm_config":[{}],"network_policy_config":[{}]}],"authenticator_groups_config":[],"cluster_autoscaling":[{"auto_provisioning_defaults":[{"oauth_scopes":[false]}],"resource_limits":[{},{}]}],"cluster_telemetry":[],"confidential_nodes":[],"database_encryption":[{}],"default_snat_status":[{}],"dns_config":[],"identity_service_config":[],"ip_allocation_policy":[{}],"logging_config":[],"maintenance_policy":[{"daily_maintenance_window":[{}],"maintenance_exclusion":[],"recurring_window":[]}],"master_auth":[{"client_certificate_config":[{}]}],"master_authorized_networks_config":[],"monitoring_config":[],"network_policy":[{}],"node_config":[],"node_locations":[],"node_pool":[{"autoscaling":[],"instance_group_urls":[],"managed_instance_group_urls":[],"management":[],"network_config":[],"node_config":[{"ephemeral_storage_config":[],"gcfs_config":[],"guest_accelerator":[],"gvnic":[],"kubelet_config":[],"labels":{},"linux_node_config":[],"metadata":{},"oauth_scopes":[],"sandbox_config":[],"shielded_instance_config":[{}],"tags":[false,false,false],"taint":[],"workload_metadata_config":[{}]}],"node_locations":[],"placement_policy":[],"upgrade_settings":[]}],"notification_config":[{"pubsub":[{}]}],"pod_security_policy_config":[],"private_cluster_config":[],"release_channel":[],"resource_usage_export_config":[],"timeouts":{},"tpu_config":[],"vertical_pod_autoscaling":[{}],"workload_identity_config":[{}]}},{"address":"module.gke.google_container_node_pool.pools[\"dev-fitbod-pool\"]","mode":"managed","type":"google_container_node_pool","name":"pools","index":"dev-fitbod-pool","provider_name":"registry.terraform.io/hashicorp/google-beta","schema_version":1,"values":{"autoscaling":[{"max_node_count":8,"min_node_count":1}],"cluster":"dev-fitbod-gke","initial_node_count":1,"location":"us-east1-d","management":[{"auto_repair":true,"auto_upgrade":true}],"name":"dev-fitbod-pool","node_config":[{"boot_disk_kms_key":"","disk_size_gb":50,"disk_type":"pd-ssd","ephemeral_storage_config":[],"gcfs_config":[],"guest_accelerator":[],"gvnic":[],"image_type":"COS_CONTAINERD","kubelet_config":[],"labels":{"cluster_name":"dev-fitbod-gke","dev-fitbod-pool":"true","node_pool":"dev-fitbod-pool"},"linux_node_config":[],"local_ssd_count":0,"machine_type":"e2-highcpu-4","metadata":{"cluster_name":"dev-fitbod-gke","disable-legacy-endpoints":"true","node_pool":"dev-fitbod-pool"},"node_group":null,"oauth_scopes":["https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/compute","https://www.googleapis.com/auth/logging.write"],"preemptible":true,"sandbox_config":[],"shielded_instance_config":[{"enable_integrity_monitoring":true,"enable_secure_boot":false}],"spot":false,"tags":["gke-dev-fitbod-gke","gke-dev-fitbod-gke-dev-fitbod-pool","dev-fitbod-pool"],"taint":[{"effect":"PREFER_NO_SCHEDULE","key":"dev-fitbod-pool","value":"true"}],"workload_metadata_config":[{"mode":"GKE_METADATA"}]}],"node_locations":["us-east1-d"],"placement_policy":[],"project":"zkhan-1","timeouts":{"create":"45m","delete":"45m","update":"45m"},"upgrade_settings":[{"max_surge":1,"max_unavailable":0}]},"sensitive_values":{"autoscaling":[{}],"instance_group_urls":[],"managed_instance_group_urls":[],"management":[{}],"network_config":[],"node_config":[{"ephemeral_storage_config":[],"gcfs_config":[],"guest_accelerator":[],"gvnic":[],"kubelet_config":[],"labels":{},"linux_node_config":[],"metadata":{},"oauth_scopes":[false,false,false],"sandbox_config":[],"shielded_instance_config":[{}],"tags":[false,false,false],"taint":[{}],"workload_metadata_config":[{}]}],"node_locations":[false],"placement_policy":[],"timeouts":{},"upgrade_settings":[{}]}},{"address":"module.gke.google_project_iam_member.cluster_service_account-log_writer[0]","mode":"managed","type":"google_project_iam_member","name":"cluster_service_account-log_writer","index":0,"provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"condition":[],"project":"zkhan-1","role":"roles/logging.logWriter"},"sensitive_values":{"condition":[]}},{"address":"module.gke.google_project_iam_member.cluster_service_account-metric_writer[0]","mode":"managed","type":"google_project_iam_member","name":"cluster_service_account-metric_writer","index":0,"provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"condition":[],"project":"zkhan-1","role":"roles/monitoring.metricWriter"},"sensitive_values":{"condition":[]}},{"address":"module.gke.google_project_iam_member.cluster_service_account-monitoring_viewer[0]","mode":"managed","type":"google_project_iam_member","name":"cluster_service_account-monitoring_viewer","index":0,"provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"condition":[],"project":"zkhan-1","role":"roles/monitoring.viewer"},"sensitive_values":{"condition":[]}},{"address":"module.gke.google_project_iam_member.cluster_service_account-resourceMetadata-writer[0]","mode":"managed","type":"google_project_iam_member","name":"cluster_service_account-resourceMetadata-writer","index":0,"provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"condition":[],"project":"zkhan-1","role":"roles/stackdriver.resourceMetadata.writer"},"sensitive_values":{"condition":[]}},{"address":"module.gke.google_service_account.cluster_service_account[0]","mode":"managed","type":"google_service_account","name":"cluster_service_account","index":0,"provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"description":null,"disabled":false,"display_name":"Terraform-managed service account for cluster dev-fitbod-gke","project":"zkhan-1","timeouts":null},"sensitive_values":{}},{"address":"module.gke.random_shuffle.available_zones","mode":"managed","type":"random_shuffle","name":"available_zones","provider_name":"registry.terraform.io/hashicorp/random","schema_version":0,"values":{"input":["us-east1-b","us-east1-c","us-east1-d"],"keepers":null,"result_count":3,"seed":null},"sensitive_values":{"input":[false,false,false],"result":[]}},{"address":"module.gke.random_string.cluster_service_account_suffix","mode":"managed","type":"random_string","name":"cluster_service_account_suffix","provider_name":"registry.terraform.io/hashicorp/random","schema_version":2,"values":{"keepers":null,"length":4,"lower":true,"min_lower":0,"min_numeric":0,"min_special":0,"min_upper":0,"number":true,"numeric":true,"override_special":null,"special":false,"upper":false},"sensitive_values":{}}],"address":"module.gke"},{"resources":[{"address":"module.gke_auth.data.google_client_config.provider","mode":"data","type":"google_client_config","name":"provider","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"sensitive_values":{}},{"address":"module.gke_auth.data.google_container_cluster.gke_cluster","mode":"data","type":"google_container_cluster","name":"gke_cluster","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"location":"us-east1-d","name":"dev-fitbod-gke","project":"zkhan-1"},"sensitive_values":{"addons_config":[],"authenticator_groups_config":[],"cluster_autoscaling":[],"confidential_nodes":[],"database_encryption":[],"default_snat_status":[],"dns_config":[],"ip_allocation_policy":[],"logging_config":[],"maintenance_policy":[],"master_auth":[],"master_authorized_networks_config":[],"monitoring_config":[],"network_policy":[],"node_config":[],"node_locations":[],"node_pool":[],"notification_config":[],"private_cluster_config":[],"release_channel":[],"resource_labels":{},"resource_usage_export_config":[],"vertical_pod_autoscaling":[],"workload_identity_config":[]}}],"address":"module.gke_auth"},{"resources":[{"address":"module.private_service_access.data.google_compute_network.main","mode":"data","type":"google_compute_network","name":"main","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"name":"dev-fitbod-net","project":"zkhan-1"},"sensitive_values":{"subnetworks_self_links":[]}},{"address":"module.private_service_access.google_compute_global_address.google-managed-services-range","mode":"managed","type":"google_compute_global_address","name":"google-managed-services-range","provider_name":"registry.terraform.io/hashicorp/google-beta","schema_version":0,"values":{"address_type":"INTERNAL","description":"","ip_version":"","labels":null,"name":"google-managed-services-dev-fitbod-net","prefix_length":16,"project":"zkhan-1","purpose":"VPC_PEERING","timeouts":null},"sensitive_values":{}},{"address":"module.private_service_access.google_service_networking_connection.private_service_access","mode":"managed","type":"google_service_networking_connection","name":"private_service_access","provider_name":"registry.terraform.io/hashicorp/google-beta","schema_version":0,"values":{"reserved_peering_ranges":["google-managed-services-dev-fitbod-net"],"service":"servicenetworking.googleapis.com","timeouts":null},"sensitive_values":{"reserved_peering_ranges":[false]}},{"address":"module.private_service_access.null_resource.dependency_setter","mode":"managed","type":"null_resource","name":"dependency_setter","provider_name":"registry.terraform.io/hashicorp/null","schema_version":0,"values":{"triggers":null},"sensitive_values":{}}],"address":"module.private_service_access"}]}},"resource_changes":[{"address":"google_compute_address.ingress_ip","mode":"managed","type":"google_compute_address","name":"ingress_ip","provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"address_type":"EXTERNAL","description":null,"name":"fitbod-ingress-ip","network":null,"prefix_length":null,"region":"us-east1","timeouts":null},"after_unknown":{"address":true,"creation_timestamp":true,"id":true,"network_tier":true,"project":true,"purpose":true,"self_link":true,"subnetwork":true,"users":true},"before_sensitive":false,"after_sensitive":{"users":[]}}},{"address":"google_compute_disk.app","mode":"managed","type":"google_compute_disk","name":"app","provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"description":null,"disk_encryption_key":[],"image":null,"labels":null,"name":"app","project":"zkhan-1","provisioned_iops":null,"size":1,"snapshot":null,"source_image_encryption_key":[],"source_snapshot_encryption_key":[],"timeouts":null,"type":"pd-balanced","zone":"us-east1-d"},"after_unknown":{"creation_timestamp":true,"disk_encryption_key":[],"id":true,"label_fingerprint":true,"last_attach_timestamp":true,"last_detach_timestamp":true,"physical_block_size_bytes":true,"self_link":true,"source_image_encryption_key":[],"source_image_id":true,"source_snapshot_encryption_key":[],"source_snapshot_id":true,"users":true},"before_sensitive":false,"after_sensitive":{"disk_encryption_key":[],"source_image_encryption_key":[],"source_snapshot_encryption_key":[],"users":[]}}},{"address":"google_compute_disk.monitoring","mode":"managed","type":"google_compute_disk","name":"monitoring","provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"description":null,"disk_encryption_key":[],"image":null,"labels":null,"name":"monitoring","project":"zkhan-1","provisioned_iops":null,"size":2,"snapshot":null,"source_image_encryption_key":[],"source_snapshot_encryption_key":[],"timeouts":null,"type":"pd-balanced","zone":"us-east1-d"},"after_unknown":{"creation_timestamp":true,"disk_encryption_key":[],"id":true,"label_fingerprint":true,"last_attach_timestamp":true,"last_detach_timestamp":true,"physical_block_size_bytes":true,"self_link":true,"source_image_encryption_key":[],"source_image_id":true,"source_snapshot_encryption_key":[],"source_snapshot_id":true,"users":true},"before_sensitive":false,"after_sensitive":{"disk_encryption_key":[],"source_image_encryption_key":[],"source_snapshot_encryption_key":[],"users":[]}}},{"address":"google_project_service.services[\"clouddebugger.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"clouddebugger.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"clouddebugger.googleapis.com","timeouts":null},"after_unknown":{"id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"google_project_service.services[\"cloudfunctions.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"cloudfunctions.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"cloudfunctions.googleapis.com","timeouts":null},"after_unknown":{"id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"google_project_service.services[\"cloudresourcemanager.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"cloudresourcemanager.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"cloudresourcemanager.googleapis.com","timeouts":null},"after_unknown":{"id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"google_project_service.services[\"cloudscheduler.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"cloudscheduler.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"cloudscheduler.googleapis.com","timeouts":null},"after_unknown":{"id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"google_project_service.services[\"compute.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"compute.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"compute.googleapis.com","timeouts":null},"after_unknown":{"id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"google_project_service.services[\"container.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"container.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"container.googleapis.com","timeouts":null},"after_unknown":{"id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"google_project_service.services[\"containerregistry.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"containerregistry.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"containerregistry.googleapis.com","timeouts":null},"after_unknown":{"id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"google_project_service.services[\"dns.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"dns.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"dns.googleapis.com","timeouts":null},"after_unknown":{"id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"google_project_service.services[\"run.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"run.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"run.googleapis.com","timeouts":null},"after_unknown":{"id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"google_project_service.services[\"secretmanager.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"secretmanager.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"secretmanager.googleapis.com","timeouts":null},"after_unknown":{"id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"google_project_service.services[\"servicenetworking.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"servicenetworking.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"servicenetworking.googleapis.com","timeouts":null},"after_unknown":{"id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"google_project_service.services[\"sql-component.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"sql-component.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"sql-component.googleapis.com","timeouts":null},"after_unknown":{"id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"google_project_service.services[\"sqladmin.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"sqladmin.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"sqladmin.googleapis.com","timeouts":null},"after_unknown":{"id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"google_project_service.services[\"storage-api.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"storage-api.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"storage-api.googleapis.com","timeouts":null},"after_unknown":{"id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"google_project_service.services[\"vpcaccess.googleapis.com\"]","mode":"managed","type":"google_project_service","name":"services","index":"vpcaccess.googleapis.com","provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"disable_dependent_services":true,"disable_on_destroy":false,"project":"zkhan-1","service":"vpcaccess.googleapis.com","timeouts":null},"after_unknown":{"id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"helm_release.nginx_controller","mode":"managed","type":"helm_release","name":"nginx_controller","provider_name":"registry.terraform.io/hashicorp/helm","change":{"actions":["create"],"before":null,"after":{"atomic":false,"chart":"ingress-nginx","cleanup_on_fail":false,"create_namespace":true,"dependency_update":false,"description":null,"devel":null,"disable_crd_hooks":false,"disable_openapi_validation":false,"disable_webhooks":false,"force_update":false,"keyring":null,"lint":false,"max_history":0,"name":"ingress-nginx","namespace":"ingress-nginx","pass_credentials":false,"postrender":[],"recreate_pods":false,"render_subchart_notes":true,"replace":false,"repository":"https://kubernetes.github.io/ingress-nginx","repository_ca_file":null,"repository_cert_file":null,"repository_key_file":null,"repository_password":null,"repository_username":null,"reset_values":false,"reuse_values":false,"set":[],"set_sensitive":[],"skip_crds":false,"status":"deployed","timeout":60,"verify":false,"version":"4.2.0","wait":true,"wait_for_jobs":false},"after_unknown":{"id":true,"manifest":true,"metadata":true,"postrender":[],"set":[],"set_sensitive":[],"values":true},"before_sensitive":false,"after_sensitive":{"metadata":[],"postrender":[],"repository_password":true,"set":[],"set_sensitive":[],"values":[]}}},{"address":"helm_release.prometheus","mode":"managed","type":"helm_release","name":"prometheus","provider_name":"registry.terraform.io/hashicorp/helm","change":{"actions":["create"],"before":null,"after":{"atomic":false,"chart":"kube-prometheus-stack","cleanup_on_fail":true,"create_namespace":true,"dependency_update":false,"description":null,"devel":null,"disable_crd_hooks":false,"disable_openapi_validation":false,"disable_webhooks":false,"force_update":true,"keyring":null,"lint":false,"max_history":0,"name":"prometheus","namespace":"monitoring","pass_credentials":false,"postrender":[],"recreate_pods":false,"render_subchart_notes":true,"replace":false,"repository":"https://prometheus-community.github.io/helm-charts","repository_ca_file":null,"repository_cert_file":null,"repository_key_file":null,"repository_password":null,"repository_username":null,"reset_values":false,"reuse_values":false,"set":[],"set_sensitive":[],"skip_crds":false,"status":"deployed","timeout":120,"verify":false,"version":"37.2.0","wait":true,"wait_for_jobs":false},"after_unknown":{"id":true,"manifest":true,"metadata":true,"postrender":[],"set":[],"set_sensitive":[],"values":true},"before_sensitive":false,"after_sensitive":{"metadata":[],"postrender":[],"repository_password":true,"set":[],"set_sensitive":[],"values":[]}}},{"address":"kubernetes_cluster_role_binding.cilium_node_patcher","mode":"managed","type":"kubernetes_cluster_role_binding","name":"cilium_node_patcher","provider_name":"registry.terraform.io/hashicorp/kubernetes","change":{"actions":["create"],"before":null,"after":{"metadata":[{"annotations":null,"labels":null,"name":"cilium-node-patcher"}],"role_ref":[{"api_group":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"system:node"}],"subject":[{"kind":"ServiceAccount","name":"cilium","namespace":"kube-system"}]},"after_unknown":{"id":true,"metadata":[{"generation":true,"resource_version":true,"uid":true}],"role_ref":[{}],"subject":[{"api_group":true}]},"before_sensitive":false,"after_sensitive":{"metadata":[{}],"role_ref":[{}],"subject":[{}]}}},{"address":"kubernetes_config_map.config","mode":"managed","type":"kubernetes_config_map","name":"config","provider_name":"registry.terraform.io/hashicorp/kubernetes","change":{"actions":["create"],"before":null,"after":{"binary_data":null,"metadata":[{"annotations":null,"generate_name":null,"labels":null,"name":"myworkout-config","namespace":"default"}]},"after_unknown":{"data":true,"id":true,"metadata":[{"generation":true,"resource_version":true,"uid":true}]},"before_sensitive":false,"after_sensitive":{"data":{},"metadata":[{}]}}},{"address":"kubernetes_config_map.grafana_dashboards","mode":"managed","type":"kubernetes_config_map","name":"grafana_dashboards","provider_name":"registry.terraform.io/hashicorp/kubernetes","change":{"actions":["create"],"before":null,"after":{"binary_data":null,"data":{"fitbod-k8s.json":"{\n  \"annotations\": {\n    \"list\": [\n      {\n        \"$$hashKey\": \"object:247\",\n        \"builtIn\": 1,\n        \"datasource\": {\n          \"type\": \"datasource\",\n          \"uid\": \"grafana\"\n        },\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations \u0026 Alerts\",\n        \"target\": {\n          \"limit\": 100,\n          \"matchAny\": false,\n          \"tags\": [],\n          \"type\": \"dashboard\"\n        },\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"description\": \"\",\n  \"editable\": true,\n  \"fiscalYearStartMonth\": 0,\n  \"gnetId\": 15661,\n  \"graphTooltip\": 0,\n  \"id\": 31,\n  \"iteration\": 1657535266413,\n  \"links\": [\n    {\n      \"icon\": \"bolt\",\n      \"tags\": [],\n      \"targetBlank\": true,\n      \"title\": \"Update\",\n      \"tooltip\": \" Update current dashboard \",\n      \"type\": \"link\",\n      \"url\": \"https://grafana.com/dashboards/13105\"\n    },\n    {\n      \"$$hashKey\": \"object:1091\",\n      \"asDropdown\": true,\n      \"icon\": \"external link\",\n      \"tags\": [],\n      \"targetBlank\": true,\n      \"type\": \"dashboards\"\n    }\n  ],\n  \"liveNow\": true,\n  \"panels\": [\n    {\n      \"collapsed\": false,\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 54,\n      \"panels\": [],\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \" Node Storage Information ： Number of cores used :【$Node】\",\n      \"type\": \"row\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"decimals\": 1,\n          \"mappings\": [],\n          \"max\": 1,\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"rgba(50, 172, 45, 0.97)\",\n                \"value\": null\n              },\n              {\n                \"color\": \"rgba(237, 129, 40, 0.89)\",\n                \"value\": 0.8\n              },\n              {\n                \"color\": \"rgba(245, 54, 54, 0.9)\",\n                \"value\": 0.99\n              }\n            ]\n          },\n          \"unit\": \"percentunit\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 4,\n        \"w\": 4,\n        \"x\": 0,\n        \"y\": 1\n      },\n      \"id\": 44,\n      \"links\": [],\n      \"options\": {\n        \"displayMode\": \"basic\",\n        \"minVizHeight\": 10,\n        \"minVizWidth\": 0,\n        \"orientation\": \"vertical\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"showUnfilled\": true,\n        \"text\": {}\n      },\n      \"pluginVersion\": \"9.0.1\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(container_memory_working_set_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container!=\\\"\\\",node=~\\\"^$Node$\\\"}) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\", node=~\\\"^$Node$\\\"})\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Memory Limit Rate \",\n          \"refId\": \"C\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",node=~\\\"^$Node$\\\"}) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\", node=~\\\"^$Node$\\\"})\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Total memory usage \",\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",node=~\\\"^$Node$\\\"}) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\", node=~\\\"^$Node$\\\"})\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \" Total Memory Demand \",\n          \"refId\": \"B\",\n          \"step\": 10\n        }\n      ],\n      \"title\": \" Overall core usage \",\n      \"type\": \"bargauge\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"decimals\": 1,\n          \"mappings\": [],\n          \"max\": 1,\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"rgba(50, 172, 45, 0.97)\",\n                \"value\": null\n              },\n              {\n                \"color\": \"rgba(237, 129, 40, 0.89)\",\n                \"value\": 0.8\n              },\n              {\n                \"color\": \"rgba(245, 54, 54, 0.9)\",\n                \"value\": 0.99\n              }\n            ]\n          },\n          \"unit\": \"percentunit\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 4,\n        \"w\": 4,\n        \"x\": 4,\n        \"y\": 1\n      },\n      \"id\": 45,\n      \"links\": [],\n      \"options\": {\n        \"displayMode\": \"basic\",\n        \"minVizHeight\": 10,\n        \"minVizWidth\": 0,\n        \"orientation\": \"vertical\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"showUnfilled\": true,\n        \"text\": {}\n      },\n      \"pluginVersion\": \"9.0.1\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (irate(container_cpu_usage_seconds_total{origin_prometheus=~\\\"$origin_prometheus\\\",container!=\\\"\\\",node=~\\\"^$Node$\\\"}[2m])) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\", node=~\\\"^$Node$\\\"})\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"CPU Request Rate \",\n          \"refId\": \"C\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",node=~\\\"^$Node$\\\"}) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\", node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"CPU total memory \",\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",node=~\\\"^$Node$\\\"}) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\", node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"CPU Nodes \",\n          \"refId\": \"B\"\n        }\n      ],\n      \"title\": \" container CPU proportion \",\n      \"type\": \"bargauge\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"description\": \" Memory Request Rate ， container POD core ， container POD disk \",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"mappings\": [],\n          \"max\": 1000,\n          \"min\": 1,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"#EAB839\",\n                \"value\": 1000\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 2000\n              }\n            ]\n          },\n          \"unit\": \"none\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 4,\n        \"w\": 3,\n        \"x\": 8,\n        \"y\": 1\n      },\n      \"id\": 74,\n      \"options\": {\n        \"displayMode\": \"basic\",\n        \"minVizHeight\": 10,\n        \"minVizWidth\": 0,\n        \"orientation\": \"vertical\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"showUnfilled\": true,\n        \"text\": {}\n      },\n      \"pluginVersion\": \"9.0.1\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"count(kube_node_info{origin_prometheus=~\\\"$origin_prometheus\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Total Cores \",\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"count(kube_pod_info{origin_prometheus=~\\\"$origin_prometheus\\\",created_by_kind!~\\\"\u003cnone\u003e|Job\\\",node=~\\\"^$Node$\\\"})\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"Pod core \",\n          \"refId\": \"B\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"pods\\\", unit=\\\"integer\\\",node=~\\\"^$Node$\\\"})\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" disk Pod\",\n          \"refId\": \"C\"\n        }\n      ],\n      \"title\": \" microservice Pod\",\n      \"type\": \"bargauge\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"custom\": {\n            \"align\": \"center\",\n            \"displayMode\": \"auto\",\n            \"filterable\": false,\n            \"inspect\": false\n          },\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" use \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 130\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"Pod\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 21\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"SVC\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 7\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" usage \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 61\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" memory \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 52\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" request \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 51\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 7,\n        \"x\": 11,\n        \"y\": 1\n      },\n      \"id\": 51,\n      \"options\": {\n        \"footer\": {\n          \"fields\": \"\",\n          \"reducer\": [\n            \"sum\"\n          ],\n          \"show\": false\n        },\n        \"showHeader\": true,\n        \"sortBy\": [\n          {\n            \"desc\": false,\n            \"displayName\": \" use \"\n          }\n        ]\n      },\n      \"pluginVersion\": \"9.0.1\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"count(kube_pod_info{origin_prometheus=~\\\"$origin_prometheus\\\",node=~\\\"^$Node$\\\"}) by (namespace)\",\n          \"format\": \"table\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"count(kube_service_info{origin_prometheus=~\\\"$origin_prometheus\\\"}) by(namespace)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"C\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"count(count(kube_pod_container_info{origin_prometheus=~\\\"$origin_prometheus\\\"}) by(container,namespace))by(namespace)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"D\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"count(kube_configmap_info{origin_prometheus=~\\\"$origin_prometheus\\\"}) by(namespace)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"configmap\",\n          \"refId\": \"B\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"count(kube_secret_info{origin_prometheus=~\\\"$origin_prometheus\\\"}) by(namespace)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"secret\",\n          \"refId\": \"E\"\n        }\n      ],\n      \"title\": \" average memory \",\n      \"transformations\": [\n        {\n          \"id\": \"seriesToColumns\",\n          \"options\": {\n            \"byField\": \"namespace\"\n          }\n        },\n        {\n          \"id\": \"organize\",\n          \"options\": {\n            \"excludeByName\": {\n              \"Time 1\": true,\n              \"Time 2\": true,\n              \"Time 3\": true,\n              \"Time 4\": true,\n              \"Time 5\": true\n            },\n            \"indexByName\": {\n              \"Time 1\": 2,\n              \"Time 2\": 4,\n              \"Time 3\": 6,\n              \"Value #A\": 3,\n              \"Value #C\": 5,\n              \"Value #D\": 1,\n              \"namespace\": 0\n            },\n            \"renameByName\": {\n              \"Time 1\": \"\",\n              \"Time 2\": \"\",\n              \"Value #A\": \"Pod\",\n              \"Value #B\": \" memory \",\n              \"Value #C\": \"SVC\",\n              \"Value #D\": \" usage \",\n              \"Value #E\": \" request \",\n              \"namespace\": \" use \"\n            }\n          }\n        }\n      ],\n      \"type\": \"table\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"links\": []\n        },\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 6,\n        \"x\": 18,\n        \"y\": 1\n      },\n      \"height\": \"200px\",\n      \"hiddenSeries\": false,\n      \"id\": 32,\n      \"isNew\": true,\n      \"legend\": {\n        \"alignAsTable\": false,\n        \"avg\": true,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": false,\n        \"show\": false,\n        \"sideWidth\": 200,\n        \"sort\": \"current\",\n        \"sortDesc\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"9.0.1\",\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (rate(container_network_receive_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}[2m]))*8\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \" inflow \",\n          \"metric\": \"network\",\n          \"refId\": \"A\",\n          \"step\": 10\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (rate(container_network_transmit_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}[2m]))*8\",\n          \"instant\": false,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \" status \",\n          \"metric\": \"network\",\n          \"refId\": \"B\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": [],\n      \"timeRegions\": [],\n      \"title\": \"$NameSpace： selected nodes （ Associating nodes and namespaces ）\",\n      \"tooltip\": {\n        \"msResolution\": false,\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"mode\": \"time\",\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:750\",\n          \"format\": \"binbps\",\n          \"logBase\": 1,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:751\",\n          \"format\": \"Bps\",\n          \"logBase\": 1,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false\n      }\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"decimals\": 1,\n          \"mappings\": [],\n          \"max\": 1000000000000,\n          \"min\": 1,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"#EAB839\",\n                \"value\": 800000000000\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1000000000000\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 4,\n        \"w\": 4,\n        \"x\": 0,\n        \"y\": 5\n      },\n      \"id\": 71,\n      \"options\": {\n        \"displayMode\": \"basic\",\n        \"minVizHeight\": 10,\n        \"minVizWidth\": 0,\n        \"orientation\": \"vertical\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"showUnfilled\": true,\n        \"text\": {}\n      },\n      \"pluginVersion\": \"9.0.1\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\", node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Requests \",\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (container_memory_working_set_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container!=\\\"\\\",node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Nodes \",\n          \"refId\": \"C\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" total disk \",\n          \"refId\": \"D\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" limit rate \",\n          \"refId\": \"B\"\n        }\n      ],\n      \"title\": \" Resource comprehensive display \",\n      \"type\": \"bargauge\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"decimals\": 1,\n          \"mappings\": [],\n          \"max\": 500,\n          \"min\": 1,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"#EAB839\",\n                \"value\": 500\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1000\n              }\n            ]\n          },\n          \"unit\": \"locale\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 4,\n        \"w\": 4,\n        \"x\": 4,\n        \"y\": 5\n      },\n      \"id\": 72,\n      \"options\": {\n        \"displayMode\": \"basic\",\n        \"minVizHeight\": 10,\n        \"minVizWidth\": 0,\n        \"orientation\": \"vertical\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"showUnfilled\": true,\n        \"text\": {}\n      },\n      \"pluginVersion\": \"9.0.1\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\", node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" usage \",\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (irate(container_cpu_usage_seconds_total{origin_prometheus=~\\\"$origin_prometheus\\\",id=\\\"/\\\",node=~\\\"^$Node$\\\"}[2m]))\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Nodes \",\n          \"refId\": \"C\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" total disk \",\n          \"refId\": \"D\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" limit rate \",\n          \"refId\": \"B\"\n        }\n      ],\n      \"title\": \" container CPU node \",\n      \"type\": \"bargauge\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"decimals\": 2,\n          \"mappings\": [],\n          \"max\": 8000000000000,\n          \"min\": 1,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"#EAB839\",\n                \"value\": 5000000000000\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 10000000000000\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Request Rate \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"unit\",\n                \"value\": \"percentunit\"\n              },\n              {\n                \"id\": \"max\",\n                \"value\": 1\n              },\n              {\n                \"id\": \"min\",\n                \"value\": 0\n              },\n              {\n                \"id\": \"thresholds\",\n                \"value\": {\n                  \"mode\": \"percentage\",\n                  \"steps\": [\n                    {\n                      \"color\": \"green\",\n                      \"value\": null\n                    },\n                    {\n                      \"color\": \"orange\",\n                      \"value\": 80\n                    },\n                    {\n                      \"color\": \"red\",\n                      \"value\": 90\n                    }\n                  ]\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 4,\n        \"w\": 3,\n        \"x\": 8,\n        \"y\": 5\n      },\n      \"id\": 73,\n      \"options\": {\n        \"displayMode\": \"basic\",\n        \"minVizHeight\": 10,\n        \"minVizWidth\": 0,\n        \"orientation\": \"vertical\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"showUnfilled\": true,\n        \"text\": {}\n      },\n      \"pluginVersion\": \"9.0.1\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (container_fs_usage_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",device=~\\\"^/dev/.*$\\\",id=\\\"/\\\",node=~\\\"^$Node$\\\"}) / sum (container_fs_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",device=~\\\"^/dev/.*$\\\",id=\\\"/\\\",node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Request Rate \",\n          \"refId\": \"C\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (container_fs_usage_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",device=~\\\"^/dev/.*$\\\",id=\\\"/\\\",node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Nodes \",\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (container_fs_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",device=~\\\"^/dev/.*$\\\",id=\\\"/\\\",node=~\\\"^$Node$\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" name \",\n          \"refId\": \"B\"\n        }\n      ],\n      \"title\": \" Node memory ratio \",\n      \"type\": \"bargauge\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"custom\": {\n            \"align\": \"center\",\n            \"displayMode\": \"auto\",\n            \"filterable\": false,\n            \"inspect\": false\n          },\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"Pod\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 51\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" include \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 70\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"CPU limit ( number )\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 63\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"CPU total \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 78\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"CPU total \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 58\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" memory request \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 78\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Total Memory \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 76\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Network bandwidth \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 83\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" English version \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 120\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" container name \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 84\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" config %\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 92\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Memory Usage %\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 63\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Network bandwidth %\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 59\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"CPU limit %\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 81\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"CPU max %\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 77\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"CPU total %\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 112\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" English version %\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 72\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byRegexp\",\n              \"options\": \".*%\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"unit\",\n                \"value\": \"percentunit\"\n              },\n              {\n                \"id\": \"thresholds\",\n                \"value\": {\n                  \"mode\": \"percentage\",\n                  \"steps\": [\n                    {\n                      \"color\": \"green\",\n                      \"value\": null\n                    },\n                    {\n                      \"color\": \"orange\",\n                      \"value\": 80\n                    },\n                    {\n                      \"color\": \"red\",\n                      \"value\": 90\n                    }\n                  ]\n                }\n              },\n              {\n                \"id\": \"custom.displayMode\",\n                \"value\": \"color-background\"\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byRegexp\",\n              \"options\": \"( memory request | Total Memory | Memory Usage | Network bandwidth | English version | container name )\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"unit\",\n                \"value\": \"bytes\"\n              },\n              {\n                \"id\": \"decimals\",\n                \"value\": 2\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" container \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 109\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" memory request %\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 67\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Memory Usage \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 75\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"CPU max \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 58\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byRegexp\",\n              \"options\": \"(CPU total | Total Memory | container name |Pod disk )\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.displayMode\",\n                \"value\": \"color-background\"\n              },\n              {\n                \"id\": \"thresholds\",\n                \"value\": {\n                  \"mode\": \"absolute\",\n                  \"steps\": [\n                    {\n                      \"color\": \"blue\",\n                      \"value\": null\n                    }\n                  ]\n                }\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"Pod disk \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 79\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byRegexp\",\n              \"options\": \"CPU limit \\\\( number \\\\)$| memory request $| English version $\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.displayMode\",\n                \"value\": \"color-text\"\n              },\n              {\n                \"id\": \"color\",\n                \"value\": {\n                  \"fixedColor\": \"orange\",\n                  \"mode\": \"fixed\"\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 9\n      },\n      \"id\": 52,\n      \"options\": {\n        \"footer\": {\n          \"fields\": \"\",\n          \"reducer\": [\n            \"sum\"\n          ],\n          \"show\": false\n        },\n        \"showHeader\": true,\n        \"sortBy\": [\n          {\n            \"desc\": false,\n            \"displayName\": \" English version \"\n          }\n        ]\n      },\n      \"pluginVersion\": \"9.0.1\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"count(kube_pod_info{origin_prometheus=~\\\"$origin_prometheus\\\",created_by_kind!~\\\"\u003cnone\u003e|Job\\\",node=~\\\"^$Node$\\\"}) by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"pod core \",\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"kube_node_status_condition{origin_prometheus=~\\\"$origin_prometheus\\\",status=\\\"true\\\",node=~\\\"^$Node$\\\"}  == 1\",\n          \"format\": \"table\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" include \",\n          \"refId\": \"B\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (irate(container_cpu_usage_seconds_total{origin_prometheus=~\\\"$origin_prometheus\\\",container!=\\\"\\\",node=~\\\"^$Node$\\\"}[2m])) by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"I\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\", node=~\\\"^$Node$\\\"} - 0\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"C\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",node=~\\\"^$Node$\\\"}) by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"E\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",node=~\\\"^$Node$\\\"}) by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"F\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (container_memory_working_set_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container!=\\\"\\\",node=~\\\"^$Node$\\\"}) by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"J\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\", node=~\\\"^$Node$\\\"}) by (node) - 0\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"D\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",node=~\\\"^$Node$\\\"}) by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"G\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",node=~\\\"^$Node$\\\"}) by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"H\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (container_fs_usage_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",device=~\\\"^/dev/.*$\\\",id=\\\"/\\\",node=~\\\"^$Node$\\\"}) by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"K\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (container_fs_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",device=~\\\"^/dev/.*$\\\",id=\\\"/\\\",node=~\\\"^$Node$\\\"}) by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"L\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (container_memory_working_set_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container!=\\\"\\\",node=~\\\"^$Node$\\\"})by (node) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\", node=~\\\"^$Node$\\\"})by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" memory request %\",\n          \"refId\": \"M\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",node=~\\\"^$Node$\\\"})by (node) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\", node=~\\\"^$Node$\\\"})by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Memory Usage %\",\n          \"refId\": \"N\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",node=~\\\"^$Node$\\\"})by (node) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\", node=~\\\"^$Node$\\\"})by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Network bandwidth %\",\n          \"refId\": \"O\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (irate(container_cpu_usage_seconds_total{origin_prometheus=~\\\"$origin_prometheus\\\",container!=\\\"\\\",node=~\\\"^$Node$\\\"}[2m]))by (node) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\", node=~\\\"^$Node$\\\"})by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"CPU limit %\",\n          \"refId\": \"P\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",node=~\\\"^$Node$\\\"})by (node) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\", node=~\\\"^$Node$\\\"})by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"CPU max %\",\n          \"refId\": \"Q\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",node=~\\\"^$Node$\\\"})by (node) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\", node=~\\\"^$Node$\\\"})by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Network bandwidth %\",\n          \"refId\": \"R\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (container_fs_usage_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",device=~\\\"^/dev/.*$\\\",id=\\\"/\\\",node=~\\\"^$Node$\\\"})by (node) / sum (container_fs_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",device=~\\\"^/dev/.*$\\\",id=\\\"/\\\",node=~\\\"^$Node$\\\"})by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" English version %\",\n          \"refId\": \"S\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"pods\\\", unit=\\\"integer\\\",node=~\\\"^$Node$\\\"})by (node)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"Pod disk \",\n          \"refId\": \"T\"\n        }\n      ],\n      \"title\": \"$Node： Node memory details \",\n      \"transformations\": [\n        {\n          \"id\": \"merge\",\n          \"options\": {}\n        },\n        {\n          \"id\": \"organize\",\n          \"options\": {\n            \"excludeByName\": {\n              \"Time\": true,\n              \"Time 1\": true,\n              \"Time 10\": true,\n              \"Time 11\": true,\n              \"Time 12\": true,\n              \"Time 13\": true,\n              \"Time 14\": true,\n              \"Time 15\": true,\n              \"Time 16\": true,\n              \"Time 17\": true,\n              \"Time 18\": true,\n              \"Time 19\": true,\n              \"Time 2\": true,\n              \"Time 20\": true,\n              \"Time 3\": true,\n              \"Time 4\": true,\n              \"Time 5\": true,\n              \"Time 6\": true,\n              \"Time 7\": true,\n              \"Time 8\": true,\n              \"Time 9\": true,\n              \"Value #B\": true,\n              \"Value #E\": false,\n              \"Value #F\": false,\n              \"__name__\": true,\n              \"app_kubernetes_io_name\": true,\n              \"app_kubernetes_io_name 1\": true,\n              \"app_kubernetes_io_name 2\": true,\n              \"app_kubernetes_io_name 3\": true,\n              \"app_kubernetes_io_version\": true,\n              \"app_kubernetes_io_version 1\": true,\n              \"app_kubernetes_io_version 2\": true,\n              \"app_kubernetes_io_version 3\": true,\n              \"condition\": false,\n              \"instance\": true,\n              \"instance 1\": true,\n              \"instance 2\": true,\n              \"instance 3\": true,\n              \"job\": true,\n              \"job 1\": true,\n              \"job 2\": true,\n              \"job 3\": true,\n              \"k8s_namespace\": true,\n              \"k8s_namespace 1\": true,\n              \"k8s_namespace 2\": true,\n              \"k8s_namespace 3\": true,\n              \"k8s_sname\": true,\n              \"k8s_sname 1\": true,\n              \"k8s_sname 2\": true,\n              \"k8s_sname 3\": true,\n              \"origin_prometheus\": true,\n              \"origin_prometheus 1\": true,\n              \"origin_prometheus 2\": true,\n              \"origin_prometheus 3\": true,\n              \"resource\": true,\n              \"status\": true,\n              \"unit\": true\n            },\n            \"indexByName\": {\n              \"Time\": 26,\n              \"Value #A\": 3,\n              \"Value #B\": 6,\n              \"Value #C\": 7,\n              \"Value #D\": 14,\n              \"Value #E\": 10,\n              \"Value #F\": 12,\n              \"Value #G\": 17,\n              \"Value #H\": 19,\n              \"Value #I\": 8,\n              \"Value #J\": 15,\n              \"Value #K\": 22,\n              \"Value #L\": 21,\n              \"Value #M\": 16,\n              \"Value #N\": 18,\n              \"Value #O\": 20,\n              \"Value #P\": 9,\n              \"Value #Q\": 11,\n              \"Value #R\": 13,\n              \"Value #S\": 23,\n              \"Value #T\": 2,\n              \"__name__\": 4,\n              \"app_kubernetes_io_name\": 27,\n              \"app_kubernetes_io_version\": 28,\n              \"condition\": 1,\n              \"instance\": 29,\n              \"job\": 30,\n              \"k8s_namespace\": 31,\n              \"k8s_sname\": 32,\n              \"node\": 0,\n              \"origin_prometheus\": 33,\n              \"resource\": 24,\n              \"status\": 5,\n              \"unit\": 25\n            },\n            \"renameByName\": {\n              \"Value #A\": \"Pod\",\n              \"Value #C\": \"CPU total \",\n              \"Value #D\": \" Total Memory \",\n              \"Value #E\": \"CPU max \",\n              \"Value #F\": \"CPU total \",\n              \"Value #G\": \" Memory Usage \",\n              \"Value #H\": \" Network bandwidth \",\n              \"Value #I\": \"CPU limit ( number )\",\n              \"Value #J\": \" memory request \",\n              \"Value #K\": \" English version \",\n              \"Value #L\": \" container name \",\n              \"Value #M\": \" memory request %\",\n              \"Value #N\": \" Memory Usage %\",\n              \"Value #O\": \" Network bandwidth %\",\n              \"Value #P\": \"CPU limit %\",\n              \"Value #Q\": \"CPU max %\",\n              \"Value #R\": \"CPU total %\",\n              \"Value #S\": \" English version %\",\n              \"Value #T\": \"Pod disk \",\n              \"condition\": \" include \",\n              \"node\": \" container \"\n            }\n          }\n        },\n        {\n          \"id\": \"filterFieldsByName\",\n          \"options\": {}\n        }\n      ],\n      \"type\": \"table\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"fill\": 0,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 8,\n        \"x\": 0,\n        \"y\": 12\n      },\n      \"hiddenSeries\": false,\n      \"id\": 75,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"max\": true,\n        \"min\": false,\n        \"rightSide\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"9.0.1\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [\n        {\n          \"$$hashKey\": \"object:2068\",\n          \"alias\": \"/ usage .*/\",\n          \"color\": \"#C4162A\"\n        }\n      ],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (irate(container_cpu_usage_seconds_total{origin_prometheus=~\\\"$origin_prometheus\\\",container!=\\\"\\\",node=~\\\"^$Node$\\\"}[2m]))by (node) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\", node=~\\\"^$Node$\\\"})by (node)*100\",\n          \"format\": \"time_series\",\n          \"hide\": false,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{node}}\",\n          \"refId\": \"I\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeRegions\": [],\n      \"title\": \"$Node： container CPU receive \",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"transformations\": [],\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"mode\": \"time\",\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:1711\",\n          \"format\": \"percent\",\n          \"logBase\": 1,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:1712\",\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"fill\": 0,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 8,\n        \"x\": 8,\n        \"y\": 12\n      },\n      \"hiddenSeries\": false,\n      \"id\": 76,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"max\": true,\n        \"min\": false,\n        \"rightSide\": false,\n        \"show\": true,\n        \"sort\": \"current\",\n        \"sortDesc\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"9.0.1\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (container_memory_working_set_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container!=\\\"\\\",node=~\\\"^$Node$\\\"})by (node) / sum(kube_node_status_allocatable{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\", node=~\\\"^$Node$\\\"})by (node)*100\",\n          \"format\": \"time_series\",\n          \"hide\": false,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{node}}\",\n          \"refId\": \"I\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeRegions\": [],\n      \"title\": \"$Node： Node Memory Information \",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"transformations\": [],\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"mode\": \"time\",\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:1711\",\n          \"format\": \"percent\",\n          \"logBase\": 1,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:1712\",\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"links\": []\n        },\n        \"overrides\": []\n      },\n      \"fill\": 0,\n      \"fillGradient\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 8,\n        \"x\": 16,\n        \"y\": 12\n      },\n      \"height\": \"200px\",\n      \"hiddenSeries\": false,\n      \"id\": 78,\n      \"isNew\": true,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"max\": true,\n        \"min\": false,\n        \"rightSide\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"9.0.1\",\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (irate(container_network_receive_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",node=~\\\"^$Node$\\\"}[2m]))by (node) *8\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \" update :{{node}}\",\n          \"metric\": \"network\",\n          \"refId\": \"A\",\n          \"step\": 10\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum (irate(container_network_transmit_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",node=~\\\"^$Node$\\\"}[2m]))by (node) *8\",\n          \"instant\": false,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \" restart :{{node}}\",\n          \"metric\": \"network\",\n          \"refId\": \"B\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": [],\n      \"timeRegions\": [],\n      \"title\": \"$Node： Overall resource overview \",\n      \"tooltip\": {\n        \"msResolution\": false,\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"mode\": \"time\",\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:750\",\n          \"format\": \"binbps\",\n          \"logBase\": 1,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:751\",\n          \"format\": \"Bps\",\n          \"logBase\": 1,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false\n      }\n    },\n    {\n      \"collapsed\": false,\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 22\n      },\n      \"id\": 61,\n      \"panels\": [],\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \" usage ( container number ) Memory Requirements ： Associated nodes :【$Container】\",\n      \"type\": \"row\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"custom\": {\n            \"align\": \"center\",\n            \"displayMode\": \"auto\",\n            \"filterable\": false,\n            \"inspect\": false\n          },\n          \"displayName\": \"\",\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"percentage\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"orange\",\n                \"value\": 70\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 90\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byRegexp\",\n              \"options\": \".*%.*\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"unit\",\n                \"value\": \"percent\"\n              },\n              {\n                \"id\": \"custom.displayMode\",\n                \"value\": \"gradient-gauge\"\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byRegexp\",\n              \"options\": \" Requests .*\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"unit\",\n                \"value\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Number of cluster nodes \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"unit\",\n                \"value\": \"bytes\"\n              },\n              {\n                \"id\": \"thresholds\",\n                \"value\": {\n                  \"mode\": \"absolute\",\n                  \"steps\": [\n                    {\n                      \"color\": \"green\",\n                      \"value\": null\n                    },\n                    {\n                      \"color\": \"orange\",\n                      \"value\": 10737418240\n                    },\n                    {\n                      \"color\": \"red\",\n                      \"value\": 16106127360\n                    }\n                  ]\n                }\n              },\n              {\n                \"id\": \"custom.displayMode\",\n                \"value\": \"color-background\"\n              },\n              {\n                \"id\": \"custom.width\",\n                \"value\": 90\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byRegexp\",\n              \"options\": \".* total \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"color\",\n                \"value\": {\n                  \"fixedColor\": \"blue\",\n                  \"mode\": \"fixed\"\n                }\n              },\n              {\n                \"id\": \"custom.displayMode\",\n                \"value\": \"color-background\"\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" total CPU total \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 84\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Total Disk Usage \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 77\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Selected microservices (RSS) \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 119\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Total memory limit \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 82\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" limit amount \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 69\n              },\n              {\n                \"id\": \"thresholds\",\n                \"value\": {\n                  \"mode\": \"absolute\",\n                  \"steps\": [\n                    {\n                      \"color\": \"orange\",\n                      \"value\": null\n                    },\n                    {\n                      \"color\": \"green\",\n                      \"value\": 2\n                    }\n                  ]\n                }\n              },\n              {\n                \"id\": \"custom.displayMode\",\n                \"value\": \"color-background\"\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Resource Details %(RSS)\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 112\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" password CPU%( overall 100%)\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 150\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Node Network Overview \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 100\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" total CPU selected \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 82\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Resource Details %(WSS)\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 130\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" Selected microservices (WSS)\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 120\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" average memory \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 107\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byRegexp\",\n              \"options\": \" Node Network Overview $| Selected microservices \\\\(WSS\\\\)$| Selected microservices \\\\(RSS\\\\) $\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"color\",\n                \"value\": {\n                  \"fixedColor\": \"orange\",\n                  \"mode\": \"fixed\"\n                }\n              },\n              {\n                \"id\": \"custom.displayMode\",\n                \"value\": \"color-text\"\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \" container number \"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 149\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 23\n      },\n      \"id\": 57,\n      \"options\": {\n        \"footer\": {\n          \"fields\": \"\",\n          \"reducer\": [\n            \"sum\"\n          ],\n          \"show\": false\n        },\n        \"showHeader\": true,\n        \"sortBy\": [\n          {\n            \"desc\": true,\n            \"displayName\": \" container number \"\n          }\n        ]\n      },\n      \"pluginVersion\": \"9.0.1\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(irate(container_cpu_usage_seconds_total{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}[2m])) by (container) / (sum(container_spec_cpu_quota{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}/100000) by (container)) * 100\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(irate(container_cpu_usage_seconds_total{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}[2m])) by (container)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Node Network Overview \",\n          \"refId\": \"L\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container)\",\n          \"format\": \"table\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"C\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (container_memory_working_set_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container)/ sum(container_spec_memory_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container) * 100\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"I\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (container_memory_working_set_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"D\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (container_memory_rss{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container)/ sum(container_spec_memory_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container) * 100\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Resource Details %(RSS)\",\n          \"refId\": \"H\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (container_memory_rss{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \" Selected microservices (RSS) \",\n          \"refId\": \"K\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"E\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container)\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"F\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum(container_fs_usage_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container)\",\n          \"format\": \"table\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"J\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"count(kube_pod_container_info{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by(container,namespace) - 0\",\n          \"format\": \"table\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"G\"\n        }\n      ],\n      \"title\": \" usage ( container number ) namespace \",\n      \"transformations\": [\n        {\n          \"id\": \"merge\",\n          \"options\": {}\n        },\n        {\n          \"id\": \"organize\",\n          \"options\": {\n            \"excludeByName\": {\n              \"Time\": true,\n              \"Time 1\": true,\n              \"Time 10\": true,\n              \"Time 11\": true,\n              \"Time 12\": true,\n              \"Time 2\": true,\n              \"Time 3\": true,\n              \"Time 4\": true,\n              \"Time 5\": true,\n              \"Time 6\": true,\n              \"Time 7\": true,\n              \"Time 8\": true,\n              \"Time 9\": true\n            },\n            \"indexByName\": {\n              \"Time 1\": 2,\n              \"Time 10\": 20,\n              \"Time 11\": 22,\n              \"Time 12\": 24,\n              \"Time 2\": 4,\n              \"Time 3\": 6,\n              \"Time 4\": 8,\n              \"Time 5\": 10,\n              \"Time 6\": 12,\n              \"Time 7\": 14,\n              \"Time 8\": 16,\n              \"Time 9\": 18,\n              \"Value #A\": 3,\n              \"Value #B\": 7,\n              \"Value #C\": 9,\n              \"Value #D\": 13,\n              \"Value #E\": 19,\n              \"Value #F\": 21,\n              \"Value #G\": 25,\n              \"Value #H\": 15,\n              \"Value #I\": 11,\n              \"Value #J\": 23,\n              \"Value #K\": 17,\n              \"Value #L\": 5,\n              \"container\": 1,\n              \"namespace\": 0\n            },\n            \"renameByName\": {\n              \"Time 1\": \"\",\n              \"Value #A\": \" password CPU%( overall 100%)\",\n              \"Value #B\": \" total CPU selected \",\n              \"Value #C\": \" total CPU total \",\n              \"Value #D\": \" Selected microservices (WSS)\",\n              \"Value #E\": \" Total memory limit \",\n              \"Value #F\": \" Total Disk Usage \",\n              \"Value #G\": \" limit amount \",\n              \"Value #H\": \" Resource Details %(RSS)\",\n              \"Value #I\": \" Resource Details %(WSS)\",\n              \"Value #J\": \" Number of cluster nodes \",\n              \"Value #K\": \" Selected microservices (RSS) \",\n              \"Value #L\": \" Node Network Overview \",\n              \"container\": \" container number \",\n              \"namespace\": \" average memory \"\n            }\n          }\n        },\n        {\n          \"id\": \"filterFieldsByName\",\n          \"options\": {}\n        }\n      ],\n      \"type\": \"table\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"decimals\": 3,\n      \"editable\": true,\n      \"error\": false,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"links\": []\n        },\n        \"overrides\": []\n      },\n      \"fill\": 0,\n      \"fillGradient\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 9,\n        \"w\": 8,\n        \"x\": 0,\n        \"y\": 31\n      },\n      \"height\": \"\",\n      \"hiddenSeries\": false,\n      \"id\": 24,\n      \"isNew\": true,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"hideEmpty\": false,\n        \"hideZero\": false,\n        \"max\": true,\n        \"min\": true,\n        \"rightSide\": false,\n        \"show\": true,\n        \"sort\": \"current\",\n        \"sortDesc\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"9.0.1\",\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum(rate(container_cpu_usage_seconds_total{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}[2m])) by (container) / (sum(container_spec_cpu_quota{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}/100000) by (container)) * 100\",\n          \"hide\": false,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{ container}}\",\n          \"metric\": \"container_cpu\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": [],\n      \"timeRegions\": [],\n      \"title\": \" usage ( container number ) password CPU Request Rate ( overall 100%)\",\n      \"tooltip\": {\n        \"msResolution\": true,\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"mode\": \"time\",\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:5607\",\n          \"format\": \"percent\",\n          \"label\": \"\",\n          \"logBase\": 1,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:5608\",\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"links\": []\n        },\n        \"overrides\": []\n      },\n      \"fill\": 0,\n      \"fillGradient\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 9,\n        \"w\": 8,\n        \"x\": 8,\n        \"y\": 31\n      },\n      \"hiddenSeries\": false,\n      \"id\": 59,\n      \"isNew\": true,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"max\": true,\n        \"min\": true,\n        \"rightSide\": false,\n        \"show\": true,\n        \"sort\": \"current\",\n        \"sortDesc\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"9.0.1\",\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (container_memory_working_set_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container)/ sum(container_spec_memory_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container) * 100\",\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"WSS：{{ container }}\",\n          \"metric\": \"container_memory_usage:sort_desc\",\n          \"refId\": \"A\",\n          \"step\": 10\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (container_memory_rss{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container)/ sum(container_spec_memory_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"}) by (container) * 100\",\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"RSS：{{ container }}\",\n          \"metric\": \"container_memory_usage:sort_desc\",\n          \"refId\": \"B\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": [],\n      \"timeRegions\": [],\n      \"title\": \" usage ( container number ) Microservice resource details \",\n      \"tooltip\": {\n        \"msResolution\": false,\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"mode\": \"time\",\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:5686\",\n          \"format\": \"percent\",\n          \"logBase\": 1,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:5687\",\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false\n      }\n    },\n    {\n      \"aliasColors\": {\n        \" restart :wholion-lbs\": \"green\",\n        \" update :wholion-lbs\": \"purple\"\n      },\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"links\": []\n        },\n        \"overrides\": []\n      },\n      \"fill\": 0,\n      \"fillGradient\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 9,\n        \"w\": 8,\n        \"x\": 16,\n        \"y\": 31\n      },\n      \"hiddenSeries\": false,\n      \"id\": 16,\n      \"isNew\": true,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"max\": true,\n        \"min\": false,\n        \"rightSide\": false,\n        \"show\": true,\n        \"sort\": \"current\",\n        \"sortDesc\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"9.0.1\",\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(sum(irate(container_network_receive_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",image!=\\\"\\\",name=~\\\"^k8s_.*\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\",pod=~\\\".*$Container.*\\\"}[2m])) by (pod)* on(pod) group_right kube_pod_container_info) by(container) *8\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \" update :{{ container }}\",\n          \"metric\": \"network\",\n          \"refId\": \"A\",\n          \"step\": 10\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"exemplar\": true,\n          \"expr\": \"sum(sum(irate(container_network_transmit_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",image!=\\\"\\\",name=~\\\"^k8s_.*\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\",pod=~\\\".*$Container.*\\\"}[2m])) by (pod)* on(pod) group_right kube_pod_container_info) by(container) *8\",\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \" restart :{{ container }}\",\n          \"metric\": \"network\",\n          \"refId\": \"B\",\n          \"step\": 10\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"sum (rate (container_network_receive_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",image!=\\\"\\\",name=~\\\"^k8s_.*\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\",pod=~\\\".*$Container.*\\\"}[2m])) by (pod)\",\n          \"hide\": true,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"-\u003e {{ pod }}\",\n          \"metric\": \"network\",\n          \"refId\": \"C\",\n          \"step\": 10\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"expr\": \"- sum (rate (container_network_transmit_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",image!=\\\"\\\",name=~\\\"^k8s_.*\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\",pod=~\\\".*$Container.*\\\"}[2m])) by (pod)\",\n          \"hide\": true,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"\u003c- {{ pod }}\",\n          \"metric\": \"network\",\n          \"refId\": \"D\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": [],\n      \"timeRegions\": [],\n      \"title\": \" usage ( container number ) Container memory usage ( Memory Usage )\",\n      \"tooltip\": {\n        \"msResolution\": false,\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"mode\": \"time\",\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:8106\",\n          \"format\": \"binbps\",\n          \"logBase\": 1,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:8107\",\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false\n      }\n    },\n    {\n      \"collapsed\": true,\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"prometheus\"\n      },\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 40\n      },\n      \"id\": 49,\n      \"panels\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"fieldConfig\": {\n            \"defaults\": {\n              \"color\": {\n                \"mode\": \"thresholds\"\n              },\n              \"custom\": {\n                \"align\": \"center\",\n                \"displayMode\": \"auto\",\n                \"filterable\": false\n              },\n              \"displayName\": \"\",\n              \"mappings\": [],\n              \"thresholds\": {\n                \"mode\": \"percentage\",\n                \"steps\": [\n                  {\n                    \"color\": \"green\"\n                  },\n                  {\n                    \"color\": \"#EAB839\",\n                    \"value\": 80\n                  },\n                  {\n                    \"color\": \"red\",\n                    \"value\": 90\n                  }\n                ]\n              },\n              \"unit\": \"short\"\n            },\n            \"overrides\": [\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \"CPU%( overall 100%)\"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 140\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \" average memory \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 78\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \"Pod core count \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 136\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \" core usage \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 71\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \"CPU selected \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 68\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \"CPU total \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 65\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \"WSS%\"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 129\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \"WSS\"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 73\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \"RSS%\"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 132\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \"RSS\"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 68\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \" resource statistics \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 69\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \" Network bandwidth \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 71\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \" send \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 67\n                  },\n                  {\n                    \"id\": \"thresholds\",\n                    \"value\": {\n                      \"mode\": \"absolute\",\n                      \"steps\": [\n                        {\n                          \"color\": \"green\"\n                        },\n                        {\n                          \"color\": \"#EAB839\",\n                          \"value\": 1\n                        },\n                        {\n                          \"color\": \"red\",\n                          \"value\": 3\n                        }\n                      ]\n                    }\n                  },\n                  {\n                    \"id\": \"custom.displayMode\",\n                    \"value\": \"color-background\"\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \" demand \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 71\n                  },\n                  {\n                    \"id\": \"unit\",\n                    \"value\": \"bytes\"\n                  },\n                  {\n                    \"id\": \"thresholds\",\n                    \"value\": {\n                      \"mode\": \"absolute\",\n                      \"steps\": [\n                        {\n                          \"color\": \"green\"\n                        },\n                        {\n                          \"color\": \"#EAB839\",\n                          \"value\": 10737418240\n                        },\n                        {\n                          \"color\": \"red\",\n                          \"value\": 16106127360\n                        }\n                      ]\n                    }\n                  },\n                  {\n                    \"id\": \"custom.displayMode\",\n                    \"value\": \"color-background\"\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byRegexp\",\n                  \"options\": \".*%.*\"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"unit\",\n                    \"value\": \"percent\"\n                  },\n                  {\n                    \"id\": \"custom.displayMode\",\n                    \"value\": \"gradient-gauge\"\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byRegexp\",\n                  \"options\": \" config .*|WSS$|RSS$\"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"unit\",\n                    \"value\": \"bytes\"\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byRegexp\",\n                  \"options\": \".* total \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"color\",\n                    \"value\": {\n                      \"fixedColor\": \"blue\",\n                      \"mode\": \"fixed\"\n                    }\n                  },\n                  {\n                    \"id\": \"custom.displayMode\",\n                    \"value\": \"color-background\"\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \" container \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 87\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byRegexp\",\n                  \"options\": \" core usage $|WSS$|RSS$\"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.displayMode\",\n                    \"value\": \"color-text\"\n                  },\n                  {\n                    \"id\": \"color\",\n                    \"value\": {\n                      \"fixedColor\": \"orange\",\n                      \"mode\": \"fixed\"\n                    }\n                  }\n                ]\n              },\n              {\n                \"matcher\": {\n                  \"id\": \"byName\",\n                  \"options\": \" container number \"\n                },\n                \"properties\": [\n                  {\n                    \"id\": \"custom.width\",\n                    \"value\": 116\n                  }\n                ]\n              }\n            ]\n          },\n          \"gridPos\": {\n            \"h\": 8,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 3\n          },\n          \"id\": 47,\n          \"options\": {\n            \"showHeader\": true,\n            \"sortBy\": []\n          },\n          \"pluginVersion\": \"7.5.11\",\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum(irate(container_cpu_usage_seconds_total{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}[2m])) by (container, pod,node,namespace) / (sum(container_spec_cpu_quota{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}/100000) by (container, pod,node,namespace)) * 100\",\n              \"format\": \"table\",\n              \"hide\": false,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"\",\n              \"refId\": \"A\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum(irate(container_cpu_usage_seconds_total{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}[2m])) by (container, pod,node,namespace)\",\n              \"format\": \"table\",\n              \"hide\": false,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"CPU disk usage \",\n              \"refId\": \"Q\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container,pod,node,namespace)\",\n              \"format\": \"table\",\n              \"hide\": false,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"\",\n              \"refId\": \"B\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"cpu\\\", unit=\\\"core\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container,pod,node,namespace)\",\n              \"format\": \"table\",\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"\",\n              \"refId\": \"C\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum (container_memory_working_set_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container, pod,node,namespace)/ sum(container_spec_memory_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container, pod,node,namespace) * 100\",\n              \"format\": \"table\",\n              \"hide\": false,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"wss%\",\n              \"refId\": \"I\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum (container_memory_working_set_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container, pod,node,namespace)\",\n              \"format\": \"table\",\n              \"hide\": false,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"wss\",\n              \"refId\": \"D\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum (container_memory_rss{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container, pod,node,namespace)/ sum(container_spec_memory_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container, pod,node,namespace) * 100\",\n              \"format\": \"table\",\n              \"hide\": false,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"rss%\",\n              \"refId\": \"L\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum (container_memory_rss{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container, pod,node,namespace)\",\n              \"format\": \"table\",\n              \"hide\": false,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"rss\",\n              \"refId\": \"K\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum(kube_pod_container_resource_requests{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container,pod,node,namespace)\",\n              \"format\": \"table\",\n              \"hide\": false,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"\",\n              \"refId\": \"E\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum(kube_pod_container_resource_limits{origin_prometheus=~\\\"$origin_prometheus\\\",resource=\\\"memory\\\", unit=\\\"byte\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container,pod,node,namespace)\",\n              \"format\": \"table\",\n              \"hide\": false,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"\",\n              \"refId\": \"F\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum(container_fs_usage_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container,pod,node,namespace)\",\n              \"format\": \"table\",\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"\",\n              \"refId\": \"J\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"kube_pod_container_status_restarts_total{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",namespace=~\\\"$NameSpace\\\"} * on (pod) group_left(node) kube_pod_info{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}\",\n              \"format\": \"table\",\n              \"hide\": false,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"\",\n              \"refId\": \"H\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"cass_jvm_heap{service=~\\\"$Container\\\"} * on (pod_ip) group_right(service) kube_pod_info{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",namespace=~\\\"$NameSpace\\\"}\",\n              \"format\": \"table\",\n              \"hide\": true,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"\",\n              \"refId\": \"M\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"cass_jvm_heap_max{service=~\\\"$Container\\\"} * on (pod_ip) group_right(service) kube_pod_info{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",namespace=~\\\"$NameSpace\\\"}\",\n              \"format\": \"table\",\n              \"hide\": true,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"\",\n              \"refId\": \"N\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"expr\": \"cass_jvm_noheap{service=~\\\"$Container\\\"} * on (pod_ip) group_right(service) kube_pod_info{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",namespace=~\\\"$NameSpace\\\"}\",\n              \"format\": \"table\",\n              \"hide\": true,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"\",\n              \"refId\": \"O\"\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"expr\": \"cass_jvm_noheap_max{service=~\\\"$Container\\\"} * on (pod_ip) group_right(service) kube_pod_info{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",namespace=~\\\"$NameSpace\\\"}\",\n              \"format\": \"table\",\n              \"hide\": true,\n              \"instant\": true,\n              \"interval\": \"\",\n              \"legendFormat\": \"\",\n              \"refId\": \"P\"\n            }\n          ],\n          \"title\": \"$Node：Pod Memory Limit ( Memory Usage )\",\n          \"transformations\": [\n            {\n              \"id\": \"merge\",\n              \"options\": {}\n            },\n            {\n              \"id\": \"organize\",\n              \"options\": {\n                \"excludeByName\": {\n                  \"Time\": true,\n                  \"Time 1\": true,\n                  \"Time 10\": true,\n                  \"Time 11\": true,\n                  \"Time 12\": true,\n                  \"Time 13\": true,\n                  \"Time 2\": true,\n                  \"Time 3\": true,\n                  \"Time 4\": true,\n                  \"Time 5\": true,\n                  \"Time 6\": true,\n                  \"Time 7\": true,\n                  \"Time 8\": true,\n                  \"Time 9\": true,\n                  \"Value #G\": true,\n                  \"__name__\": true,\n                  \"app_kubernetes_io_name\": true,\n                  \"app_kubernetes_io_name 1\": true,\n                  \"app_kubernetes_io_name 2\": true,\n                  \"app_kubernetes_io_version\": true,\n                  \"app_kubernetes_io_version 1\": true,\n                  \"app_kubernetes_io_version 2\": true,\n                  \"container 1\": true,\n                  \"container 10\": true,\n                  \"container 11\": true,\n                  \"container 12\": true,\n                  \"container 2\": true,\n                  \"container 3\": true,\n                  \"container 4\": true,\n                  \"container 5\": true,\n                  \"container 6\": true,\n                  \"container 7\": true,\n                  \"container 8\": true,\n                  \"container 9\": true,\n                  \"created_by_kind\": true,\n                  \"created_by_name\": true,\n                  \"host_ip\": true,\n                  \"instance\": true,\n                  \"instance 1\": true,\n                  \"instance 2\": true,\n                  \"job\": true,\n                  \"job 1\": true,\n                  \"job 2\": true,\n                  \"k8s_namespace\": true,\n                  \"k8s_namespace 1\": true,\n                  \"k8s_namespace 2\": true,\n                  \"k8s_sname\": true,\n                  \"k8s_sname 1\": true,\n                  \"k8s_sname 2\": true,\n                  \"namespace\": false,\n                  \"namespace 1\": true,\n                  \"namespace 10\": true,\n                  \"namespace 11\": true,\n                  \"namespace 12\": false,\n                  \"namespace 2\": true,\n                  \"namespace 3\": true,\n                  \"namespace 4\": true,\n                  \"namespace 5\": true,\n                  \"namespace 6\": true,\n                  \"namespace 7\": true,\n                  \"namespace 8\": true,\n                  \"namespace 9\": true,\n                  \"node 1\": true,\n                  \"node 10\": true,\n                  \"node 11\": false,\n                  \"node 12\": true,\n                  \"node 2\": true,\n                  \"node 3\": true,\n                  \"node 4\": true,\n                  \"node 5\": true,\n                  \"node 6\": true,\n                  \"node 7\": true,\n                  \"node 8\": true,\n                  \"node 9\": true,\n                  \"origin_prometheus\": true,\n                  \"origin_prometheus 1\": true,\n                  \"origin_prometheus 2\": true,\n                  \"phase\": true,\n                  \"pod_ip\": true,\n                  \"priority_class\": true,\n                  \"uid\": true\n                },\n                \"indexByName\": {\n                  \"Time\": 23,\n                  \"Value #A\": 4,\n                  \"Value #B\": 6,\n                  \"Value #C\": 7,\n                  \"Value #D\": 9,\n                  \"Value #E\": 12,\n                  \"Value #F\": 13,\n                  \"Value #H\": 22,\n                  \"Value #I\": 8,\n                  \"Value #J\": 14,\n                  \"Value #K\": 11,\n                  \"Value #L\": 10,\n                  \"Value #Q\": 5,\n                  \"app_kubernetes_io_name\": 15,\n                  \"app_kubernetes_io_version\": 16,\n                  \"container\": 2,\n                  \"instance\": 17,\n                  \"job\": 18,\n                  \"k8s_namespace\": 19,\n                  \"k8s_sname\": 20,\n                  \"namespace\": 1,\n                  \"node\": 0,\n                  \"origin_prometheus\": 21,\n                  \"pod\": 3\n                },\n                \"renameByName\": {\n                  \"Value #A\": \"CPU%( overall 100%)\",\n                  \"Value #B\": \"CPU selected \",\n                  \"Value #C\": \"CPU total \",\n                  \"Value #D\": \"WSS\",\n                  \"Value #E\": \" resource statistics \",\n                  \"Value #F\": \" Network bandwidth \",\n                  \"Value #H\": \" send \",\n                  \"Value #I\": \"WSS%\",\n                  \"Value #J\": \" demand \",\n                  \"Value #K\": \"RSS\",\n                  \"Value #L\": \"RSS%\",\n                  \"Value #Q\": \" core usage \",\n                  \"container\": \" container number \",\n                  \"namespace\": \" average memory \",\n                  \"namespace 1\": \"\",\n                  \"namespace 12\": \" average memory \",\n                  \"node\": \" container \",\n                  \"node 1\": \"\",\n                  \"node 11\": \" container \",\n                  \"pod\": \"Pod core count \",\n                  \"priority_class\": \"\"\n                }\n              }\n            },\n            {\n              \"id\": \"filterFieldsByName\",\n              \"options\": {\n                \"include\": {\n                  \"names\": [\n                    \" container \",\n                    \" average memory \",\n                    \"Pod core count \",\n                    \"CPU%( overall 100%)\",\n                    \" core usage \",\n                    \"CPU selected \",\n                    \"CPU total \",\n                    \"WSS%\",\n                    \"WSS\",\n                    \"RSS%\",\n                    \"RSS\",\n                    \" resource statistics \",\n                    \" Network bandwidth \",\n                    \" demand \",\n                    \" send \",\n                    \" container number \"\n                  ]\n                }\n              }\n            }\n          ],\n          \"type\": \"table\"\n        },\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"decimals\": 2,\n          \"editable\": true,\n          \"error\": false,\n          \"fieldConfig\": {\n            \"defaults\": {\n              \"links\": []\n            },\n            \"overrides\": []\n          },\n          \"fill\": 0,\n          \"fillGradient\": 0,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 9,\n            \"w\": 8,\n            \"x\": 0,\n            \"y\": 11\n          },\n          \"height\": \"\",\n          \"hiddenSeries\": false,\n          \"id\": 58,\n          \"isNew\": true,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": true,\n            \"current\": true,\n            \"hideEmpty\": false,\n            \"hideZero\": false,\n            \"max\": true,\n            \"min\": false,\n            \"rightSide\": false,\n            \"show\": true,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 1,\n          \"links\": [],\n          \"nullPointMode\": \"null\",\n          \"options\": {\n            \"alertThreshold\": true\n          },\n          \"percentage\": false,\n          \"pluginVersion\": \"7.5.11\",\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": false,\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum(irate(container_cpu_usage_seconds_total{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}[2m])) by (container, pod) / (sum(container_spec_cpu_quota{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}/100000) by (container, pod)) * 100\",\n              \"hide\": false,\n              \"instant\": false,\n              \"interval\": \"\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"{{ pod }}\",\n              \"metric\": \"container_cpu\",\n              \"refId\": \"A\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeRegions\": [],\n          \"title\": \"Pod upper limit CPU Request Rate ( overall 100% Memory Usage )\",\n          \"tooltip\": {\n            \"msResolution\": true,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"mode\": \"time\",\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"$$hashKey\": \"object:5607\",\n              \"format\": \"percent\",\n              \"label\": \"\",\n              \"logBase\": 1,\n              \"show\": true\n            },\n            {\n              \"$$hashKey\": \"object:5608\",\n              \"format\": \"short\",\n              \"logBase\": 1,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false\n          }\n        },\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"decimals\": 2,\n          \"editable\": true,\n          \"error\": false,\n          \"fieldConfig\": {\n            \"defaults\": {\n              \"links\": []\n            },\n            \"overrides\": []\n          },\n          \"fill\": 0,\n          \"fillGradient\": 0,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 9,\n            \"w\": 8,\n            \"x\": 8,\n            \"y\": 11\n          },\n          \"hiddenSeries\": false,\n          \"id\": 27,\n          \"isNew\": true,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": false,\n            \"current\": true,\n            \"max\": true,\n            \"min\": false,\n            \"rightSide\": false,\n            \"show\": true,\n            \"sort\": \"current\",\n            \"sortDesc\": false,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"null\",\n          \"options\": {\n            \"alertThreshold\": true\n          },\n          \"percentage\": false,\n          \"pluginVersion\": \"7.5.11\",\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": false,\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum (container_memory_working_set_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container, pod)/ sum(container_spec_memory_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container, pod) * 100\",\n              \"interval\": \"\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"WSS：{{ pod }}\",\n              \"metric\": \"container_memory_usage:sort_desc\",\n              \"refId\": \"A\",\n              \"step\": 10\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum (container_memory_rss{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container, pod)/ sum(container_spec_memory_limit_bytes{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",container =~\\\"$Container\\\",container !=\\\"\\\",container!=\\\"POD\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\"}) by (container, pod) * 100\",\n              \"interval\": \"\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"RSS：{{ pod }}\",\n              \"metric\": \"container_memory_usage:sort_desc\",\n              \"refId\": \"B\",\n              \"step\": 10\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"(cass_jvm_heap{service=~\\\"$Container\\\"} * on (pod_ip) group_right(service) kube_pod_info{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",namespace=~\\\"$NameSpace\\\"}) / (cass_jvm_heap_max{service=~\\\"$Container\\\"} * on (pod_ip) group_right(service) kube_pod_info{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",namespace=~\\\"$NameSpace\\\"}) * 100\",\n              \"instant\": false,\n              \"interval\": \"\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"Heap：{{ pod }}\",\n              \"metric\": \"container_memory_usage:sort_desc\",\n              \"refId\": \"C\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeRegions\": [],\n          \"title\": \"Pod View more dashboards ( Memory Usage )\",\n          \"tooltip\": {\n            \"msResolution\": false,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"mode\": \"time\",\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"$$hashKey\": \"object:5686\",\n              \"format\": \"percent\",\n              \"logBase\": 1,\n              \"max\": \"100\",\n              \"show\": true\n            },\n            {\n              \"$$hashKey\": \"object:5687\",\n              \"format\": \"short\",\n              \"logBase\": 1,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false\n          }\n        },\n        {\n          \"aliasColors\": {\n            \" restart :wholion-lbs\": \"green\",\n            \" update :wholion-lbs\": \"purple\"\n          },\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"decimals\": 2,\n          \"editable\": true,\n          \"error\": false,\n          \"fieldConfig\": {\n            \"defaults\": {\n              \"links\": []\n            },\n            \"overrides\": []\n          },\n          \"fill\": 0,\n          \"fillGradient\": 0,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 9,\n            \"w\": 8,\n            \"x\": 16,\n            \"y\": 11\n          },\n          \"hiddenSeries\": false,\n          \"id\": 77,\n          \"isNew\": true,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": true,\n            \"current\": true,\n            \"max\": true,\n            \"min\": false,\n            \"rightSide\": false,\n            \"show\": true,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 1,\n          \"links\": [],\n          \"nullPointMode\": \"null\",\n          \"options\": {\n            \"alertThreshold\": true\n          },\n          \"percentage\": false,\n          \"pluginVersion\": \"7.5.11\",\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": false,\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum(sum(irate(container_network_receive_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",image!=\\\"\\\",name=~\\\"^k8s_.*\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\",pod=~\\\".*$Container.*\\\"}[2m])) by (pod)* on(pod) group_right kube_pod_container_info) by(pod) *8\",\n              \"hide\": false,\n              \"interval\": \"\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \" update :{{ pod}}\",\n              \"metric\": \"network\",\n              \"refId\": \"A\",\n              \"step\": 10\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"exemplar\": true,\n              \"expr\": \"sum(sum(irate(container_network_transmit_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",image!=\\\"\\\",name=~\\\"^k8s_.*\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\",pod=~\\\".*$Container.*\\\"}[2m])) by (pod)* on(pod) group_right kube_pod_container_info) by(pod) *8\",\n              \"interval\": \"\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \" restart :{{ pod}}\",\n              \"metric\": \"network\",\n              \"refId\": \"B\",\n              \"step\": 10\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"expr\": \"sum (rate (container_network_receive_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",image!=\\\"\\\",name=~\\\"^k8s_.*\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\",pod=~\\\".*$Container.*\\\"}[2m])) by (pod)\",\n              \"hide\": true,\n              \"interval\": \"\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"-\u003e {{ pod }}\",\n              \"metric\": \"network\",\n              \"refId\": \"C\",\n              \"step\": 10\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheus\"\n              },\n              \"expr\": \"- sum (rate (container_network_transmit_bytes_total{origin_prometheus=~\\\"$origin_prometheus\\\",pod=~\\\"$Pod\\\",image!=\\\"\\\",name=~\\\"^k8s_.*\\\",node=~\\\"^$Node$\\\",namespace=~\\\"$NameSpace\\\",pod=~\\\".*$Container.*\\\"}[2m])) by (pod)\",\n              \"hide\": true,\n              \"interval\": \"\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"\u003c- {{ pod }}\",\n              \"metric\": \"network\",\n              \"refId\": \"D\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeRegions\": [],\n          \"title\": \"Pod Container memory usage ( Memory Usage )\",\n          \"tooltip\": {\n            \"msResolution\": false,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"mode\": \"time\",\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"$$hashKey\": \"object:8106\",\n              \"format\": \"binbps\",\n              \"logBase\": 1,\n              \"show\": true\n            },\n            {\n              \"$$hashKey\": \"object:8107\",\n              \"format\": \"short\",\n              \"logBase\": 1,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false\n          }\n        }\n      ],\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheus\"\n          },\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Pod Memory Requirements ： space Pod:【$Pod】\",\n      \"type\": \"row\"\n    }\n  ],\n  \"refresh\": \"\",\n  \"schemaVersion\": 36,\n  \"style\": \"dark\",\n  \"tags\": [\n    \"Prometheus\",\n    \"Kubernetes\"\n  ],\n  \"templating\": {\n    \"list\": [\n      {\n        \"allValue\": \"\",\n        \"current\": {\n          \"isNone\": true,\n          \"selected\": false,\n          \"text\": \"None\",\n          \"value\": \"\"\n        },\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"prometheus\"\n        },\n        \"definition\": \"label_values(origin_prometheus)\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"K8S\",\n        \"multi\": false,\n        \"name\": \"origin_prometheus\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(origin_prometheus)\",\n          \"refId\": \"Prometheus-origin_prometheus-Variable-Query\"\n        },\n        \"refresh\": 2,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 5,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"allValue\": \"\",\n        \"current\": {\n          \"selected\": false,\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"prometheus\"\n        },\n        \"definition\": \"label_values(kube_node_info{origin_prometheus=~\\\"$origin_prometheus\\\"},node)\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \" container \",\n        \"multi\": false,\n        \"name\": \"Node\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(kube_node_info{origin_prometheus=~\\\"$origin_prometheus\\\"},node)\",\n          \"refId\": \"Prometheus-Node-Variable-Query\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 5,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"allValue\": \"\",\n        \"current\": {\n          \"selected\": false,\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"prometheus\"\n        },\n        \"definition\": \"label_values(kube_namespace_labels{origin_prometheus=~\\\"$origin_prometheus\\\"},namespace)\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \" average memory \",\n        \"multi\": false,\n        \"name\": \"NameSpace\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(kube_namespace_labels{origin_prometheus=~\\\"$origin_prometheus\\\"},namespace)\",\n          \"refId\": \"Prometheus-NameSpace-Variable-Query\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 5,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"allValue\": \".*\",\n        \"current\": {\n          \"selected\": true,\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"prometheus\"\n        },\n        \"definition\": \"label_values(kube_pod_container_info{origin_prometheus=~\\\"$origin_prometheus\\\",namespace=~\\\"$NameSpace\\\"},container)\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \" usage ( container number )\",\n        \"multi\": false,\n        \"name\": \"Container\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(kube_pod_container_info{origin_prometheus=~\\\"$origin_prometheus\\\",namespace=~\\\"$NameSpace\\\"},container)\",\n          \"refId\": \"Prometheus-Container-Variable-Query\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 5,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"allValue\": \".*\",\n        \"current\": {\n          \"selected\": false,\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"prometheus\"\n        },\n        \"definition\": \"label_values(kube_pod_container_info{origin_prometheus=~\\\"$origin_prometheus\\\",namespace=~\\\"$NameSpace\\\",container=~\\\"$Container\\\"},pod)\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Pod\",\n        \"multi\": false,\n        \"name\": \"Pod\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(kube_pod_container_info{origin_prometheus=~\\\"$origin_prometheus\\\",namespace=~\\\"$NameSpace\\\",container=~\\\"$Container\\\"},pod)\",\n          \"refId\": \"Prometheus-Pod-Variable-Query\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 5,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      }\n    ]\n  },\n  \"time\": {\n    \"from\": \"now-30m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"browser\",\n  \"title\": \"FitBod GKE Dash\",\n  \"uid\": \"PwMJtdvnz\",\n  \"version\": 5,\n  \"weekStart\": \"\"\n}\n"},"metadata":[{"annotations":null,"generate_name":null,"labels":{"grafana_dashboard":"1"},"name":"grafana-dashboards","namespace":"monitoring"}]},"after_unknown":{"data":{},"id":true,"metadata":[{"generation":true,"labels":{},"resource_version":true,"uid":true}]},"before_sensitive":false,"after_sensitive":{"data":{},"metadata":[{"labels":{}}]}}},{"address":"kubernetes_deployment.app","mode":"managed","type":"kubernetes_deployment","name":"app","provider_name":"registry.terraform.io/hashicorp/kubernetes","change":{"actions":["create"],"before":null,"after":{"metadata":[{"annotations":null,"generate_name":null,"labels":{"app":"myworkout"},"name":"myworkout","namespace":"default"}],"spec":[{"min_ready_seconds":0,"paused":false,"progress_deadline_seconds":600,"revision_history_limit":10,"selector":[{"match_expressions":[],"match_labels":{"app":"myworkout"}}],"template":[{"metadata":[{"annotations":null,"generate_name":null,"labels":{"app":"myworkout"},"name":"myworkout","namespace":null}],"spec":[{"active_deadline_seconds":null,"affinity":[],"automount_service_account_token":true,"container":[{"args":null,"command":["/bin/bash","-c","bundle exec rails s -b 0.0.0.0 -p 3001"],"env":[],"env_from":[{"config_map_ref":[{"name":"myworkout-config","optional":null}],"prefix":null,"secret_ref":[]}],"image":"fitbodinc/my_workout:0.1.0","image_pull_policy":"IfNotPresent","lifecycle":[],"liveness_probe":[],"name":"myworkout","port":[{"container_port":3001,"host_ip":null,"host_port":null,"name":null,"protocol":"TCP"}],"readiness_probe":[],"resources":[{"limits":{"cpu":"250m","memory":"512Mi"},"requests":{"cpu":"150m","memory":"128Mi"}}],"security_context":[],"startup_probe":[],"stdin":false,"stdin_once":false,"termination_message_path":"/dev/termination-log","tty":false,"volume_mount":[{"mount_path":"/app/public/assets","mount_propagation":"None","name":"app-pv","read_only":false,"sub_path":null}],"working_dir":null}],"dns_config":[],"dns_policy":"ClusterFirst","enable_service_links":true,"host_aliases":[],"host_ipc":false,"host_network":false,"host_pid":false,"init_container":[],"node_selector":null,"priority_class_name":null,"restart_policy":"Always","security_context":[],"share_process_namespace":false,"subdomain":null,"termination_grace_period_seconds":30,"toleration":[],"topology_spread_constraint":[],"volume":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"config_map":[],"csi":[],"downward_api":[],"empty_dir":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[],"git_repo":[],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"name":"app-pv","nfs":[],"persistent_volume_claim":[{"claim_name":"app-pvc","read_only":false}],"photon_persistent_disk":[],"projected":[],"quobyte":[],"rbd":[],"secret":[],"vsphere_volume":[]}]}]}]}],"timeouts":{"create":"2m","delete":"2m","update":null},"wait_for_rollout":true},"after_unknown":{"id":true,"metadata":[{"generation":true,"labels":{},"resource_version":true,"uid":true}],"spec":[{"replicas":true,"selector":[{"match_expressions":[],"match_labels":{}}],"strategy":true,"template":[{"metadata":[{"generation":true,"labels":{},"resource_version":true,"uid":true}],"spec":[{"affinity":[],"container":[{"command":[false,false,false],"env":[],"env_from":[{"config_map_ref":[{}],"secret_ref":[]}],"lifecycle":[],"liveness_probe":[],"port":[{}],"readiness_probe":[],"resources":[{"limits":{},"requests":{}}],"security_context":[],"startup_probe":[],"termination_message_policy":true,"volume_mount":[{}]}],"dns_config":[],"host_aliases":[],"hostname":true,"image_pull_secrets":true,"init_container":[],"node_name":true,"readiness_gate":true,"security_context":[],"service_account_name":true,"toleration":[],"topology_spread_constraint":[],"volume":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"config_map":[],"csi":[],"downward_api":[],"empty_dir":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[],"git_repo":[],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"nfs":[],"persistent_volume_claim":[{}],"photon_persistent_disk":[],"projected":[],"quobyte":[],"rbd":[],"secret":[],"vsphere_volume":[]}]}]}]}],"timeouts":{}},"before_sensitive":false,"after_sensitive":{"metadata":[{"labels":{}}],"spec":[{"selector":[{"match_expressions":[],"match_labels":{}}],"strategy":[],"template":[{"metadata":[{"labels":{}}],"spec":[{"affinity":[],"container":[{"command":[false,false,false],"env":[],"env_from":[{"config_map_ref":[{}],"secret_ref":[]}],"lifecycle":[],"liveness_probe":[],"port":[{}],"readiness_probe":[],"resources":[{"limits":{},"requests":{}}],"security_context":[],"startup_probe":[],"volume_mount":[{}]}],"dns_config":[],"host_aliases":[],"image_pull_secrets":[],"init_container":[],"readiness_gate":[],"security_context":[],"toleration":[],"topology_spread_constraint":[],"volume":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"config_map":[],"csi":[],"downward_api":[],"empty_dir":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[],"git_repo":[],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"nfs":[],"persistent_volume_claim":[{}],"photon_persistent_disk":[],"projected":[],"quobyte":[],"rbd":[],"secret":[],"vsphere_volume":[]}]}]}]}],"timeouts":{}}}},{"address":"kubernetes_ingress_v1.ingress_app","mode":"managed","type":"kubernetes_ingress_v1","name":"ingress_app","provider_name":"registry.terraform.io/hashicorp/kubernetes","change":{"actions":["create"],"before":null,"after":{"metadata":[{"annotations":{"kubernetes.io/ingress.class":"nginx","nginx.ingress.kubernetes.io/server-snippet":"set_real_ip_from 0.0.0.0/0; real_ip_header X-Forwarded-For;"},"generate_name":null,"labels":null,"name":"ingress-nginx","namespace":"default"}],"spec":[{"default_backend":[],"ingress_class_name":null,"rule":[{"host":null,"http":[{"path":[{"backend":[{"resource":[],"service":[{"name":"app-frontend","port":[{"name":null,"number":3001}]}]}],"path":"/","path_type":"Prefix"}]}]}],"tls":[]}],"wait_for_load_balancer":true},"after_unknown":{"id":true,"metadata":[{"annotations":{},"generation":true,"resource_version":true,"uid":true}],"spec":[{"default_backend":[],"rule":[{"http":[{"path":[{"backend":[{"resource":[],"service":[{"port":[{}]}]}]}]}]}],"tls":[]}],"status":true},"before_sensitive":false,"after_sensitive":{"metadata":[{"annotations":{}}],"spec":[{"default_backend":[],"rule":[{"http":[{"path":[{"backend":[{"resource":[],"service":[{"port":[{}]}]}]}]}]}],"tls":[]}],"status":[]}}},{"address":"kubernetes_job.grafana_set_main_dash[0]","mode":"managed","type":"kubernetes_job","name":"grafana_set_main_dash","index":0,"provider_name":"registry.terraform.io/hashicorp/kubernetes","change":{"actions":["create"],"before":null,"after":{"metadata":[{"annotations":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"grafana","helm.sh/hook":"post-install","helm.sh/hook-delete-policy":"hook-succeeded","helm.sh/hook-weight":"-5"},"generate_name":null,"labels":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"monitoring"},"name":"prometheus-grafana","namespace":"monitoring"}],"spec":[{"active_deadline_seconds":null,"backoff_limit":null,"completions":1,"manual_selector":null,"parallelism":1,"template":[{"metadata":[{"annotations":null,"generate_name":null,"labels":null}],"spec":[{"active_deadline_seconds":null,"affinity":[],"automount_service_account_token":true,"container":[{"command":["/bin/sh","-c"],"env":[],"env_from":[],"image":"appropriate/curl:latest","image_pull_policy":"IfNotPresent","lifecycle":[],"liveness_probe":[],"name":"prometheus-grafana-set-main-dash","port":[],"readiness_probe":[],"security_context":[],"startup_probe":[],"stdin":false,"stdin_once":false,"termination_message_path":"/dev/termination-log","tty":false,"volume_mount":[],"working_dir":null}],"dns_config":[],"dns_policy":"ClusterFirst","enable_service_links":true,"host_aliases":[],"host_ipc":false,"host_network":false,"host_pid":false,"init_container":[],"node_selector":null,"priority_class_name":null,"restart_policy":"OnFailure","security_context":[],"share_process_namespace":false,"subdomain":null,"termination_grace_period_seconds":30,"toleration":[],"topology_spread_constraint":[]}]}],"ttl_seconds_after_finished":null}],"timeouts":{"create":"1m","delete":"2m","update":null},"wait_for_completion":true},"after_unknown":{"id":true,"metadata":[{"annotations":{},"generation":true,"labels":{},"resource_version":true,"uid":true}],"spec":[{"completion_mode":true,"selector":true,"template":[{"metadata":[{"generation":true,"name":true,"resource_version":true,"uid":true}],"spec":[{"affinity":[],"container":[{"args":true,"command":[false,false],"env":[],"env_from":[],"lifecycle":[],"liveness_probe":[],"port":[],"readiness_probe":[],"resources":true,"security_context":[],"startup_probe":[],"termination_message_policy":true,"volume_mount":[]}],"dns_config":[],"host_aliases":[],"hostname":true,"image_pull_secrets":true,"init_container":[],"node_name":true,"readiness_gate":true,"security_context":[],"service_account_name":true,"toleration":[],"topology_spread_constraint":[],"volume":true}]}]}],"timeouts":{}},"before_sensitive":false,"after_sensitive":{"metadata":[{"annotations":{},"labels":{}}],"spec":[{"selector":[],"template":[{"metadata":[{}],"spec":[{"affinity":[],"container":[{"args":[],"command":[false,false],"env":[],"env_from":[],"lifecycle":[],"liveness_probe":[],"port":[],"readiness_probe":[],"resources":[],"security_context":[],"startup_probe":[],"volume_mount":[]}],"dns_config":[],"host_aliases":[],"image_pull_secrets":[],"init_container":[],"readiness_gate":[],"security_context":[],"toleration":[],"topology_spread_constraint":[],"volume":[]}]}]}],"timeouts":{}}}},{"address":"kubernetes_job.init_app[0]","mode":"managed","type":"kubernetes_job","name":"init_app","index":0,"provider_name":"registry.terraform.io/hashicorp/kubernetes","change":{"actions":["create"],"before":null,"after":{"metadata":[{"annotations":null,"generate_name":null,"labels":{"app":"myworkout"},"name":"myworkout-init","namespace":"default"}],"spec":[{"active_deadline_seconds":null,"backoff_limit":null,"completions":1,"manual_selector":null,"parallelism":1,"template":[{"metadata":[{"annotations":null,"generate_name":null,"labels":null}],"spec":[{"active_deadline_seconds":null,"affinity":[],"automount_service_account_token":true,"container":[{"args":["                  bundle exec rake assets:precompile\n                  # This is a very rudimentary way to check if records are already in the database.\n                  bundle exec rake db:create\n                  count=$(psql -U \"$POSTGRES_USER\" -d my_workout_production -h \"$POSTGRES_HOST\" -AXqtc \"SELECT reltuples AS estimate FROM pg_class where relname ='single_sets'\")\n                  if [[ \"$count\" -eq 0 ]]; then\n                          bundle exec rake db:migrate db:seed\n                  elif [[ -z \"$count\" ]]; then\n                          bundle exec rake db:create db:migrate db:seed\n                  else\n                          bundle exec rake db:migrate\n                  fi\n                  readarray -td: ADMIN \u003c \u003c(printf '%s' \"$admin\")\n                  readarray -td: USER1 \u003c \u003c(printf '%s' \"$user1\")\n                  bundle exec rails runner \"AdminUser.find_by_email('${ADMIN[0]}').update_attributes(:password =\u003e '${ADMIN[1]}')\"\n                  bundle exec rails runner \"User.find_by_email('${USER1[0]}').update_attributes(:password =\u003e '${USER1[1]}')\"\n"],"command":["/bin/bash","-c"],"env":[{"name":"admin","value":null,"value_from":[{"config_map_key_ref":[],"field_ref":[],"resource_field_ref":[],"secret_key_ref":[{"key":"login","name":"app-pass-admin","optional":null}]}]},{"name":"user1","value":null,"value_from":[{"config_map_key_ref":[],"field_ref":[],"resource_field_ref":[],"secret_key_ref":[{"key":"login","name":"app-pass-user1","optional":null}]}]}],"env_from":[{"config_map_ref":[{"name":"myworkout-config","optional":null}],"prefix":null,"secret_ref":[]}],"image":"fitbodinc/my_workout:0.1.0","image_pull_policy":"IfNotPresent","lifecycle":[],"liveness_probe":[],"name":"myworkout-init","port":[],"readiness_probe":[],"security_context":[],"startup_probe":[],"stdin":false,"stdin_once":false,"termination_message_path":"/dev/termination-log","tty":false,"volume_mount":[{"mount_path":"/app/public/assets","mount_propagation":"None","name":"app-pv","read_only":false,"sub_path":null}],"working_dir":null}],"dns_config":[],"dns_policy":"ClusterFirst","enable_service_links":true,"host_aliases":[],"host_ipc":false,"host_network":false,"host_pid":false,"init_container":[],"node_selector":null,"priority_class_name":null,"restart_policy":"Never","security_context":[],"share_process_namespace":false,"subdomain":null,"termination_grace_period_seconds":30,"toleration":[],"topology_spread_constraint":[],"volume":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"config_map":[],"csi":[],"downward_api":[],"empty_dir":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[],"git_repo":[],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"name":"app-pv","nfs":[],"persistent_volume_claim":[{"claim_name":"app-pvc","read_only":false}],"photon_persistent_disk":[],"projected":[],"quobyte":[],"rbd":[],"secret":[],"vsphere_volume":[]}]}]}],"ttl_seconds_after_finished":null}],"timeouts":{"create":"3m","delete":"2m","update":null},"wait_for_completion":true},"after_unknown":{"id":true,"metadata":[{"generation":true,"labels":{},"resource_version":true,"uid":true}],"spec":[{"completion_mode":true,"selector":true,"template":[{"metadata":[{"generation":true,"name":true,"resource_version":true,"uid":true}],"spec":[{"affinity":[],"container":[{"args":[false],"command":[false,false],"env":[{"value_from":[{"config_map_key_ref":[],"field_ref":[],"resource_field_ref":[],"secret_key_ref":[{}]}]},{"value_from":[{"config_map_key_ref":[],"field_ref":[],"resource_field_ref":[],"secret_key_ref":[{}]}]}],"env_from":[{"config_map_ref":[{}],"secret_ref":[]}],"lifecycle":[],"liveness_probe":[],"port":[],"readiness_probe":[],"resources":true,"security_context":[],"startup_probe":[],"termination_message_policy":true,"volume_mount":[{}]}],"dns_config":[],"host_aliases":[],"hostname":true,"image_pull_secrets":true,"init_container":[],"node_name":true,"readiness_gate":true,"security_context":[],"service_account_name":true,"toleration":[],"topology_spread_constraint":[],"volume":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"config_map":[],"csi":[],"downward_api":[],"empty_dir":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[],"git_repo":[],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"nfs":[],"persistent_volume_claim":[{}],"photon_persistent_disk":[],"projected":[],"quobyte":[],"rbd":[],"secret":[],"vsphere_volume":[]}]}]}]}],"timeouts":{}},"before_sensitive":false,"after_sensitive":{"metadata":[{"labels":{}}],"spec":[{"selector":[],"template":[{"metadata":[{}],"spec":[{"affinity":[],"container":[{"args":[false],"command":[false,false],"env":[{"value_from":[{"config_map_key_ref":[],"field_ref":[],"resource_field_ref":[],"secret_key_ref":[{}]}]},{"value_from":[{"config_map_key_ref":[],"field_ref":[],"resource_field_ref":[],"secret_key_ref":[{}]}]}],"env_from":[{"config_map_ref":[{}],"secret_ref":[]}],"lifecycle":[],"liveness_probe":[],"port":[],"readiness_probe":[],"resources":[],"security_context":[],"startup_probe":[],"volume_mount":[{}]}],"dns_config":[],"host_aliases":[],"image_pull_secrets":[],"init_container":[],"readiness_gate":[],"security_context":[],"toleration":[],"topology_spread_constraint":[],"volume":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"config_map":[],"csi":[],"downward_api":[],"empty_dir":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[],"git_repo":[],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"nfs":[],"persistent_volume_claim":[{}],"photon_persistent_disk":[],"projected":[],"quobyte":[],"rbd":[],"secret":[],"vsphere_volume":[]}]}]}]}],"timeouts":{}}}},{"address":"kubernetes_persistent_volume.app_pv","mode":"managed","type":"kubernetes_persistent_volume","name":"app_pv","provider_name":"registry.terraform.io/hashicorp/kubernetes","change":{"actions":["create"],"before":null,"after":{"metadata":[{"annotations":null,"labels":null,"name":"app-pv"}],"spec":[{"access_modes":["ReadWriteMany"],"capacity":{"storage":"0.25"},"mount_options":null,"persistent_volume_reclaim_policy":"Retain","persistent_volume_source":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"csi":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[{"fs_type":"ext4","partition":null,"pd_name":"app","read_only":null}],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"nfs":[],"photon_persistent_disk":[],"quobyte":[],"rbd":[],"vsphere_volume":[]}],"storage_class_name":"standard","volume_mode":"Filesystem"}],"timeouts":null},"after_unknown":{"id":true,"metadata":[{"generation":true,"resource_version":true,"uid":true}],"spec":[{"access_modes":[false],"capacity":{},"claim_ref":true,"node_affinity":true,"persistent_volume_source":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"csi":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[{}],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"nfs":[],"photon_persistent_disk":[],"quobyte":[],"rbd":[],"vsphere_volume":[]}]}]},"before_sensitive":false,"after_sensitive":{"metadata":[{}],"spec":[{"access_modes":[false],"capacity":{},"claim_ref":[],"node_affinity":[],"persistent_volume_source":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"csi":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[{}],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"nfs":[],"photon_persistent_disk":[],"quobyte":[],"rbd":[],"vsphere_volume":[]}]}]}}},{"address":"kubernetes_persistent_volume.grafana_pv","mode":"managed","type":"kubernetes_persistent_volume","name":"grafana_pv","provider_name":"registry.terraform.io/hashicorp/kubernetes","change":{"actions":["create"],"before":null,"after":{"metadata":[{"annotations":null,"labels":null,"name":"grafana-pv"}],"spec":[{"access_modes":["ReadWriteMany"],"capacity":{"storage":"0.25"},"mount_options":null,"persistent_volume_reclaim_policy":"Retain","persistent_volume_source":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"csi":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[{"fs_type":"ext4","partition":null,"pd_name":"monitoring","read_only":null}],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"nfs":[],"photon_persistent_disk":[],"quobyte":[],"rbd":[],"vsphere_volume":[]}],"storage_class_name":"standard","volume_mode":"Filesystem"}],"timeouts":null},"after_unknown":{"id":true,"metadata":[{"generation":true,"resource_version":true,"uid":true}],"spec":[{"access_modes":[false],"capacity":{},"claim_ref":true,"node_affinity":true,"persistent_volume_source":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"csi":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[{}],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"nfs":[],"photon_persistent_disk":[],"quobyte":[],"rbd":[],"vsphere_volume":[]}]}]},"before_sensitive":false,"after_sensitive":{"metadata":[{}],"spec":[{"access_modes":[false],"capacity":{},"claim_ref":[],"node_affinity":[],"persistent_volume_source":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"csi":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[{}],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"nfs":[],"photon_persistent_disk":[],"quobyte":[],"rbd":[],"vsphere_volume":[]}]}]}}},{"address":"kubernetes_persistent_volume.prom_pv","mode":"managed","type":"kubernetes_persistent_volume","name":"prom_pv","provider_name":"registry.terraform.io/hashicorp/kubernetes","change":{"actions":["create"],"before":null,"after":{"metadata":[{"annotations":null,"labels":null,"name":"prom-pv"}],"spec":[{"access_modes":["ReadWriteMany"],"capacity":{"storage":"0.25"},"mount_options":null,"persistent_volume_reclaim_policy":"Retain","persistent_volume_source":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"csi":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[{"fs_type":"ext4","partition":null,"pd_name":"monitoring","read_only":null}],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"nfs":[],"photon_persistent_disk":[],"quobyte":[],"rbd":[],"vsphere_volume":[]}],"storage_class_name":"standard-rwo","volume_mode":"Filesystem"}],"timeouts":null},"after_unknown":{"id":true,"metadata":[{"generation":true,"resource_version":true,"uid":true}],"spec":[{"access_modes":[false],"capacity":{},"claim_ref":true,"node_affinity":true,"persistent_volume_source":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"csi":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[{}],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"nfs":[],"photon_persistent_disk":[],"quobyte":[],"rbd":[],"vsphere_volume":[]}]}]},"before_sensitive":false,"after_sensitive":{"metadata":[{}],"spec":[{"access_modes":[false],"capacity":{},"claim_ref":[],"node_affinity":[],"persistent_volume_source":[{"aws_elastic_block_store":[],"azure_disk":[],"azure_file":[],"ceph_fs":[],"cinder":[],"csi":[],"fc":[],"flex_volume":[],"flocker":[],"gce_persistent_disk":[{}],"glusterfs":[],"host_path":[],"iscsi":[],"local":[],"nfs":[],"photon_persistent_disk":[],"quobyte":[],"rbd":[],"vsphere_volume":[]}]}]}}},{"address":"kubernetes_persistent_volume_claim.app_pvc","mode":"managed","type":"kubernetes_persistent_volume_claim","name":"app_pvc","provider_name":"registry.terraform.io/hashicorp/kubernetes","change":{"actions":["create"],"before":null,"after":{"metadata":[{"annotations":null,"generate_name":null,"labels":null,"name":"app-pvc","namespace":"default"}],"spec":[{"access_modes":["ReadWriteMany"],"resources":[{"limits":null,"requests":{"storage":"0.25"}}],"selector":[],"storage_class_name":"standard","volume_name":"app-pv"}],"timeouts":null,"wait_until_bound":true},"after_unknown":{"id":true,"metadata":[{"generation":true,"resource_version":true,"uid":true}],"spec":[{"access_modes":[false],"resources":[{"requests":{}}],"selector":[]}]},"before_sensitive":false,"after_sensitive":{"metadata":[{}],"spec":[{"access_modes":[false],"resources":[{"requests":{}}],"selector":[]}]}}},{"address":"kubernetes_secret.app_secret[\"admin\"]","mode":"managed","type":"kubernetes_secret","name":"app_secret","index":"admin","provider_name":"registry.terraform.io/hashicorp/kubernetes","change":{"actions":["create"],"before":null,"after":{"binary_data":null,"immutable":null,"metadata":[{"annotations":null,"generate_name":null,"labels":null,"name":"app-pass-admin","namespace":"default"}],"type":"Opaque"},"after_unknown":{"data":true,"id":true,"metadata":[{"generation":true,"resource_version":true,"uid":true}]},"before_sensitive":false,"after_sensitive":{"binary_data":true,"data":true,"metadata":[{}]}}},{"address":"kubernetes_secret.app_secret[\"user1\"]","mode":"managed","type":"kubernetes_secret","name":"app_secret","index":"user1","provider_name":"registry.terraform.io/hashicorp/kubernetes","change":{"actions":["create"],"before":null,"after":{"binary_data":null,"immutable":null,"metadata":[{"annotations":null,"generate_name":null,"labels":null,"name":"app-pass-user1","namespace":"default"}],"type":"Opaque"},"after_unknown":{"data":true,"id":true,"metadata":[{"generation":true,"resource_version":true,"uid":true}]},"before_sensitive":false,"after_sensitive":{"binary_data":true,"data":true,"metadata":[{}]}}},{"address":"kubernetes_secret.db","mode":"managed","type":"kubernetes_secret","name":"db","provider_name":"registry.terraform.io/hashicorp/kubernetes","change":{"actions":["create"],"before":null,"after":{"binary_data":null,"immutable":null,"metadata":[{"annotations":null,"generate_name":null,"labels":null,"name":"db","namespace":"default"}],"type":"Opaque"},"after_unknown":{"data":true,"id":true,"metadata":[{"generation":true,"resource_version":true,"uid":true}]},"before_sensitive":false,"after_sensitive":{"binary_data":true,"data":true,"metadata":[{}]}}},{"address":"kubernetes_secret.grafana","mode":"managed","type":"kubernetes_secret","name":"grafana","provider_name":"registry.terraform.io/hashicorp/kubernetes","change":{"actions":["create"],"before":null,"after":{"binary_data":null,"immutable":null,"metadata":[{"annotations":null,"generate_name":null,"labels":null,"name":"grafana","namespace":"default"}],"type":"Opaque"},"after_unknown":{"data":true,"id":true,"metadata":[{"generation":true,"resource_version":true,"uid":true}]},"before_sensitive":false,"after_sensitive":{"binary_data":true,"data":true,"metadata":[{}]}}},{"address":"kubernetes_service.app_frontend","mode":"managed","type":"kubernetes_service","name":"app_frontend","provider_name":"registry.terraform.io/hashicorp/kubernetes","change":{"actions":["create"],"before":null,"after":{"metadata":[{"annotations":null,"generate_name":null,"labels":null,"name":"app-frontend","namespace":"default"}],"spec":[{"allocate_load_balancer_node_ports":true,"external_ips":null,"external_name":null,"load_balancer_class":null,"load_balancer_ip":null,"load_balancer_source_ranges":null,"port":[{"app_protocol":null,"name":null,"port":3001,"protocol":"TCP","target_port":"3001"}],"publish_not_ready_addresses":false,"selector":{"app":"myworkout"},"session_affinity":"None","type":"NodePort"}],"timeouts":null,"wait_for_load_balancer":true},"after_unknown":{"id":true,"metadata":[{"generation":true,"resource_version":true,"uid":true}],"spec":[{"cluster_ip":true,"cluster_ips":true,"external_traffic_policy":true,"health_check_node_port":true,"internal_traffic_policy":true,"ip_families":true,"ip_family_policy":true,"port":[{"node_port":true}],"selector":{},"session_affinity_config":true}],"status":true},"before_sensitive":false,"after_sensitive":{"metadata":[{}],"spec":[{"cluster_ips":[],"ip_families":[],"port":[{}],"selector":{},"session_affinity_config":[]}],"status":[]}}},{"address":"module.db.google_sql_database.default[0]","module_address":"module.db","mode":"managed","type":"google_sql_database","name":"default","index":0,"provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"charset":"","name":"default","project":"zkhan-1","timeouts":null},"after_unknown":{"collation":true,"id":true,"instance":true,"self_link":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"module.db.google_sql_database_instance.default","module_address":"module.db","mode":"managed","type":"google_sql_database_instance","name":"default","provider_name":"registry.terraform.io/hashicorp/google-beta","change":{"actions":["create"],"before":null,"after":{"clone":[],"database_version":"POSTGRES_14","deletion_protection":false,"project":"zkhan-1","region":"us-east1","restore_backup_context":[],"root_password":null,"settings":[{"activation_policy":"ALWAYS","active_directory_config":[],"availability_type":"ZONAL","backup_configuration":[{"binary_log_enabled":false,"enabled":false,"location":null,"point_in_time_recovery_enabled":false}],"collation":null,"database_flags":[],"disk_autoresize":false,"disk_autoresize_limit":0,"disk_size":10,"disk_type":"PD_HDD","insights_config":[],"ip_configuration":[{"allocated_ip_range":null,"authorized_networks":[],"ipv4_enabled":false,"require_ssl":false}],"location_preference":[{"follow_gae_application":null,"secondary_zone":null,"zone":"us-east1-d"}],"maintenance_window":[{"day":1,"hour":23,"update_track":"canary"}],"pricing_plan":"PER_USE","sql_server_audit_config":[],"tier":"db-g1-small"}],"timeouts":{"create":"15m","delete":"5m","update":"5m"}},"after_unknown":{"clone":[],"connection_name":true,"encryption_key_name":true,"first_ip_address":true,"id":true,"ip_address":true,"master_instance_name":true,"name":true,"private_ip_address":true,"public_ip_address":true,"replica_configuration":true,"restore_backup_context":[],"self_link":true,"server_ca_cert":true,"service_account_email_address":true,"settings":[{"active_directory_config":[],"backup_configuration":[{"backup_retention_settings":true,"start_time":true,"transaction_log_retention_days":true}],"database_flags":[],"insights_config":[],"ip_configuration":[{"authorized_networks":[],"private_network":true}],"location_preference":[{}],"maintenance_window":[{}],"sql_server_audit_config":[],"user_labels":true,"version":true}],"timeouts":{}},"before_sensitive":false,"after_sensitive":{"clone":[],"ip_address":[],"replica_configuration":[],"restore_backup_context":[],"root_password":true,"server_ca_cert":[],"settings":[{"active_directory_config":[],"backup_configuration":[{"backup_retention_settings":[]}],"database_flags":[],"insights_config":[],"ip_configuration":[{"authorized_networks":[]}],"location_preference":[{}],"maintenance_window":[{}],"sql_server_audit_config":[],"user_labels":{}}],"timeouts":{}}}},{"address":"module.db.google_sql_user.default[0]","module_address":"module.db","mode":"managed","type":"google_sql_user","name":"default","index":0,"provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"deletion_policy":null,"name":"fitbod-adm","project":"zkhan-1","sql_server_user_details":[],"timeouts":null,"type":null},"after_unknown":{"host":true,"id":true,"instance":true,"password":true,"sql_server_user_details":[]},"before_sensitive":false,"after_sensitive":{"password":true,"sql_server_user_details":[]}}},{"address":"module.db.null_resource.module_depends_on","module_address":"module.db","mode":"managed","type":"null_resource","name":"module_depends_on","provider_name":"registry.terraform.io/hashicorp/null","change":{"actions":["create"],"before":null,"after":{"triggers":{"value":"1"}},"after_unknown":{"id":true,"triggers":{}},"before_sensitive":false,"after_sensitive":{"triggers":{}}}},{"address":"module.db.random_id.suffix[0]","module_address":"module.db","mode":"managed","type":"random_id","name":"suffix","index":0,"provider_name":"registry.terraform.io/hashicorp/random","change":{"actions":["create"],"before":null,"after":{"byte_length":4,"keepers":null,"prefix":null},"after_unknown":{"b64_std":true,"b64_url":true,"dec":true,"hex":true,"id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"module.db.random_password.user-password","module_address":"module.db","mode":"managed","type":"random_password","name":"user-password","provider_name":"registry.terraform.io/hashicorp/random","change":{"actions":["create"],"before":null,"after":{"length":32,"lower":true,"min_lower":0,"min_numeric":0,"min_special":0,"min_upper":0,"number":true,"numeric":true,"override_special":null,"special":false,"upper":true},"after_unknown":{"bcrypt_hash":true,"id":true,"keepers":true,"result":true},"before_sensitive":false,"after_sensitive":{"bcrypt_hash":true,"keepers":{},"result":true}}},{"address":"module.gcp_network.module.subnets.google_compute_subnetwork.subnetwork[\"us-east1/dev-fitbod-subnet\"]","module_address":"module.gcp_network.module.subnets","mode":"managed","type":"google_compute_subnetwork","name":"subnetwork","index":"us-east1/dev-fitbod-subnet","provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"description":null,"ip_cidr_range":"10.10.0.0/16","ipv6_access_type":null,"log_config":[],"name":"dev-fitbod-subnet","network":"dev-fitbod-net","private_ip_google_access":false,"project":"zkhan-1","region":"us-east1","role":null,"secondary_ip_range":[{"ip_cidr_range":"10.20.0.0/16","range_name":"ip-range-pods"},{"ip_cidr_range":"10.30.0.0/16","range_name":"ip-range-services"}],"timeouts":null},"after_unknown":{"creation_timestamp":true,"external_ipv6_prefix":true,"fingerprint":true,"gateway_address":true,"id":true,"ipv6_cidr_range":true,"log_config":[],"private_ipv6_google_access":true,"purpose":true,"secondary_ip_range":[{},{}],"self_link":true,"stack_type":true},"before_sensitive":false,"after_sensitive":{"log_config":[],"secondary_ip_range":[{},{}]}}},{"address":"module.gcp_network.module.vpc.google_compute_network.network","module_address":"module.gcp_network.module.vpc","mode":"managed","type":"google_compute_network","name":"network","provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"auto_create_subnetworks":false,"delete_default_routes_on_create":false,"description":"","enable_ula_internal_ipv6":null,"mtu":0,"name":"dev-fitbod-net","project":"zkhan-1","routing_mode":"GLOBAL","timeouts":null},"after_unknown":{"gateway_ipv4":true,"id":true,"internal_ipv6_range":true,"self_link":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"module.gke.google_compute_firewall.master_webhooks[0]","module_address":"module.gke","mode":"managed","type":"google_compute_firewall","name":"master_webhooks","index":0,"provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"allow":[{"ports":["8443","9443","15017"],"protocol":"tcp"}],"deny":[],"description":"Managed by terraform gke module: Allow master to hit pods for admission controllers/webhooks","direction":"INGRESS","disabled":null,"log_config":[],"name":"gke-dev-fitbod-gke-webhooks","network":"dev-fitbod-net","priority":1000,"project":"zkhan-1","source_ranges":["10.0.0.0/28"],"source_service_accounts":null,"source_tags":null,"target_service_accounts":null,"target_tags":["gke-dev-fitbod-gke"],"timeouts":null},"after_unknown":{"allow":[{"ports":[false,false,false]}],"creation_timestamp":true,"deny":[],"destination_ranges":true,"enable_logging":true,"id":true,"log_config":[],"self_link":true,"source_ranges":[false],"target_tags":[false]},"before_sensitive":false,"after_sensitive":{"allow":[{"ports":[false,false,false]}],"deny":[],"destination_ranges":[],"log_config":[],"source_ranges":[false],"target_tags":[false]}}},{"address":"module.gke.google_container_cluster.primary","module_address":"module.gke","mode":"managed","type":"google_container_cluster","name":"primary","provider_name":"registry.terraform.io/hashicorp/google-beta","change":{"actions":["create"],"before":null,"after":{"addons_config":[{"config_connector_config":[{"enabled":false}],"dns_cache_config":[{"enabled":false}],"gce_persistent_disk_csi_driver_config":[{"enabled":true}],"gcp_filestore_csi_driver_config":[{"enabled":false}],"horizontal_pod_autoscaling":[{"disabled":false}],"http_load_balancing":[{"disabled":true}],"istio_config":[{"auth":"AUTH_MUTUAL_TLS","disabled":true}],"kalm_config":[{"enabled":false}],"network_policy_config":[{"disabled":true}]}],"cluster_autoscaling":[{"auto_provisioning_defaults":[{"image_type":"COS_CONTAINERD","min_cpu_platform":"","oauth_scopes":["https://www.googleapis.com/auth/cloud-platform"]}],"autoscaling_profile":"BALANCED","enabled":true,"resource_limits":[{"maximum":4,"minimum":2,"resource_type":"cpu"},{"maximum":8,"minimum":2,"resource_type":"memory"}]}],"database_encryption":[{"key_name":"","state":"DECRYPTED"}],"datapath_provider":"ADVANCED_DATAPATH","default_max_pods_per_node":110,"default_snat_status":[{"disabled":false}],"description":"","dns_config":[],"enable_autopilot":null,"enable_binary_authorization":false,"enable_intranode_visibility":false,"enable_kubernetes_alpha":false,"enable_l4_ilb_subsetting":false,"enable_legacy_abac":false,"enable_shielded_nodes":true,"enable_tpu":false,"initial_node_count":null,"ip_allocation_policy":[{"cluster_secondary_range_name":"ip-range-pods","services_secondary_range_name":"ip-range-services"}],"location":"us-east1-d","logging_service":"logging.googleapis.com/kubernetes","maintenance_policy":[{"daily_maintenance_window":[{"start_time":"05:00"}],"maintenance_exclusion":[],"recurring_window":[]}],"master_auth":[{"client_certificate_config":[{"issue_client_certificate":false}]}],"master_authorized_networks_config":[],"min_master_version":"1.24.1-gke.1400","monitoring_service":"monitoring.googleapis.com/kubernetes","name":"dev-fitbod-gke","network":"projects/zkhan-1/global/networks/dev-fitbod-net","network_policy":[{"enabled":false,"provider":null}],"networking_mode":"VPC_NATIVE","node_pool":[{"autoscaling":[],"initial_node_count":0,"name":"default-pool","node_config":[{"boot_disk_kms_key":"","ephemeral_storage_config":[],"gcfs_config":[],"gvnic":[],"image_type":"COS_CONTAINERD","kubelet_config":[],"linux_node_config":[],"machine_type":"e2-highcpu-4","node_group":null,"preemptible":false,"sandbox_config":[],"shielded_instance_config":[{"enable_integrity_monitoring":true,"enable_secure_boot":false}],"spot":false,"tags":["gke-dev-fitbod-gke","gke-dev-fitbod-gke-default-pool","dev-fitbod-pool"],"workload_metadata_config":[{"mode":"GKE_METADATA"}]}],"placement_policy":[]}],"notification_config":[{"pubsub":[{"enabled":false,"topic":""}]}],"pod_security_policy_config":[],"private_cluster_config":[],"project":"zkhan-1","remove_default_node_pool":true,"resource_labels":null,"resource_usage_export_config":[],"subnetwork":"projects/zkhan-1/regions/us-east1/subnetworks/dev-fitbod-subnet","timeouts":{"create":"45m","delete":"45m","read":null,"update":"45m"},"vertical_pod_autoscaling":[{"enabled":false}],"workload_identity_config":[{"workload_pool":"zkhan-1.svc.id.goog"}]},"after_unknown":{"addons_config":[{"cloudrun_config":true,"config_connector_config":[{}],"dns_cache_config":[{}],"gce_persistent_disk_csi_driver_config":[{}],"gcp_filestore_csi_driver_config":[{}],"gke_backup_agent_config":true,"horizontal_pod_autoscaling":[{}],"http_load_balancing":[{}],"istio_config":[{}],"kalm_config":[{}],"network_policy_config":[{}]}],"authenticator_groups_config":true,"cluster_autoscaling":[{"auto_provisioning_defaults":[{"oauth_scopes":[false],"service_account":true}],"resource_limits":[{},{}]}],"cluster_ipv4_cidr":true,"cluster_telemetry":true,"confidential_nodes":true,"database_encryption":[{}],"default_snat_status":[{}],"dns_config":[],"endpoint":true,"id":true,"identity_service_config":true,"ip_allocation_policy":[{"cluster_ipv4_cidr_block":true,"services_ipv4_cidr_block":true}],"label_fingerprint":true,"logging_config":true,"maintenance_policy":[{"daily_maintenance_window":[{"duration":true}],"maintenance_exclusion":[],"recurring_window":[]}],"master_auth":[{"client_certificate":true,"client_certificate_config":[{}],"client_key":true,"cluster_ca_certificate":true}],"master_authorized_networks_config":[],"master_version":true,"monitoring_config":true,"network_policy":[{}],"node_config":true,"node_locations":true,"node_pool":[{"autoscaling":[],"instance_group_urls":true,"managed_instance_group_urls":true,"management":true,"max_pods_per_node":true,"name_prefix":true,"network_config":true,"node_config":[{"disk_size_gb":true,"disk_type":true,"ephemeral_storage_config":[],"gcfs_config":[],"guest_accelerator":true,"gvnic":[],"kubelet_config":[],"labels":true,"linux_node_config":[],"local_ssd_count":true,"metadata":true,"min_cpu_platform":true,"oauth_scopes":true,"sandbox_config":[],"service_account":true,"shielded_instance_config":[{}],"tags":[false,false,false],"taint":true,"workload_metadata_config":[{}]}],"node_count":true,"node_locations":true,"placement_policy":[],"upgrade_settings":true,"version":true}],"node_version":true,"notification_config":[{"pubsub":[{}]}],"operation":true,"pod_security_policy_config":[],"private_cluster_config":[],"private_ipv6_google_access":true,"release_channel":true,"resource_usage_export_config":[],"self_link":true,"services_ipv4_cidr":true,"timeouts":{},"tpu_config":true,"tpu_ipv4_cidr_block":true,"vertical_pod_autoscaling":[{}],"workload_identity_config":[{}]},"before_sensitive":false,"after_sensitive":{"addons_config":[{"cloudrun_config":[],"config_connector_config":[{}],"dns_cache_config":[{}],"gce_persistent_disk_csi_driver_config":[{}],"gcp_filestore_csi_driver_config":[{}],"gke_backup_agent_config":[],"horizontal_pod_autoscaling":[{}],"http_load_balancing":[{}],"istio_config":[{}],"kalm_config":[{}],"network_policy_config":[{}]}],"authenticator_groups_config":[],"cluster_autoscaling":[{"auto_provisioning_defaults":[{"oauth_scopes":[false]}],"resource_limits":[{},{}]}],"cluster_telemetry":[],"confidential_nodes":[],"database_encryption":[{}],"default_snat_status":[{}],"dns_config":[],"identity_service_config":[],"ip_allocation_policy":[{}],"logging_config":[],"maintenance_policy":[{"daily_maintenance_window":[{}],"maintenance_exclusion":[],"recurring_window":[]}],"master_auth":[{"client_certificate_config":[{}],"client_key":true}],"master_authorized_networks_config":[],"monitoring_config":[],"network_policy":[{}],"node_config":[],"node_locations":[],"node_pool":[{"autoscaling":[],"instance_group_urls":[],"managed_instance_group_urls":[],"management":[],"network_config":[],"node_config":[{"ephemeral_storage_config":[],"gcfs_config":[],"guest_accelerator":[],"gvnic":[],"kubelet_config":[],"labels":{},"linux_node_config":[],"metadata":{},"oauth_scopes":[],"sandbox_config":[],"shielded_instance_config":[{}],"tags":[false,false,false],"taint":[],"workload_metadata_config":[{}]}],"node_locations":[],"placement_policy":[],"upgrade_settings":[]}],"notification_config":[{"pubsub":[{}]}],"pod_security_policy_config":[],"private_cluster_config":[],"release_channel":[],"resource_usage_export_config":[],"timeouts":{},"tpu_config":[],"vertical_pod_autoscaling":[{}],"workload_identity_config":[{}]}}},{"address":"module.gke.google_container_node_pool.pools[\"dev-fitbod-pool\"]","module_address":"module.gke","mode":"managed","type":"google_container_node_pool","name":"pools","index":"dev-fitbod-pool","provider_name":"registry.terraform.io/hashicorp/google-beta","change":{"actions":["create"],"before":null,"after":{"autoscaling":[{"max_node_count":8,"min_node_count":1}],"cluster":"dev-fitbod-gke","initial_node_count":1,"location":"us-east1-d","management":[{"auto_repair":true,"auto_upgrade":true}],"name":"dev-fitbod-pool","node_config":[{"boot_disk_kms_key":"","disk_size_gb":50,"disk_type":"pd-ssd","ephemeral_storage_config":[],"gcfs_config":[],"guest_accelerator":[],"gvnic":[],"image_type":"COS_CONTAINERD","kubelet_config":[],"labels":{"cluster_name":"dev-fitbod-gke","dev-fitbod-pool":"true","node_pool":"dev-fitbod-pool"},"linux_node_config":[],"local_ssd_count":0,"machine_type":"e2-highcpu-4","metadata":{"cluster_name":"dev-fitbod-gke","disable-legacy-endpoints":"true","node_pool":"dev-fitbod-pool"},"node_group":null,"oauth_scopes":["https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/compute","https://www.googleapis.com/auth/logging.write"],"preemptible":true,"sandbox_config":[],"shielded_instance_config":[{"enable_integrity_monitoring":true,"enable_secure_boot":false}],"spot":false,"tags":["gke-dev-fitbod-gke","gke-dev-fitbod-gke-dev-fitbod-pool","dev-fitbod-pool"],"taint":[{"effect":"PREFER_NO_SCHEDULE","key":"dev-fitbod-pool","value":"true"}],"workload_metadata_config":[{"mode":"GKE_METADATA"}]}],"node_locations":["us-east1-d"],"placement_policy":[],"project":"zkhan-1","timeouts":{"create":"45m","delete":"45m","update":"45m"},"upgrade_settings":[{"max_surge":1,"max_unavailable":0}]},"after_unknown":{"autoscaling":[{}],"id":true,"instance_group_urls":true,"managed_instance_group_urls":true,"management":[{}],"max_pods_per_node":true,"name_prefix":true,"network_config":true,"node_config":[{"ephemeral_storage_config":[],"gcfs_config":[],"guest_accelerator":[],"gvnic":[],"kubelet_config":[],"labels":{},"linux_node_config":[],"metadata":{},"min_cpu_platform":true,"oauth_scopes":[false,false,false],"sandbox_config":[],"service_account":true,"shielded_instance_config":[{}],"tags":[false,false,false],"taint":[{}],"workload_metadata_config":[{}]}],"node_count":true,"node_locations":[false],"operation":true,"placement_policy":[],"timeouts":{},"upgrade_settings":[{}],"version":true},"before_sensitive":false,"after_sensitive":{"autoscaling":[{}],"instance_group_urls":[],"managed_instance_group_urls":[],"management":[{}],"network_config":[],"node_config":[{"ephemeral_storage_config":[],"gcfs_config":[],"guest_accelerator":[],"gvnic":[],"kubelet_config":[],"labels":{},"linux_node_config":[],"metadata":{},"oauth_scopes":[false,false,false],"sandbox_config":[],"shielded_instance_config":[{}],"tags":[false,false,false],"taint":[{}],"workload_metadata_config":[{}]}],"node_locations":[false],"placement_policy":[],"timeouts":{},"upgrade_settings":[{}]}}},{"address":"module.gke.google_project_iam_member.cluster_service_account-log_writer[0]","module_address":"module.gke","mode":"managed","type":"google_project_iam_member","name":"cluster_service_account-log_writer","index":0,"provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"condition":[],"project":"zkhan-1","role":"roles/logging.logWriter"},"after_unknown":{"condition":[],"etag":true,"id":true,"member":true},"before_sensitive":false,"after_sensitive":{"condition":[]}}},{"address":"module.gke.google_project_iam_member.cluster_service_account-metric_writer[0]","module_address":"module.gke","mode":"managed","type":"google_project_iam_member","name":"cluster_service_account-metric_writer","index":0,"provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"condition":[],"project":"zkhan-1","role":"roles/monitoring.metricWriter"},"after_unknown":{"condition":[],"etag":true,"id":true,"member":true},"before_sensitive":false,"after_sensitive":{"condition":[]}}},{"address":"module.gke.google_project_iam_member.cluster_service_account-monitoring_viewer[0]","module_address":"module.gke","mode":"managed","type":"google_project_iam_member","name":"cluster_service_account-monitoring_viewer","index":0,"provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"condition":[],"project":"zkhan-1","role":"roles/monitoring.viewer"},"after_unknown":{"condition":[],"etag":true,"id":true,"member":true},"before_sensitive":false,"after_sensitive":{"condition":[]}}},{"address":"module.gke.google_project_iam_member.cluster_service_account-resourceMetadata-writer[0]","module_address":"module.gke","mode":"managed","type":"google_project_iam_member","name":"cluster_service_account-resourceMetadata-writer","index":0,"provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"condition":[],"project":"zkhan-1","role":"roles/stackdriver.resourceMetadata.writer"},"after_unknown":{"condition":[],"etag":true,"id":true,"member":true},"before_sensitive":false,"after_sensitive":{"condition":[]}}},{"address":"module.gke.google_service_account.cluster_service_account[0]","module_address":"module.gke","mode":"managed","type":"google_service_account","name":"cluster_service_account","index":0,"provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["create"],"before":null,"after":{"description":null,"disabled":false,"display_name":"Terraform-managed service account for cluster dev-fitbod-gke","project":"zkhan-1","timeouts":null},"after_unknown":{"account_id":true,"email":true,"id":true,"name":true,"unique_id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"module.gke.random_shuffle.available_zones","module_address":"module.gke","mode":"managed","type":"random_shuffle","name":"available_zones","provider_name":"registry.terraform.io/hashicorp/random","change":{"actions":["create"],"before":null,"after":{"input":["us-east1-b","us-east1-c","us-east1-d"],"keepers":null,"result_count":3,"seed":null},"after_unknown":{"id":true,"input":[false,false,false],"result":true},"before_sensitive":false,"after_sensitive":{"input":[false,false,false],"result":[]}}},{"address":"module.gke.random_string.cluster_service_account_suffix","module_address":"module.gke","mode":"managed","type":"random_string","name":"cluster_service_account_suffix","provider_name":"registry.terraform.io/hashicorp/random","change":{"actions":["create"],"before":null,"after":{"keepers":null,"length":4,"lower":true,"min_lower":0,"min_numeric":0,"min_special":0,"min_upper":0,"number":true,"numeric":true,"override_special":null,"special":false,"upper":false},"after_unknown":{"id":true,"result":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"module.gke_auth.data.google_client_config.provider","module_address":"module.gke_auth","mode":"data","type":"google_client_config","name":"provider","provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["read"],"before":null,"after":{},"after_unknown":{"access_token":true,"id":true,"project":true,"region":true,"zone":true},"before_sensitive":false,"after_sensitive":{"access_token":true}},"action_reason":"read_because_dependency_pending"},{"address":"module.gke_auth.data.google_container_cluster.gke_cluster","module_address":"module.gke_auth","mode":"data","type":"google_container_cluster","name":"gke_cluster","provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["read"],"before":null,"after":{"location":"us-east1-d","name":"dev-fitbod-gke","project":"zkhan-1"},"after_unknown":{"addons_config":true,"authenticator_groups_config":true,"cluster_autoscaling":true,"cluster_ipv4_cidr":true,"confidential_nodes":true,"database_encryption":true,"datapath_provider":true,"default_max_pods_per_node":true,"default_snat_status":true,"description":true,"dns_config":true,"enable_autopilot":true,"enable_binary_authorization":true,"enable_intranode_visibility":true,"enable_kubernetes_alpha":true,"enable_legacy_abac":true,"enable_shielded_nodes":true,"enable_tpu":true,"endpoint":true,"id":true,"initial_node_count":true,"ip_allocation_policy":true,"label_fingerprint":true,"logging_config":true,"logging_service":true,"maintenance_policy":true,"master_auth":true,"master_authorized_networks_config":true,"master_version":true,"min_master_version":true,"monitoring_config":true,"monitoring_service":true,"network":true,"network_policy":true,"networking_mode":true,"node_config":true,"node_locations":true,"node_pool":true,"node_version":true,"notification_config":true,"operation":true,"private_cluster_config":true,"private_ipv6_google_access":true,"release_channel":true,"remove_default_node_pool":true,"resource_labels":true,"resource_usage_export_config":true,"self_link":true,"services_ipv4_cidr":true,"subnetwork":true,"tpu_ipv4_cidr_block":true,"vertical_pod_autoscaling":true,"workload_identity_config":true},"before_sensitive":false,"after_sensitive":{"addons_config":[],"authenticator_groups_config":[],"cluster_autoscaling":[],"confidential_nodes":[],"database_encryption":[],"default_snat_status":[],"dns_config":[],"ip_allocation_policy":[],"logging_config":[],"maintenance_policy":[],"master_auth":[],"master_authorized_networks_config":[],"monitoring_config":[],"network_policy":[],"node_config":[],"node_locations":[],"node_pool":[],"notification_config":[],"private_cluster_config":[],"release_channel":[],"resource_labels":{},"resource_usage_export_config":[],"vertical_pod_autoscaling":[],"workload_identity_config":[]}},"action_reason":"read_because_dependency_pending"},{"address":"module.private_service_access.data.google_compute_network.main","module_address":"module.private_service_access","mode":"data","type":"google_compute_network","name":"main","provider_name":"registry.terraform.io/hashicorp/google","change":{"actions":["read"],"before":null,"after":{"name":"dev-fitbod-net","project":"zkhan-1"},"after_unknown":{"description":true,"gateway_ipv4":true,"id":true,"self_link":true,"subnetworks_self_links":true},"before_sensitive":false,"after_sensitive":{"subnetworks_self_links":[]}},"action_reason":"read_because_dependency_pending"},{"address":"module.private_service_access.google_compute_global_address.google-managed-services-range","module_address":"module.private_service_access","mode":"managed","type":"google_compute_global_address","name":"google-managed-services-range","provider_name":"registry.terraform.io/hashicorp/google-beta","change":{"actions":["create"],"before":null,"after":{"address_type":"INTERNAL","description":"","ip_version":"","labels":null,"name":"google-managed-services-dev-fitbod-net","prefix_length":16,"project":"zkhan-1","purpose":"VPC_PEERING","timeouts":null},"after_unknown":{"address":true,"creation_timestamp":true,"id":true,"label_fingerprint":true,"network":true,"self_link":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"module.private_service_access.google_service_networking_connection.private_service_access","module_address":"module.private_service_access","mode":"managed","type":"google_service_networking_connection","name":"private_service_access","provider_name":"registry.terraform.io/hashicorp/google-beta","change":{"actions":["create"],"before":null,"after":{"reserved_peering_ranges":["google-managed-services-dev-fitbod-net"],"service":"servicenetworking.googleapis.com","timeouts":null},"after_unknown":{"id":true,"network":true,"peering":true,"reserved_peering_ranges":[false]},"before_sensitive":false,"after_sensitive":{"reserved_peering_ranges":[false]}}},{"address":"module.private_service_access.null_resource.dependency_setter","module_address":"module.private_service_access","mode":"managed","type":"null_resource","name":"dependency_setter","provider_name":"registry.terraform.io/hashicorp/null","change":{"actions":["create"],"before":null,"after":{"triggers":null},"after_unknown":{"id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"null_resource.kubectl","mode":"managed","type":"null_resource","name":"kubectl","provider_name":"registry.terraform.io/hashicorp/null","change":{"actions":["create"],"before":null,"after":{"triggers":null},"after_unknown":{"id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"random_password.app_pass[\"admin\"]","mode":"managed","type":"random_password","name":"app_pass","index":"admin","provider_name":"registry.terraform.io/hashicorp/random","change":{"actions":["create"],"before":null,"after":{"keepers":null,"length":16,"lower":true,"min_lower":0,"min_numeric":0,"min_special":0,"min_upper":0,"number":true,"numeric":true,"override_special":"_!%","special":true,"upper":true},"after_unknown":{"bcrypt_hash":true,"id":true,"result":true},"before_sensitive":false,"after_sensitive":{"bcrypt_hash":true,"result":true}}},{"address":"random_password.app_pass[\"user1\"]","mode":"managed","type":"random_password","name":"app_pass","index":"user1","provider_name":"registry.terraform.io/hashicorp/random","change":{"actions":["create"],"before":null,"after":{"keepers":null,"length":16,"lower":true,"min_lower":0,"min_numeric":0,"min_special":0,"min_upper":0,"number":true,"numeric":true,"override_special":"_!%","special":true,"upper":true},"after_unknown":{"bcrypt_hash":true,"id":true,"result":true},"before_sensitive":false,"after_sensitive":{"bcrypt_hash":true,"result":true}}},{"address":"random_password.grafana_pass","mode":"managed","type":"random_password","name":"grafana_pass","provider_name":"registry.terraform.io/hashicorp/random","change":{"actions":["create"],"before":null,"after":{"keepers":null,"length":16,"lower":true,"min_lower":0,"min_numeric":0,"min_special":0,"min_upper":0,"number":true,"numeric":true,"override_special":"!%\u0026?","special":true,"upper":true},"after_unknown":{"bcrypt_hash":true,"id":true,"result":true},"before_sensitive":false,"after_sensitive":{"bcrypt_hash":true,"result":true}}}],"output_changes":{"admin_pass":{"actions":["create"],"before":null,"after_unknown":true,"before_sensitive":true,"after_sensitive":true},"app_url":{"actions":["create"],"before":null,"after_unknown":true,"before_sensitive":false,"after_sensitive":false},"ca_certificate":{"actions":["create"],"before":null,"after_unknown":true,"before_sensitive":true,"after_sensitive":true},"db_host":{"actions":["create"],"before":null,"after_unknown":true,"before_sensitive":false,"after_sensitive":false},"db_pass":{"actions":["create"],"before":null,"after_unknown":true,"before_sensitive":true,"after_sensitive":true},"endpoint":{"actions":["create"],"before":null,"after_unknown":true,"before_sensitive":true,"after_sensitive":true},"gcp_region":{"actions":["create"],"before":null,"after":"us-east1","after_unknown":false,"before_sensitive":false,"after_sensitive":false},"gke_cluster_type":{"actions":["create"],"before":null,"after":"zonal","after_unknown":false,"before_sensitive":false,"after_sensitive":false},"gke_name":{"actions":["create"],"before":null,"after_unknown":true,"before_sensitive":false,"after_sensitive":false},"grafana_pass":{"actions":["create"],"before":null,"after_unknown":true,"before_sensitive":true,"after_sensitive":true},"grafana_url":{"actions":["create"],"before":null,"after_unknown":true,"before_sensitive":false,"after_sensitive":false},"grafana_user":{"actions":["create"],"before":null,"after_unknown":true,"before_sensitive":true,"after_sensitive":true},"horizontal_pod_autoscaling_enabled":{"actions":["create"],"before":null,"after":true,"after_unknown":false,"before_sensitive":false,"after_sensitive":false},"http_load_balancing_enabled":{"actions":["create"],"before":null,"after":false,"after_unknown":false,"before_sensitive":false,"after_sensitive":false},"location":{"actions":["create"],"before":null,"after":"us-east1-d","after_unknown":false,"before_sensitive":false,"after_sensitive":false},"logging_service":{"actions":["create"],"before":null,"after":"logging.googleapis.com/kubernetes","after_unknown":false,"before_sensitive":false,"after_sensitive":false},"master_authorized_networks_config":{"actions":["create"],"before":null,"after":[],"after_unknown":false,"before_sensitive":false,"after_sensitive":false},"master_version":{"actions":["create"],"before":null,"after_unknown":true,"before_sensitive":false,"after_sensitive":false},"min_master_version":{"actions":["create"],"before":null,"after":"1.24.1-gke.1400","after_unknown":false,"before_sensitive":false,"after_sensitive":false},"monitoring_service":{"actions":["create"],"before":null,"after":"monitoring.googleapis.com/kubernetes","after_unknown":false,"before_sensitive":false,"after_sensitive":false},"network_module":{"actions":["create"],"before":null,"after":{"network":{"network":{"auto_create_subnetworks":false,"delete_default_routes_on_create":false,"description":"","enable_ula_internal_ipv6":null,"mtu":0,"name":"dev-fitbod-net","project":"zkhan-1","routing_mode":"GLOBAL","timeouts":null},"network_name":"dev-fitbod-net","project_id":"zkhan-1"},"network_name":"dev-fitbod-net","project_id":"zkhan-1","route_names":[],"subnets":{"us-east1/dev-fitbod-subnet":{"description":null,"ip_cidr_range":"10.10.0.0/16","ipv6_access_type":null,"log_config":[],"name":"dev-fitbod-subnet","network":"dev-fitbod-net","private_ip_google_access":false,"project":"zkhan-1","region":"us-east1","role":null,"secondary_ip_range":[{"ip_cidr_range":"10.20.0.0/16","range_name":"ip-range-pods"},{"ip_cidr_range":"10.30.0.0/16","range_name":"ip-range-services"}],"timeouts":null}},"subnets_flow_logs":[false],"subnets_ids":[null],"subnets_ips":["10.10.0.0/16"],"subnets_names":["dev-fitbod-subnet"],"subnets_private_access":[false],"subnets_regions":["us-east1"],"subnets_secondary_ranges":[[{"ip_cidr_range":"10.20.0.0/16","range_name":"ip-range-pods"},{"ip_cidr_range":"10.30.0.0/16","range_name":"ip-range-services"}]],"subnets_self_links":[null]},"after_unknown":{"network":{"network":{"gateway_ipv4":true,"id":true,"internal_ipv6_range":true,"self_link":true},"network_id":true,"network_self_link":true},"network_id":true,"network_self_link":true,"route_names":[],"subnets":{"us-east1/dev-fitbod-subnet":{"creation_timestamp":true,"external_ipv6_prefix":true,"fingerprint":true,"gateway_address":true,"id":true,"ipv6_cidr_range":true,"log_config":[],"private_ipv6_google_access":true,"purpose":true,"secondary_ip_range":[{},{}],"self_link":true,"stack_type":true}},"subnets_flow_logs":[false],"subnets_ids":[true],"subnets_ips":[false],"subnets_names":[false],"subnets_private_access":[false],"subnets_regions":[false],"subnets_secondary_ranges":[[{},{}]],"subnets_self_links":[true]},"before_sensitive":false,"after_sensitive":false},"network_policy_enabled":{"actions":["create"],"before":null,"after":false,"after_unknown":false,"before_sensitive":false,"after_sensitive":false},"service_account":{"actions":["create"],"before":null,"after_unknown":true,"before_sensitive":false,"after_sensitive":false},"subnets_ips":{"actions":["create"],"before":null,"after":["10.10.0.0/16"],"after_unknown":false,"before_sensitive":false,"after_sensitive":false},"subnets_secondary_ranges":{"actions":["create"],"before":null,"after":[[{"ip_cidr_range":"10.20.0.0/16","range_name":"ip-range-pods"},{"ip_cidr_range":"10.30.0.0/16","range_name":"ip-range-services"}]],"after_unknown":false,"before_sensitive":false,"after_sensitive":false},"user1_pass":{"actions":["create"],"before":null,"after_unknown":true,"before_sensitive":true,"after_sensitive":true},"vpc_network_out":{"actions":["create"],"before":null,"after":"dev-fitbod-net","after_unknown":false,"before_sensitive":false,"after_sensitive":false},"vpc_subnet_out":{"actions":["create"],"before":null,"after":"dev-fitbod-subnet","after_unknown":false,"before_sensitive":false,"after_sensitive":false}},"prior_state":{"format_version":"1.0","terraform_version":"1.3.0","values":{"outputs":{"gcp_region":{"sensitive":false,"value":"us-east1","type":"string"},"gke_cluster_type":{"sensitive":false,"value":"zonal","type":"string"},"horizontal_pod_autoscaling_enabled":{"sensitive":false,"value":true,"type":"bool"},"http_load_balancing_enabled":{"sensitive":false,"value":false,"type":"bool"},"location":{"sensitive":false,"value":"us-east1-d","type":"string"},"logging_service":{"sensitive":false,"value":"logging.googleapis.com/kubernetes","type":"string"},"master_authorized_networks_config":{"sensitive":false,"value":[],"type":["list",["object",{"cidr_blocks":["set",["object",{"cidr_block":"string","display_name":"string"}]]}]]},"min_master_version":{"sensitive":false,"value":"1.24.1-gke.1400","type":"string"},"monitoring_service":{"sensitive":false,"value":"monitoring.googleapis.com/kubernetes","type":"string"},"network_policy_enabled":{"sensitive":false,"value":false,"type":"bool"},"subnets_ips":{"sensitive":false,"value":["10.10.0.0/16"],"type":["tuple",["string"]]},"subnets_secondary_ranges":{"sensitive":false,"value":[[{"ip_cidr_range":"10.20.0.0/16","range_name":"ip-range-pods"},{"ip_cidr_range":"10.30.0.0/16","range_name":"ip-range-services"}]],"type":["tuple",[["list",["object",{"ip_cidr_range":"string","range_name":"string"}]]]]},"vpc_network_out":{"sensitive":false,"value":"dev-fitbod-net","type":"string"},"vpc_subnet_out":{"sensitive":false,"value":"dev-fitbod-subnet","type":"string"}},"root_module":{"resources":[{"address":"data.google_client_config.default","mode":"data","type":"google_client_config","name":"default","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"access_token":"ya29.A0AVA9y1tASsE7dRiG8mTm4Q0sQWeREy7vlA1RkMlVt6UHN_rQsWVLWBYGFvjETZBUzK8pogyoushXLtE2eOfuYf_fW2xWi1a8TLAhyUrFkU8OdlCAXLJJhCvO6FQGPMFuL5TsBYOi4ZMcTVP4EE2tDQC7WRnP0QYUNnWUtBVEFTQVRBU0ZRRTY1ZHI4VmZhbXowYk93YTBLOVNhejZnS25TQQ0165","id":"projects/zkhan-1/regions/us-east1/zones/","project":"zkhan-1","region":"us-east1","zone":""},"sensitive_values":{}},{"address":"data.local_file.masterkey","mode":"data","type":"local_file","name":"masterkey","provider_name":"registry.terraform.io/hashicorp/local","schema_version":0,"values":{"content":"c1e0008dd2a1e7a2a3875ff911e3a076\n","content_base64":"YzFlMDAwOGRkMmExZTdhMmEzODc1ZmY5MTFlM2EwNzYK","filename":"./config/secrets/master.key","id":"56fae5ead5a16c0451dfc133c936ff2d35576e14"},"sensitive_values":{}}],"child_modules":[{"resources":[{"address":"module.gke.data.google_compute_zones.available","mode":"data","type":"google_compute_zones","name":"available","provider_name":"registry.terraform.io/hashicorp/google-beta","schema_version":0,"values":{"id":"projects/zkhan-1/regions/us-east1","names":["us-east1-b","us-east1-c","us-east1-d"],"project":"zkhan-1","region":"us-east1","status":null},"sensitive_values":{"names":[false,false,false]}},{"address":"module.gke.data.google_container_engine_versions.region","mode":"data","type":"google_container_engine_versions","name":"region","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"default_cluster_version":"1.22.8-gke.202","id":"2022-07-14 16:54:19.682935 +0000 UTC","latest_master_version":"1.24.1-gke.1400","latest_node_version":"1.24.1-gke.1400","location":"us-east1-d","project":"zkhan-1","release_channel_default_version":{"RAPID":"1.23.6-gke.1501","REGULAR":"1.22.8-gke.202","STABLE":"1.21.11-gke.1900"},"valid_master_versions":["1.24.1-gke.1400","1.23.7-gke.1400","1.23.6-gke.2200","1.23.6-gke.1700","1.23.6-gke.1501","1.23.6-gke.1500","1.23.5-gke.2400","1.23.5-gke.1503","1.23.5-gke.1501","1.22.10-gke.600","1.22.9-gke.2000","1.22.9-gke.1500","1.22.9-gke.1300","1.22.8-gke.2200","1.22.8-gke.202","1.22.8-gke.201","1.22.8-gke.200","1.21.13-gke.900","1.21.12-gke.2200","1.21.12-gke.1700","1.21.12-gke.1500","1.21.11-gke.1900","1.21.11-gke.1100","1.20.15-gke.9900","1.20.15-gke.8700","1.20.15-gke.8200","1.20.15-gke.8000","1.20.15-gke.6000","1.19.16-gke.15700","1.19.16-gke.14500","1.19.16-gke.14000","1.19.16-gke.13800","1.19.16-gke.11800","1.19.16-gke.11000","1.19.16-gke.9400"],"valid_node_versions":["1.24.1-gke.1400","1.23.7-gke.1400","1.23.6-gke.2200","1.23.6-gke.1700","1.23.6-gke.1501","1.23.6-gke.1500","1.23.5-gke.2400","1.23.5-gke.1503","1.23.5-gke.1501","1.22.10-gke.600","1.22.9-gke.2000","1.22.9-gke.1500","1.22.9-gke.1300","1.22.8-gke.2200","1.22.8-gke.202","1.22.8-gke.201","1.22.8-gke.200","1.22.7-gke.1500","1.22.7-gke.1300","1.22.7-gke.900","1.22.7-gke.300","1.22.6-gke.1000","1.22.6-gke.300","1.22.4-gke.1501","1.22.3-gke.1500","1.21.13-gke.900","1.21.12-gke.2200","1.21.12-gke.1700","1.21.12-gke.1500","1.21.11-gke.1900","1.21.11-gke.1100","1.21.11-gke.900","1.21.10-gke.2000","1.21.10-gke.1500","1.21.10-gke.1300","1.21.10-gke.400","1.21.9-gke.1002","1.21.9-gke.1001","1.21.9-gke.1000","1.21.9-gke.300","1.21.6-gke.1503","1.21.6-gke.1501","1.21.6-gke.1500","1.21.5-gke.1805","1.21.5-gke.1802","1.21.5-gke.1302","1.21.5-gke.1300","1.21.4-gke.2302","1.21.4-gke.2300","1.21.3-gke.2003","1.21.3-gke.2001","1.20.15-gke.9900","1.20.15-gke.8700","1.20.15-gke.8200","1.20.15-gke.8000","1.20.15-gke.6000","1.20.15-gke.5200","1.20.15-gke.5000","1.20.15-gke.4100","1.20.15-gke.3600","1.20.15-gke.3400","1.20.15-gke.2500","1.20.15-gke.1000","1.20.15-gke.300","1.20.12-gke.1500","1.20.11-gke.1801","1.20.11-gke.1300","1.20.10-gke.2100","1.20.10-gke.1600","1.20.10-gke.301","1.20.9-gke.2100","1.20.9-gke.1001","1.20.9-gke.1000","1.20.9-gke.701","1.20.9-gke.700","1.20.8-gke.2101","1.20.8-gke.2100","1.20.8-gke.900","1.20.8-gke.700","1.20.7-gke.2200","1.20.7-gke.1800","1.20.6-gke.1400","1.20.6-gke.1000","1.19.16-gke.15700","1.19.16-gke.14500","1.19.16-gke.14000","1.19.16-gke.13800","1.19.16-gke.11800","1.19.16-gke.11000","1.19.16-gke.10800","1.19.16-gke.9900","1.19.16-gke.9400","1.19.16-gke.9200","1.19.16-gke.8300","1.19.16-gke.6800","1.19.16-gke.6100","1.19.16-gke.3600","1.19.15-gke.1801","1.19.15-gke.1300","1.19.15-gke.500","1.19.14-gke.2300","1.19.14-gke.1900","1.19.14-gke.301","1.19.14-gke.300","1.19.13-gke.1900","1.19.13-gke.1200","1.19.13-gke.701","1.19.13-gke.700","1.19.12-gke.2101","1.19.12-gke.2100","1.19.12-gke.1100","1.19.12-gke.900","1.19.12-gke.700","1.19.11-gke.2101","1.19.11-gke.2100","1.19.11-gke.1701","1.19.11-gke.1700","1.19.10-gke.1701","1.19.10-gke.1700","1.19.10-gke.1601","1.19.10-gke.1600","1.19.10-gke.1001","1.19.10-gke.1000","1.19.9-gke.1900","1.19.9-gke.1400","1.19.9-gke.700","1.19.9-gke.100","1.19.8-gke.2000","1.19.8-gke.1600","1.19.8-gke.1000","1.19.7-gke.2503","1.19.7-gke.1500","1.19.7-gke.1302","1.19.7-gke.800","1.19.6-gke.1700","1.19.6-gke.1100","1.19.6-gke.600","1.18.20-gke.6101","1.18.20-gke.6000","1.18.20-gke.4501","1.18.20-gke.4500","1.18.20-gke.4100","1.18.20-gke.3300","1.18.20-gke.3001","1.18.20-gke.3000","1.18.20-gke.2300","1.18.20-gke.901","1.18.20-gke.900","1.18.20-gke.501","1.18.19-gke.2101","1.18.19-gke.2100","1.18.19-gke.1701","1.18.19-gke.1700","1.18.18-gke.1701","1.18.18-gke.1700","1.18.18-gke.1101","1.18.18-gke.1100","1.18.17-gke.1901","1.18.17-gke.1900","1.18.17-gke.1201","1.18.17-gke.1200","1.18.17-gke.700","1.18.17-gke.100","1.18.16-gke.2100","1.18.16-gke.1201","1.18.16-gke.1200","1.18.16-gke.502","1.18.16-gke.500","1.18.16-gke.302","1.18.16-gke.300","1.18.15-gke.2500","1.18.15-gke.1502","1.18.15-gke.1501","1.18.15-gke.1500","1.18.15-gke.1102","1.18.15-gke.1100","1.18.15-gke.800","1.18.14-gke.1600","1.18.14-gke.1200","1.18.12-gke.1210","1.18.12-gke.1206","1.18.12-gke.1205","1.18.12-gke.1201","1.18.12-gke.1200","1.18.12-gke.300","1.18.10-gke.2701","1.18.10-gke.2101","1.18.10-gke.1500","1.18.10-gke.601","1.18.9-gke.2501","1.18.9-gke.1501","1.18.9-gke.801","1.18.6-gke.4801","1.18.6-gke.3504","1.18.6-gke.3503","1.17.17-gke.9100","1.17.17-gke.8500","1.17.17-gke.8200","1.17.17-gke.7800","1.17.17-gke.7200","1.17.17-gke.6700","1.17.17-gke.6000","1.17.17-gke.5400","1.17.17-gke.4900","1.17.17-gke.4400","1.17.17-gke.3700","1.17.17-gke.3000","1.17.17-gke.2800","1.17.17-gke.2500","1.17.17-gke.1500","1.17.17-gke.1101","1.17.17-gke.1100","1.17.17-gke.600","1.17.16-gke.1600","1.17.16-gke.1300","1.17.15-gke.800","1.17.15-gke.300","1.17.14-gke.1600","1.17.14-gke.1200","1.17.14-gke.400","1.17.13-gke.2600","1.17.13-gke.2001","1.17.13-gke.1401","1.17.13-gke.1400","1.17.13-gke.600","1.17.12-gke.2502","1.17.12-gke.1504","1.17.12-gke.1501","1.17.12-gke.500","1.17.9-gke.6300","1.17.9-gke.1504","1.16.15-gke.14800","1.16.15-gke.12500","1.16.15-gke.11800","1.16.15-gke.10600","1.16.15-gke.7801","1.16.15-gke.7800","1.16.15-gke.7300","1.16.15-gke.6900","1.16.15-gke.6000","1.16.15-gke.5500","1.16.15-gke.4901","1.16.15-gke.4301","1.16.15-gke.4300","1.16.15-gke.3500","1.16.15-gke.2601","1.16.15-gke.1600","1.16.15-gke.500","1.16.13-gke.404","1.16.13-gke.403","1.16.13-gke.401","1.16.13-gke.400","1.16.13-gke.1","1.16.11-gke.5","1.16.10-gke.8","1.16.9-gke.6","1.16.9-gke.2","1.16.8-gke.15","1.16.8-gke.12","1.16.8-gke.9","1.15.12-gke.6002","1.15.12-gke.6001","1.15.12-gke.5000","1.15.12-gke.4002","1.15.12-gke.4000","1.15.12-gke.20","1.15.12-gke.17","1.15.12-gke.16","1.15.12-gke.13","1.15.12-gke.9","1.15.12-gke.6","1.15.12-gke.3","1.15.12-gke.2","1.15.11-gke.17","1.15.11-gke.15","1.15.11-gke.13","1.15.11-gke.12","1.15.11-gke.11","1.15.11-gke.9","1.15.11-gke.5","1.15.11-gke.3","1.15.11-gke.1","1.15.9-gke.26","1.15.9-gke.24","1.15.9-gke.22","1.15.9-gke.12","1.15.9-gke.9","1.15.9-gke.8","1.15.8-gke.3","1.15.8-gke.2","1.15.7-gke.23","1.15.7-gke.2","1.15.4-gke.22","1.14.10-gke.1504","1.14.10-gke.902","1.14.10-gke.50","1.14.10-gke.46","1.14.10-gke.45","1.14.10-gke.42","1.14.10-gke.41","1.14.10-gke.40","1.14.10-gke.37","1.14.10-gke.36","1.14.10-gke.34","1.14.10-gke.32","1.14.10-gke.31","1.14.10-gke.27","1.14.10-gke.24","1.14.10-gke.22","1.14.10-gke.21","1.14.10-gke.17","1.14.10-gke.0","1.14.9-gke.23","1.14.9-gke.2","1.14.9-gke.0","1.14.8-gke.33","1.14.8-gke.21","1.14.8-gke.18","1.14.8-gke.17","1.14.8-gke.14","1.14.8-gke.12","1.14.8-gke.7","1.14.8-gke.2","1.14.7-gke.40","1.14.7-gke.25","1.14.7-gke.23","1.14.7-gke.17","1.14.7-gke.14","1.14.7-gke.10","1.14.6-gke.13","1.14.6-gke.2","1.14.6-gke.1","1.14.3-gke.11","1.14.3-gke.10","1.14.3-gke.9","1.14.2-gke.9","1.14.1-gke.5","1.13.12-gke.30","1.13.12-gke.25","1.13.12-gke.17","1.13.12-gke.16","1.13.12-gke.14","1.13.12-gke.13","1.13.12-gke.10","1.13.12-gke.8","1.13.12-gke.4","1.13.12-gke.2","1.13.11-gke.23","1.13.11-gke.15","1.13.11-gke.14","1.13.11-gke.12","1.13.11-gke.11","1.13.11-gke.9","1.13.11-gke.5","1.13.10-gke.7","1.13.10-gke.0","1.13.9-gke.11","1.13.9-gke.3","1.13.7-gke.24","1.13.7-gke.19","1.13.7-gke.15","1.13.7-gke.8","1.13.7-gke.0","1.13.6-gke.13","1.13.6-gke.6","1.13.6-gke.5","1.13.6-gke.0","1.13.5-gke.10","1.12.10-gke.22","1.12.10-gke.20","1.12.10-gke.19","1.12.10-gke.18","1.12.10-gke.17","1.12.10-gke.15","1.12.10-gke.13","1.12.10-gke.11","1.12.10-gke.5","1.12.9-gke.16","1.12.9-gke.15","1.12.9-gke.13","1.12.9-gke.10","1.12.9-gke.7","1.12.9-gke.3","1.12.8-gke.12","1.12.8-gke.10","1.12.8-gke.7","1.12.8-gke.6","1.12.7-gke.26","1.12.7-gke.25","1.12.7-gke.24","1.12.7-gke.22","1.12.7-gke.21","1.12.7-gke.17","1.12.7-gke.10","1.12.7-gke.7","1.12.6-gke.11","1.12.6-gke.10","1.12.6-gke.7","1.12.5-gke.10","1.12.5-gke.5","1.11.10-gke.6","1.11.10-gke.5"],"version_prefix":null},"sensitive_values":{"release_channel_default_version":{},"valid_master_versions":[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],"valid_node_versions":[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false]}},{"address":"module.gke.data.google_container_engine_versions.zone","mode":"data","type":"google_container_engine_versions","name":"zone","provider_name":"registry.terraform.io/hashicorp/google","schema_version":0,"values":{"default_cluster_version":"1.22.8-gke.202","id":"2022-07-14 16:54:20.004666 +0000 UTC","latest_master_version":"1.24.1-gke.1400","latest_node_version":"1.24.1-gke.1400","location":"us-east1-d","project":"zkhan-1","release_channel_default_version":{"RAPID":"1.23.6-gke.1501","REGULAR":"1.22.8-gke.202","STABLE":"1.21.11-gke.1900"},"valid_master_versions":["1.24.1-gke.1400","1.23.7-gke.1400","1.23.6-gke.2200","1.23.6-gke.1700","1.23.6-gke.1501","1.23.6-gke.1500","1.23.5-gke.2400","1.23.5-gke.1503","1.23.5-gke.1501","1.22.10-gke.600","1.22.9-gke.2000","1.22.9-gke.1500","1.22.9-gke.1300","1.22.8-gke.2200","1.22.8-gke.202","1.22.8-gke.201","1.22.8-gke.200","1.21.13-gke.900","1.21.12-gke.2200","1.21.12-gke.1700","1.21.12-gke.1500","1.21.11-gke.1900","1.21.11-gke.1100","1.20.15-gke.9900","1.20.15-gke.8700","1.20.15-gke.8200","1.20.15-gke.8000","1.20.15-gke.6000","1.19.16-gke.15700","1.19.16-gke.14500","1.19.16-gke.14000","1.19.16-gke.13800","1.19.16-gke.11800","1.19.16-gke.11000","1.19.16-gke.9400"],"valid_node_versions":["1.24.1-gke.1400","1.23.7-gke.1400","1.23.6-gke.2200","1.23.6-gke.1700","1.23.6-gke.1501","1.23.6-gke.1500","1.23.5-gke.2400","1.23.5-gke.1503","1.23.5-gke.1501","1.22.10-gke.600","1.22.9-gke.2000","1.22.9-gke.1500","1.22.9-gke.1300","1.22.8-gke.2200","1.22.8-gke.202","1.22.8-gke.201","1.22.8-gke.200","1.22.7-gke.1500","1.22.7-gke.1300","1.22.7-gke.900","1.22.7-gke.300","1.22.6-gke.1000","1.22.6-gke.300","1.22.4-gke.1501","1.22.3-gke.1500","1.21.13-gke.900","1.21.12-gke.2200","1.21.12-gke.1700","1.21.12-gke.1500","1.21.11-gke.1900","1.21.11-gke.1100","1.21.11-gke.900","1.21.10-gke.2000","1.21.10-gke.1500","1.21.10-gke.1300","1.21.10-gke.400","1.21.9-gke.1002","1.21.9-gke.1001","1.21.9-gke.1000","1.21.9-gke.300","1.21.6-gke.1503","1.21.6-gke.1501","1.21.6-gke.1500","1.21.5-gke.1805","1.21.5-gke.1802","1.21.5-gke.1302","1.21.5-gke.1300","1.21.4-gke.2302","1.21.4-gke.2300","1.21.3-gke.2003","1.21.3-gke.2001","1.20.15-gke.9900","1.20.15-gke.8700","1.20.15-gke.8200","1.20.15-gke.8000","1.20.15-gke.6000","1.20.15-gke.5200","1.20.15-gke.5000","1.20.15-gke.4100","1.20.15-gke.3600","1.20.15-gke.3400","1.20.15-gke.2500","1.20.15-gke.1000","1.20.15-gke.300","1.20.12-gke.1500","1.20.11-gke.1801","1.20.11-gke.1300","1.20.10-gke.2100","1.20.10-gke.1600","1.20.10-gke.301","1.20.9-gke.2100","1.20.9-gke.1001","1.20.9-gke.1000","1.20.9-gke.701","1.20.9-gke.700","1.20.8-gke.2101","1.20.8-gke.2100","1.20.8-gke.900","1.20.8-gke.700","1.20.7-gke.2200","1.20.7-gke.1800","1.20.6-gke.1400","1.20.6-gke.1000","1.19.16-gke.15700","1.19.16-gke.14500","1.19.16-gke.14000","1.19.16-gke.13800","1.19.16-gke.11800","1.19.16-gke.11000","1.19.16-gke.10800","1.19.16-gke.9900","1.19.16-gke.9400","1.19.16-gke.9200","1.19.16-gke.8300","1.19.16-gke.6800","1.19.16-gke.6100","1.19.16-gke.3600","1.19.15-gke.1801","1.19.15-gke.1300","1.19.15-gke.500","1.19.14-gke.2300","1.19.14-gke.1900","1.19.14-gke.301","1.19.14-gke.300","1.19.13-gke.1900","1.19.13-gke.1200","1.19.13-gke.701","1.19.13-gke.700","1.19.12-gke.2101","1.19.12-gke.2100","1.19.12-gke.1100","1.19.12-gke.900","1.19.12-gke.700","1.19.11-gke.2101","1.19.11-gke.2100","1.19.11-gke.1701","1.19.11-gke.1700","1.19.10-gke.1701","1.19.10-gke.1700","1.19.10-gke.1601","1.19.10-gke.1600","1.19.10-gke.1001","1.19.10-gke.1000","1.19.9-gke.1900","1.19.9-gke.1400","1.19.9-gke.700","1.19.9-gke.100","1.19.8-gke.2000","1.19.8-gke.1600","1.19.8-gke.1000","1.19.7-gke.2503","1.19.7-gke.1500","1.19.7-gke.1302","1.19.7-gke.800","1.19.6-gke.1700","1.19.6-gke.1100","1.19.6-gke.600","1.18.20-gke.6101","1.18.20-gke.6000","1.18.20-gke.4501","1.18.20-gke.4500","1.18.20-gke.4100","1.18.20-gke.3300","1.18.20-gke.3001","1.18.20-gke.3000","1.18.20-gke.2300","1.18.20-gke.901","1.18.20-gke.900","1.18.20-gke.501","1.18.19-gke.2101","1.18.19-gke.2100","1.18.19-gke.1701","1.18.19-gke.1700","1.18.18-gke.1701","1.18.18-gke.1700","1.18.18-gke.1101","1.18.18-gke.1100","1.18.17-gke.1901","1.18.17-gke.1900","1.18.17-gke.1201","1.18.17-gke.1200","1.18.17-gke.700","1.18.17-gke.100","1.18.16-gke.2100","1.18.16-gke.1201","1.18.16-gke.1200","1.18.16-gke.502","1.18.16-gke.500","1.18.16-gke.302","1.18.16-gke.300","1.18.15-gke.2500","1.18.15-gke.1502","1.18.15-gke.1501","1.18.15-gke.1500","1.18.15-gke.1102","1.18.15-gke.1100","1.18.15-gke.800","1.18.14-gke.1600","1.18.14-gke.1200","1.18.12-gke.1210","1.18.12-gke.1206","1.18.12-gke.1205","1.18.12-gke.1201","1.18.12-gke.1200","1.18.12-gke.300","1.18.10-gke.2701","1.18.10-gke.2101","1.18.10-gke.1500","1.18.10-gke.601","1.18.9-gke.2501","1.18.9-gke.1501","1.18.9-gke.801","1.18.6-gke.4801","1.18.6-gke.3504","1.18.6-gke.3503","1.17.17-gke.9100","1.17.17-gke.8500","1.17.17-gke.8200","1.17.17-gke.7800","1.17.17-gke.7200","1.17.17-gke.6700","1.17.17-gke.6000","1.17.17-gke.5400","1.17.17-gke.4900","1.17.17-gke.4400","1.17.17-gke.3700","1.17.17-gke.3000","1.17.17-gke.2800","1.17.17-gke.2500","1.17.17-gke.1500","1.17.17-gke.1101","1.17.17-gke.1100","1.17.17-gke.600","1.17.16-gke.1600","1.17.16-gke.1300","1.17.15-gke.800","1.17.15-gke.300","1.17.14-gke.1600","1.17.14-gke.1200","1.17.14-gke.400","1.17.13-gke.2600","1.17.13-gke.2001","1.17.13-gke.1401","1.17.13-gke.1400","1.17.13-gke.600","1.17.12-gke.2502","1.17.12-gke.1504","1.17.12-gke.1501","1.17.12-gke.500","1.17.9-gke.6300","1.17.9-gke.1504","1.16.15-gke.14800","1.16.15-gke.12500","1.16.15-gke.11800","1.16.15-gke.10600","1.16.15-gke.7801","1.16.15-gke.7800","1.16.15-gke.7300","1.16.15-gke.6900","1.16.15-gke.6000","1.16.15-gke.5500","1.16.15-gke.4901","1.16.15-gke.4301","1.16.15-gke.4300","1.16.15-gke.3500","1.16.15-gke.2601","1.16.15-gke.1600","1.16.15-gke.500","1.16.13-gke.404","1.16.13-gke.403","1.16.13-gke.401","1.16.13-gke.400","1.16.13-gke.1","1.16.11-gke.5","1.16.10-gke.8","1.16.9-gke.6","1.16.9-gke.2","1.16.8-gke.15","1.16.8-gke.12","1.16.8-gke.9","1.15.12-gke.6002","1.15.12-gke.6001","1.15.12-gke.5000","1.15.12-gke.4002","1.15.12-gke.4000","1.15.12-gke.20","1.15.12-gke.17","1.15.12-gke.16","1.15.12-gke.13","1.15.12-gke.9","1.15.12-gke.6","1.15.12-gke.3","1.15.12-gke.2","1.15.11-gke.17","1.15.11-gke.15","1.15.11-gke.13","1.15.11-gke.12","1.15.11-gke.11","1.15.11-gke.9","1.15.11-gke.5","1.15.11-gke.3","1.15.11-gke.1","1.15.9-gke.26","1.15.9-gke.24","1.15.9-gke.22","1.15.9-gke.12","1.15.9-gke.9","1.15.9-gke.8","1.15.8-gke.3","1.15.8-gke.2","1.15.7-gke.23","1.15.7-gke.2","1.15.4-gke.22","1.14.10-gke.1504","1.14.10-gke.902","1.14.10-gke.50","1.14.10-gke.46","1.14.10-gke.45","1.14.10-gke.42","1.14.10-gke.41","1.14.10-gke.40","1.14.10-gke.37","1.14.10-gke.36","1.14.10-gke.34","1.14.10-gke.32","1.14.10-gke.31","1.14.10-gke.27","1.14.10-gke.24","1.14.10-gke.22","1.14.10-gke.21","1.14.10-gke.17","1.14.10-gke.0","1.14.9-gke.23","1.14.9-gke.2","1.14.9-gke.0","1.14.8-gke.33","1.14.8-gke.21","1.14.8-gke.18","1.14.8-gke.17","1.14.8-gke.14","1.14.8-gke.12","1.14.8-gke.7","1.14.8-gke.2","1.14.7-gke.40","1.14.7-gke.25","1.14.7-gke.23","1.14.7-gke.17","1.14.7-gke.14","1.14.7-gke.10","1.14.6-gke.13","1.14.6-gke.2","1.14.6-gke.1","1.14.3-gke.11","1.14.3-gke.10","1.14.3-gke.9","1.14.2-gke.9","1.14.1-gke.5","1.13.12-gke.30","1.13.12-gke.25","1.13.12-gke.17","1.13.12-gke.16","1.13.12-gke.14","1.13.12-gke.13","1.13.12-gke.10","1.13.12-gke.8","1.13.12-gke.4","1.13.12-gke.2","1.13.11-gke.23","1.13.11-gke.15","1.13.11-gke.14","1.13.11-gke.12","1.13.11-gke.11","1.13.11-gke.9","1.13.11-gke.5","1.13.10-gke.7","1.13.10-gke.0","1.13.9-gke.11","1.13.9-gke.3","1.13.7-gke.24","1.13.7-gke.19","1.13.7-gke.15","1.13.7-gke.8","1.13.7-gke.0","1.13.6-gke.13","1.13.6-gke.6","1.13.6-gke.5","1.13.6-gke.0","1.13.5-gke.10","1.12.10-gke.22","1.12.10-gke.20","1.12.10-gke.19","1.12.10-gke.18","1.12.10-gke.17","1.12.10-gke.15","1.12.10-gke.13","1.12.10-gke.11","1.12.10-gke.5","1.12.9-gke.16","1.12.9-gke.15","1.12.9-gke.13","1.12.9-gke.10","1.12.9-gke.7","1.12.9-gke.3","1.12.8-gke.12","1.12.8-gke.10","1.12.8-gke.7","1.12.8-gke.6","1.12.7-gke.26","1.12.7-gke.25","1.12.7-gke.24","1.12.7-gke.22","1.12.7-gke.21","1.12.7-gke.17","1.12.7-gke.10","1.12.7-gke.7","1.12.6-gke.11","1.12.6-gke.10","1.12.6-gke.7","1.12.5-gke.10","1.12.5-gke.5","1.11.10-gke.6","1.11.10-gke.5"],"version_prefix":null},"sensitive_values":{"release_channel_default_version":{},"valid_master_versions":[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],"valid_node_versions":[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false]}}],"address":"module.gke"}]}}},"configuration":{"provider_config":{"google":{"name":"google","full_name":"registry.terraform.io/hashicorp/google","expressions":{"project":{"references":["var.project_id"]},"region":{"references":["local.gcp_region"]}}},"helm":{"name":"helm","full_name":"registry.terraform.io/hashicorp/helm","expressions":{"kubernetes":[{"cluster_ca_certificate":{"references":["module.gke.ca_certificate","module.gke"]},"host":{"references":["module.gke.endpoint","module.gke"]},"token":{"references":["data.google_client_config.default.access_token","data.google_client_config.default"]}}]}},"kubernetes":{"name":"kubernetes","full_name":"registry.terraform.io/hashicorp/kubernetes","expressions":{"cluster_ca_certificate":{"references":["module.gke.ca_certificate","module.gke"]},"host":{"references":["module.gke.endpoint","module.gke"]},"token":{"references":["data.google_client_config.default.access_token","data.google_client_config.default"]}}},"local":{"name":"local","full_name":"registry.terraform.io/hashicorp/local"},"module.db:google-beta":{"name":"google-beta","full_name":"registry.terraform.io/hashicorp/google-beta","version_constraint":"\u003e= 4.4.0, \u003c 5.0.0","module_address":"module.db"},"module.gcp_network:google-beta":{"name":"google-beta","full_name":"registry.terraform.io/hashicorp/google-beta","version_constraint":"\u003e= 3.45.0, \u003c 5.0.0","module_address":"module.gcp_network"},"module.gke:google-beta":{"name":"google-beta","full_name":"registry.terraform.io/hashicorp/google-beta","version_constraint":"\u003e= 4.25.0, \u003c 5.0.0","module_address":"module.gke"},"module.private_service_access:google-beta":{"name":"google-beta","full_name":"registry.terraform.io/hashicorp/google-beta","version_constraint":"\u003e= 3.53.0, \u003c 5.0.0","module_address":"module.private_service_access"},"null":{"name":"null","full_name":"registry.terraform.io/hashicorp/null"},"random":{"name":"random","full_name":"registry.terraform.io/hashicorp/random"}},"root_module":{"outputs":{"admin_pass":{"sensitive":true,"expression":{"references":["random_password.app_pass[\"admin\"].result","random_password.app_pass[\"admin\"]","random_password.app_pass"]},"description":"Admin rails password for admin@example.com"},"app_url":{"expression":{"references":["google_compute_address.ingress_ip.address","google_compute_address.ingress_ip"]},"description":"The URL of the deployed FitBod rails application"},"ca_certificate":{"sensitive":true,"expression":{"references":["module.gke.ca_certificate","module.gke"]},"description":"Cluster ca certificate (base64 encoded)"},"db_host":{"expression":{"references":["module.db.private_ip_address","module.db"]},"description":"The private IP address of the database"},"db_pass":{"sensitive":true,"expression":{"references":["module.db.generated_user_password","module.db"]},"description":"The generated password of the database"},"endpoint":{"sensitive":true,"expression":{"references":["module.gke.endpoint","module.gke"]},"description":"Cluster endpoint"},"gcp_region":{"expression":{"references":["local.gcp_region"]},"description":"Cluster region"},"gke_cluster_type":{"expression":{"references":["module.gke.type","module.gke"]},"description":"Cluster type (regional / zonal)"},"gke_name":{"expression":{"references":["module.gke.name","module.gke"]},"description":"Cluster name"},"grafana_pass":{"sensitive":true,"expression":{"references":["kubernetes_secret.grafana.data.admin-pass","kubernetes_secret.grafana.data","kubernetes_secret.grafana"]},"description":"Grafana admin password"},"grafana_url":{"expression":{"references":["google_compute_address.ingress_ip.address","google_compute_address.ingress_ip"]},"description":"The URL of the deployed Grafana instance"},"grafana_user":{"sensitive":true,"expression":{"references":["kubernetes_secret.grafana.data.admin-user","kubernetes_secret.grafana.data","kubernetes_secret.grafana"]},"description":"Grafana admin user"},"horizontal_pod_autoscaling_enabled":{"expression":{"references":["module.gke.horizontal_pod_autoscaling_enabled","module.gke"]},"description":"Whether horizontal pod autoscaling enabled"},"http_load_balancing_enabled":{"expression":{"references":["module.gke.http_load_balancing_enabled","module.gke"]},"description":"Whether http load balancing enabled"},"location":{"expression":{"references":["module.gke.location","module.gke"]},"description":"Cluster location (region if regional cluster, zone if zonal cluster)"},"logging_service":{"expression":{"references":["module.gke.logging_service","module.gke"]},"description":"Logging service used"},"master_authorized_networks_config":{"expression":{"references":["module.gke.master_authorized_networks_config","module.gke"]},"description":"Networks from which access to master is permitted"},"master_version":{"expression":{"references":["module.gke.master_version","module.gke"]},"description":"Current master kubernetes version"},"min_master_version":{"expression":{"references":["module.gke.min_master_version","module.gke"]},"description":"Minimum master kubernetes version"},"monitoring_service":{"expression":{"references":["module.gke.monitoring_service","module.gke"]},"description":"Monitoring service used"},"network_module":{"expression":{"references":["module.gcp_network"]},"description":"network module output"},"network_policy_enabled":{"expression":{"references":["module.gke.network_policy_enabled","module.gke"]},"description":"Whether network policy enabled"},"service_account":{"expression":{"references":["module.gke.service_account","module.gke"]},"description":"The service account to default running nodes as if not overridden in `node_pools`."},"subnets_ips":{"expression":{"references":["module.gcp_network.subnets_ips","module.gcp_network"]},"description":"The IP and cidrs of the subnets being created"},"subnets_secondary_ranges":{"expression":{"references":["module.gcp_network.subnets_secondary_ranges","module.gcp_network"]},"description":"The secondary ranges associated with these subnets"},"user1_pass":{"sensitive":true,"expression":{"references":["random_password.app_pass[\"user1\"].result","random_password.app_pass[\"user1\"]","random_password.app_pass"]},"description":"User password for user1@fitbod.me"},"vpc_network_out":{"expression":{"references":["module.gcp_network.network_name","module.gcp_network"]},"description":"The network name of the VPC"},"vpc_subnet_out":{"expression":{"references":["module.gcp_network.subnets_names[0]","module.gcp_network.subnets_names","module.gcp_network"]},"description":"The subnet name of the VPC"}},"resources":[{"address":"google_compute_address.ingress_ip","mode":"managed","type":"google_compute_address","name":"ingress_ip","provider_config_key":"google","expressions":{"name":{"references":["var.project_name"]},"region":{"references":["local.gcp_region"]}},"schema_version":0,"depends_on":["module.gcp_network"]},{"address":"google_compute_disk.app","mode":"managed","type":"google_compute_disk","name":"app","provider_config_key":"google","expressions":{"name":{"constant_value":"app"},"project":{"references":["var.project_id"]},"size":{"constant_value":1},"type":{"references":["var.gce_disk_type"]},"zone":{"references":["var.gcp_zones[0]","var.gcp_zones"]}},"schema_version":0},{"address":"google_compute_disk.monitoring","mode":"managed","type":"google_compute_disk","name":"monitoring","provider_config_key":"google","expressions":{"name":{"constant_value":"monitoring"},"project":{"references":["var.project_id"]},"size":{"constant_value":2},"type":{"references":["var.gce_disk_type"]},"zone":{"references":["var.gcp_zones[0]","var.gcp_zones"]}},"schema_version":0},{"address":"google_project_service.services","mode":"managed","type":"google_project_service","name":"services","provider_config_key":"google","expressions":{"disable_dependent_services":{"constant_value":true},"disable_on_destroy":{"constant_value":false},"project":{"references":["var.project_id"]},"service":{"references":["each.value"]}},"schema_version":0},{"address":"helm_release.nginx_controller","mode":"managed","type":"helm_release","name":"nginx_controller","provider_config_key":"helm","expressions":{"chart":{"constant_value":"ingress-nginx"},"create_namespace":{"constant_value":true},"name":{"references":["local.ns_ingress"]},"namespace":{"constant_value":"ingress-nginx"},"repository":{"constant_value":"https://kubernetes.github.io/ingress-nginx"},"timeout":{"constant_value":60},"values":{"references":["path.module","google_compute_address.ingress_ip.address","google_compute_address.ingress_ip"]}},"schema_version":0,"depends_on":["google_compute_address.ingress_ip","helm_release.prometheus"]},{"address":"helm_release.prometheus","mode":"managed","type":"helm_release","name":"prometheus","provider_config_key":"helm","expressions":{"chart":{"constant_value":"kube-prometheus-stack"},"cleanup_on_fail":{"constant_value":true},"create_namespace":{"constant_value":true},"force_update":{"constant_value":true},"name":{"constant_value":"prometheus"},"namespace":{"constant_value":"monitoring"},"repository":{"constant_value":"https://prometheus-community.github.io/helm-charts"},"timeout":{"constant_value":120},"values":{"references":["path.root","kubernetes_secret.grafana.data.admin-pass","kubernetes_secret.grafana.data","kubernetes_secret.grafana","kubernetes_secret.grafana.data.admin-user","kubernetes_secret.grafana.data","kubernetes_secret.grafana","kubernetes_persistent_volume.prom_pv","kubernetes_persistent_volume.grafana_pv"]}},"schema_version":0,"depends_on":["google_compute_disk.monitoring"]},{"address":"kubernetes_cluster_role_binding.cilium_node_patcher","mode":"managed","type":"kubernetes_cluster_role_binding","name":"cilium_node_patcher","provider_config_key":"kubernetes","expressions":{"metadata":[{"name":{"constant_value":"cilium-node-patcher"}}],"role_ref":[{"api_group":{"constant_value":"rbac.authorization.k8s.io"},"kind":{"constant_value":"ClusterRole"},"name":{"constant_value":"system:node"}}],"subject":[{"kind":{"constant_value":"ServiceAccount"},"name":{"constant_value":"cilium"},"namespace":{"constant_value":"kube-system"}}]},"schema_version":0},{"address":"kubernetes_config_map.config","mode":"managed","type":"kubernetes_config_map","name":"config","provider_config_key":"kubernetes","expressions":{"data":{"references":["data.local_file.masterkey.content","data.local_file.masterkey","var.db_user","module.db.private_ip_address","module.db","module.db.generated_user_password","module.db","module.db.generated_user_password","module.db"]},"metadata":[{"name":{"references":["var.app_name"]}}]},"schema_version":0,"depends_on":["module.db"]},{"address":"kubernetes_config_map.grafana_dashboards","mode":"managed","type":"kubernetes_config_map","name":"grafana_dashboards","provider_config_key":"kubernetes","expressions":{"data":{"references":["path.root"]},"metadata":[{"labels":{"constant_value":{"grafana_dashboard":"1"}},"name":{"constant_value":"grafana-dashboards"},"namespace":{"constant_value":"monitoring"}}]},"schema_version":0,"depends_on":["helm_release.prometheus"]},{"address":"kubernetes_deployment.app","mode":"managed","type":"kubernetes_deployment","name":"app","provider_config_key":"kubernetes","expressions":{"metadata":[{"labels":{"references":["var.app_name"]},"name":{"references":["var.app_name"]}}],"spec":[{"selector":[{"match_labels":{"references":["var.app_name"]}}],"template":[{"metadata":[{"labels":{"references":["var.app_name"]},"name":{"references":["var.app_name"]}}],"spec":[{"container":[{"command":{"constant_value":["/bin/bash","-c","bundle exec rails s -b 0.0.0.0 -p 3001"]},"env_from":[{"config_map_ref":[{"name":{"references":["kubernetes_config_map.config.metadata[0].name","kubernetes_config_map.config.metadata[0]","kubernetes_config_map.config.metadata","kubernetes_config_map.config"]}}]}],"image":{"references":["var.app_image_name"]},"image_pull_policy":{"constant_value":"IfNotPresent"},"name":{"references":["var.app_name"]},"port":[{"container_port":{"constant_value":3001}}],"resources":[{"limits":{"constant_value":{"cpu":"250m","memory":"512Mi"}},"requests":{"constant_value":{"cpu":"150m","memory":"128Mi"}}}],"volume_mount":[{"mount_path":{"constant_value":"/app/public/assets"},"name":{"references":["kubernetes_persistent_volume.app_pv.metadata[0].name","kubernetes_persistent_volume.app_pv.metadata[0]","kubernetes_persistent_volume.app_pv.metadata","kubernetes_persistent_volume.app_pv"]}}]}],"restart_policy":{"constant_value":"Always"},"volume":[{"name":{"references":["kubernetes_persistent_volume.app_pv.metadata[0].name","kubernetes_persistent_volume.app_pv.metadata[0]","kubernetes_persistent_volume.app_pv.metadata","kubernetes_persistent_volume.app_pv"]},"persistent_volume_claim":[{"claim_name":{"references":["kubernetes_persistent_volume_claim.app_pvc.metadata[0].name","kubernetes_persistent_volume_claim.app_pvc.metadata[0]","kubernetes_persistent_volume_claim.app_pvc.metadata","kubernetes_persistent_volume_claim.app_pvc"]}}]}]}]}]}],"timeouts":{"create":{"constant_value":"2m"},"delete":{"constant_value":"2m"}}},"schema_version":1,"depends_on":["kubernetes_config_map.config","kubernetes_secret.app_secret","kubernetes_job.init_app"]},{"address":"kubernetes_ingress_v1.ingress_app","mode":"managed","type":"kubernetes_ingress_v1","name":"ingress_app","provider_config_key":"kubernetes","expressions":{"metadata":[{"annotations":{"constant_value":{"kubernetes.io/ingress.class":"nginx","nginx.ingress.kubernetes.io/server-snippet":"set_real_ip_from 0.0.0.0/0; real_ip_header X-Forwarded-For;"}},"name":{"references":["local.ns_ingress"]}}],"spec":[{"rule":[{"http":[{"path":[{"backend":[{"service":[{"name":{"references":["kubernetes_service.app_frontend.metadata[0].name","kubernetes_service.app_frontend.metadata[0]","kubernetes_service.app_frontend.metadata","kubernetes_service.app_frontend"]},"port":[{"number":{"references":["kubernetes_service.app_frontend.spec[0].port[0].port","kubernetes_service.app_frontend.spec[0].port[0]","kubernetes_service.app_frontend.spec[0].port","kubernetes_service.app_frontend.spec[0]","kubernetes_service.app_frontend.spec","kubernetes_service.app_frontend"]}}]}]}],"path":{"constant_value":"/"},"path_type":{"constant_value":"Prefix"}}]}]}]}],"wait_for_load_balancer":{"constant_value":true}},"schema_version":0,"depends_on":["helm_release.nginx_controller"]},{"address":"kubernetes_job.grafana_set_main_dash","mode":"managed","type":"kubernetes_job","name":"grafana_set_main_dash","provider_config_key":"kubernetes","expressions":{"metadata":[{"annotations":{"constant_value":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"grafana","helm.sh/hook":"post-install","helm.sh/hook-delete-policy":"hook-succeeded","helm.sh/hook-weight":"-5"}},"labels":{"constant_value":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"monitoring"}},"name":{"constant_value":"prometheus-grafana"},"namespace":{"constant_value":"monitoring"}}],"spec":[{"template":[{"metadata":[{}],"spec":[{"container":[{"args":{"references":["google_compute_address.ingress_ip.address","google_compute_address.ingress_ip","kubernetes_secret.grafana.data.admin-user","kubernetes_secret.grafana.data","kubernetes_secret.grafana","kubernetes_secret.grafana.data.admin-pass","kubernetes_secret.grafana.data","kubernetes_secret.grafana"]},"command":{"constant_value":["/bin/sh","-c"]},"image":{"constant_value":"appropriate/curl:latest"},"image_pull_policy":{"constant_value":"IfNotPresent"},"name":{"constant_value":"prometheus-grafana-set-main-dash"}}],"restart_policy":{"constant_value":"OnFailure"}}]}]}],"timeouts":{"create":{"constant_value":"1m"},"delete":{"constant_value":"2m"}}},"schema_version":1,"count_expression":{"constant_value":1},"depends_on":["helm_release.prometheus","kubernetes_secret.grafana"]},{"address":"kubernetes_job.init_app","mode":"managed","type":"kubernetes_job","name":"init_app","provider_config_key":"kubernetes","expressions":{"metadata":[{"labels":{"references":["var.app_name"]},"name":{"references":["var.app_name"]}}],"spec":[{"template":[{"metadata":[{}],"spec":[{"container":[{"args":{"constant_value":["                  bundle exec rake assets:precompile\n                  # This is a very rudimentary way to check if records are already in the database.\n                  bundle exec rake db:create\n                  count=$(psql -U \"$POSTGRES_USER\" -d my_workout_production -h \"$POSTGRES_HOST\" -AXqtc \"SELECT reltuples AS estimate FROM pg_class where relname ='single_sets'\")\n                  if [[ \"$count\" -eq 0 ]]; then\n                          bundle exec rake db:migrate db:seed\n                  elif [[ -z \"$count\" ]]; then\n                          bundle exec rake db:create db:migrate db:seed\n                  else\n                          bundle exec rake db:migrate\n                  fi\n                  readarray -td: ADMIN \u003c \u003c(printf '%s' \"$admin\")\n                  readarray -td: USER1 \u003c \u003c(printf '%s' \"$user1\")\n                  bundle exec rails runner \"AdminUser.find_by_email('${ADMIN[0]}').update_attributes(:password =\u003e '${ADMIN[1]}')\"\n                  bundle exec rails runner \"User.find_by_email('${USER1[0]}').update_attributes(:password =\u003e '${USER1[1]}')\"\n"]},"command":{"constant_value":["/bin/bash","-c"]},"env_from":[{"config_map_ref":[{"name":{"references":["kubernetes_config_map.config.metadata[0].name","kubernetes_config_map.config.metadata[0]","kubernetes_config_map.config.metadata","kubernetes_config_map.config"]}}]}],"image":{"references":["var.app_image_name"]},"image_pull_policy":{"constant_value":"IfNotPresent"},"name":{"references":["var.app_name"]},"volume_mount":[{"mount_path":{"constant_value":"/app/public/assets"},"name":{"references":["kubernetes_persistent_volume.app_pv.metadata[0].name","kubernetes_persistent_volume.app_pv.metadata[0]","kubernetes_persistent_volume.app_pv.metadata","kubernetes_persistent_volume.app_pv"]}}]}],"restart_policy":{"constant_value":"Never"},"volume":[{"name":{"references":["kubernetes_persistent_volume.app_pv.metadata[0].name","kubernetes_persistent_volume.app_pv.metadata[0]","kubernetes_persistent_volume.app_pv.metadata","kubernetes_persistent_volume.app_pv"]},"persistent_volume_claim":[{"claim_name":{"references":["kubernetes_persistent_volume_claim.app_pvc.metadata[0].name","kubernetes_persistent_volume_claim.app_pvc.metadata[0]","kubernetes_persistent_volume_claim.app_pvc.metadata","kubernetes_persistent_volume_claim.app_pvc"]}}]}]}]}]}],"timeouts":{"create":{"constant_value":"3m"},"delete":{"constant_value":"2m"}}},"schema_version":1,"count_expression":{"constant_value":1},"depends_on":["kubernetes_config_map.config","kubernetes_secret.app_secret","google_compute_disk.app"]},{"address":"kubernetes_persistent_volume.app_pv","mode":"managed","type":"kubernetes_persistent_volume","name":"app_pv","provider_config_key":"kubernetes","expressions":{"metadata":[{"name":{"constant_value":"app-pv"}}],"spec":[{"access_modes":{"constant_value":["ReadWriteMany"]},"capacity":{"constant_value":{"storage":"0.25"}},"persistent_volume_source":[{"gce_persistent_disk":[{"fs_type":{"constant_value":"ext4"},"pd_name":{"references":["google_compute_disk.app.name","google_compute_disk.app"]}}]}],"storage_class_name":{"constant_value":"standard"}}]},"schema_version":0},{"address":"kubernetes_persistent_volume.grafana_pv","mode":"managed","type":"kubernetes_persistent_volume","name":"grafana_pv","provider_config_key":"kubernetes","expressions":{"metadata":[{"name":{"constant_value":"grafana-pv"}}],"spec":[{"access_modes":{"constant_value":["ReadWriteMany"]},"capacity":{"constant_value":{"storage":"0.25"}},"persistent_volume_source":[{"gce_persistent_disk":[{"fs_type":{"constant_value":"ext4"},"pd_name":{"references":["google_compute_disk.monitoring.name","google_compute_disk.monitoring"]}}]}],"storage_class_name":{"constant_value":"standard"}}]},"schema_version":0},{"address":"kubernetes_persistent_volume.prom_pv","mode":"managed","type":"kubernetes_persistent_volume","name":"prom_pv","provider_config_key":"kubernetes","expressions":{"metadata":[{"name":{"constant_value":"prom-pv"}}],"spec":[{"access_modes":{"constant_value":["ReadWriteMany"]},"capacity":{"constant_value":{"storage":"0.25"}},"persistent_volume_source":[{"gce_persistent_disk":[{"fs_type":{"constant_value":"ext4"},"pd_name":{"references":["google_compute_disk.monitoring.name","google_compute_disk.monitoring"]}}]}],"storage_class_name":{"constant_value":"standard-rwo"}}]},"schema_version":0},{"address":"kubernetes_persistent_volume_claim.app_pvc","mode":"managed","type":"kubernetes_persistent_volume_claim","name":"app_pvc","provider_config_key":"kubernetes","expressions":{"metadata":[{"name":{"constant_value":"app-pvc"}}],"spec":[{"access_modes":{"constant_value":["ReadWriteMany"]},"resources":[{"requests":{"constant_value":{"storage":"0.25"}}}],"storage_class_name":{"constant_value":"standard"},"volume_name":{"references":["kubernetes_persistent_volume.app_pv.metadata[0].name","kubernetes_persistent_volume.app_pv.metadata[0]","kubernetes_persistent_volume.app_pv.metadata","kubernetes_persistent_volume.app_pv"]}}],"wait_until_bound":{"constant_value":true}},"schema_version":0},{"address":"kubernetes_secret.app_secret","mode":"managed","type":"kubernetes_secret","name":"app_secret","provider_config_key":"kubernetes","expressions":{"data":{"references":["each.value.email","each.value","each.value.password","each.value","each.value.password","each.value","random_password.app_pass","each.key","each.value.password","each.value"]},"metadata":[{"name":{"references":["each.key"]}}],"type":{"constant_value":"Opaque"}},"schema_version":0,"for_each_expression":{"references":["var.app_user_pass"]}},{"address":"kubernetes_secret.db","mode":"managed","type":"kubernetes_secret","name":"db","provider_config_key":"kubernetes","expressions":{"data":{"references":["module.db.generated_user_password","module.db","var.db_user"]},"metadata":[{"name":{"constant_value":"db"}}],"type":{"constant_value":"Opaque"}},"schema_version":0,"depends_on":["module.db"]},{"address":"kubernetes_secret.grafana","mode":"managed","type":"kubernetes_secret","name":"grafana","provider_config_key":"kubernetes","expressions":{"data":{"references":["random_password.grafana_pass.result","random_password.grafana_pass"]},"metadata":[{"name":{"constant_value":"grafana"}}],"type":{"constant_value":"Opaque"}},"schema_version":0},{"address":"kubernetes_service.app_frontend","mode":"managed","type":"kubernetes_service","name":"app_frontend","provider_config_key":"kubernetes","expressions":{"metadata":[{"name":{"constant_value":"app-frontend"}}],"spec":[{"port":[{"port":{"constant_value":3001},"target_port":{"constant_value":3001}}],"selector":{"references":["kubernetes_deployment.app.spec[0].template[0].metadata[0].labels.app","kubernetes_deployment.app.spec[0].template[0].metadata[0].labels","kubernetes_deployment.app.spec[0].template[0].metadata[0]","kubernetes_deployment.app.spec[0].template[0].metadata","kubernetes_deployment.app.spec[0].template[0]","kubernetes_deployment.app.spec[0].template","kubernetes_deployment.app.spec[0]","kubernetes_deployment.app.spec","kubernetes_deployment.app"]},"type":{"constant_value":"NodePort"}}]},"schema_version":1},{"address":"null_resource.kubectl","mode":"managed","type":"null_resource","name":"kubectl","provider_config_key":"null","provisioners":[{"type":"local-exec","expressions":{"command":{"references":["var.gcp_zones[0]","var.gcp_zones","local.gcp_region","local.gke_name","local.kube_context","var.project_id"]},"environment":{"constant_value":{"USE_GKE_GCLOUD_AUTH_PLUGIN":"True"}}}}],"schema_version":0,"depends_on":["module.gke_auth"]},{"address":"random_password.app_pass","mode":"managed","type":"random_password","name":"app_pass","provider_config_key":"random","expressions":{"length":{"constant_value":16},"override_special":{"constant_value":"_!%"},"special":{"constant_value":true}},"schema_version":2,"for_each_expression":{"references":["var.app_user_pass"]}},{"address":"random_password.grafana_pass","mode":"managed","type":"random_password","name":"grafana_pass","provider_config_key":"random","expressions":{"length":{"constant_value":16},"override_special":{"constant_value":"!%\u0026?"},"special":{"constant_value":true}},"schema_version":2},{"address":"data.google_client_config.default","mode":"data","type":"google_client_config","name":"default","provider_config_key":"google","schema_version":0},{"address":"data.local_file.masterkey","mode":"data","type":"local_file","name":"masterkey","provider_config_key":"local","expressions":{"filename":{"references":["var.app_master_key_file","var.app_master_key_file","path.root"]}},"schema_version":0}],"module_calls":{"db":{"source":"GoogleCloudPlatform/sql-db/google//modules/postgresql","expressions":{"availability_type":{"references":["var.db_availability_type"]},"create_timeout":{"references":["var.db_create_timeout"]},"database_version":{"references":["var.pg_version"]},"delete_timeout":{"references":["var.db_delete_timeout"]},"deletion_protection":{"references":["var.db_deletion_protection"]},"disk_autoresize":{"references":["var.db_disk_autoresize"]},"disk_size":{"references":["var.db_disk_size_gb"]},"disk_type":{"references":["var.db_disk_type"]},"enable_default_db":{"references":["var.db_enable_default_db"]},"enable_default_user":{"references":["var.db_enable_default_user"]},"ip_configuration":{"references":["module.gcp_network.network_self_link","module.gcp_network"]},"module_depends_on":{"references":["module.private_service_access.peering_completed","module.private_service_access"]},"name":{"references":["var.pg_name"]},"project_id":{"references":["var.project_id"]},"random_instance_name":{"constant_value":true},"region":{"references":["local.gcp_region"]},"tier":{"references":["var.db_tier"]},"update_timeout":{"references":["var.db_update_timeout"]},"user_name":{"references":["var.db_user"]},"zone":{"references":["var.db_availability_type","var.gcp_zones[0]","var.gcp_zones"]}},"module":{"outputs":{"additional_users":{"sensitive":true,"expression":{"references":["google_sql_user.additional_users"]},"description":"List of maps of additional users and passwords"},"generated_user_password":{"sensitive":true,"expression":{"references":["random_password.user-password.result","random_password.user-password"]},"description":"The auto generated default user password if not input password was provided"},"instance_connection_name":{"expression":{"references":["google_sql_database_instance.default.connection_name","google_sql_database_instance.default"]},"description":"The connection name of the master instance to be used in connection strings"},"instance_first_ip_address":{"expression":{"references":["google_sql_database_instance.default.first_ip_address","google_sql_database_instance.default"]},"description":"The first IPv4 address of the addresses assigned."},"instance_ip_address":{"expression":{"references":["google_sql_database_instance.default.ip_address","google_sql_database_instance.default"]},"description":"The IPv4 address assigned for the master instance"},"instance_name":{"expression":{"references":["google_sql_database_instance.default.name","google_sql_database_instance.default"]},"description":"The instance name for the master instance"},"instance_self_link":{"expression":{"references":["google_sql_database_instance.default.self_link","google_sql_database_instance.default"]},"description":"The URI of the master instance"},"instance_server_ca_cert":{"expression":{"references":["google_sql_database_instance.default.server_ca_cert","google_sql_database_instance.default"]},"description":"The CA certificate information used to connect to the SQL instance via SSL"},"instance_service_account_email_address":{"expression":{"references":["google_sql_database_instance.default.service_account_email_address","google_sql_database_instance.default"]},"description":"The service account email address assigned to the master instance"},"instances":{"sensitive":true,"expression":{"references":["google_sql_database_instance.default","google_sql_database_instance.replicas"]},"description":"A list of all `google_sql_database_instance` resources we've created"},"primary":{"sensitive":true,"expression":{"references":["google_sql_database_instance.default"]},"description":"The `google_sql_database_instance` resource representing the primary instance"},"private_ip_address":{"expression":{"references":["google_sql_database_instance.default.private_ip_address","google_sql_database_instance.default"]},"description":"The first private (PRIVATE) IPv4 address assigned for the master instance"},"public_ip_address":{"expression":{"references":["google_sql_database_instance.default.public_ip_address","google_sql_database_instance.default"]},"description":"The first public (PRIMARY) IPv4 address assigned for the master instance"},"read_replica_instance_names":{"expression":{"references":["google_sql_database_instance.replicas"]},"description":"The instance names for the read replica instances"},"replicas":{"expression":{"references":["google_sql_database_instance.replicas"]},"description":"A list of `google_sql_database_instance` resources representing the replicas"},"replicas_instance_connection_names":{"expression":{"references":["google_sql_database_instance.replicas"]},"description":"The connection names of the replica instances to be used in connection strings"},"replicas_instance_first_ip_addresses":{"expression":{"references":["google_sql_database_instance.replicas"]},"description":"The first IPv4 addresses of the addresses assigned for the replica instances"},"replicas_instance_self_links":{"expression":{"references":["google_sql_database_instance.replicas"]},"description":"The URIs of the replica instances"},"replicas_instance_server_ca_certs":{"expression":{"references":["google_sql_database_instance.replicas"]},"description":"The CA certificates information used to connect to the replica instances via SSL"},"replicas_instance_service_account_email_addresses":{"expression":{"references":["google_sql_database_instance.replicas"]},"description":"The service account email addresses assigned to the replica instances"}},"resources":[{"address":"google_project_iam_member.iam_binding","mode":"managed","type":"google_project_iam_member","name":"iam_binding","provider_config_key":"google","expressions":{"member":{"references":["each.value.is_account_sa","each.value","each.value.email","each.value","each.value.email","each.value"]},"project":{"references":["var.project_id"]},"role":{"constant_value":"roles/cloudsql.instanceUser"}},"schema_version":0,"for_each_expression":{"references":["local.iam_users"]}},{"address":"google_sql_database.additional_databases","mode":"managed","type":"google_sql_database","name":"additional_databases","provider_config_key":"google","expressions":{"charset":{"references":["each.value"]},"collation":{"references":["each.value"]},"instance":{"references":["google_sql_database_instance.default.name","google_sql_database_instance.default"]},"name":{"references":["each.value.name","each.value"]},"project":{"references":["var.project_id"]}},"schema_version":0,"for_each_expression":{"references":["local.databases"]},"depends_on":["null_resource.module_depends_on","google_sql_database_instance.default"]},{"address":"google_sql_database.default","mode":"managed","type":"google_sql_database","name":"default","provider_config_key":"google","expressions":{"charset":{"references":["var.db_charset"]},"collation":{"references":["var.db_collation"]},"instance":{"references":["google_sql_database_instance.default.name","google_sql_database_instance.default"]},"name":{"references":["var.db_name"]},"project":{"references":["var.project_id"]}},"schema_version":0,"count_expression":{"references":["var.enable_default_db"]},"depends_on":["null_resource.module_depends_on","google_sql_database_instance.default"]},{"address":"google_sql_database_instance.default","mode":"managed","type":"google_sql_database_instance","name":"default","provider_config_key":"module.db:google-beta","expressions":{"database_version":{"references":["var.database_version"]},"deletion_protection":{"references":["var.deletion_protection"]},"encryption_key_name":{"references":["var.encryption_key_name"]},"name":{"references":["local.master_instance_name"]},"project":{"references":["var.project_id"]},"region":{"references":["var.region"]},"settings":[{"activation_policy":{"references":["var.activation_policy"]},"availability_type":{"references":["var.availability_type"]},"disk_autoresize":{"references":["var.disk_autoresize"]},"disk_autoresize_limit":{"references":["var.disk_autoresize_limit"]},"disk_size":{"references":["var.disk_size"]},"disk_type":{"references":["var.disk_type"]},"location_preference":[{"zone":{"references":["var.zone"]}}],"maintenance_window":[{"day":{"references":["var.maintenance_window_day"]},"hour":{"references":["var.maintenance_window_hour"]},"update_track":{"references":["var.maintenance_window_update_track"]}}],"pricing_plan":{"references":["var.pricing_plan"]},"tier":{"references":["var.tier"]},"user_labels":{"references":["var.user_labels"]}}],"timeouts":{"create":{"references":["var.create_timeout"]},"delete":{"references":["var.delete_timeout"]},"update":{"references":["var.update_timeout"]}}},"schema_version":0,"depends_on":["null_resource.module_depends_on"]},{"address":"google_sql_database_instance.replicas","mode":"managed","type":"google_sql_database_instance","name":"replicas","provider_config_key":"module.db:google-beta","expressions":{"database_version":{"references":["var.database_version"]},"deletion_protection":{"references":["var.read_replica_deletion_protection"]},"encryption_key_name":{"references":["each.value","var.zone","var.region","each.value.encryption_key_name","each.value"]},"master_instance_name":{"references":["google_sql_database_instance.default.name","google_sql_database_instance.default"]},"name":{"references":["local.master_instance_name","var.read_replica_name_suffix","each.value.name","each.value"]},"project":{"references":["var.project_id"]},"region":{"references":["each.value","var.zone"]},"replica_configuration":[{"failover_target":{"constant_value":false}}],"settings":[{"activation_policy":{"constant_value":"ALWAYS"},"disk_autoresize":{"references":["each.value","var.disk_autoresize"]},"disk_autoresize_limit":{"references":["each.value","var.disk_autoresize_limit"]},"disk_size":{"references":["each.value","var.disk_size"]},"disk_type":{"references":["each.value","var.disk_type"]},"location_preference":[{"zone":{"references":["each.value","var.zone"]}}],"pricing_plan":{"constant_value":"PER_USE"},"tier":{"references":["each.value","var.tier"]},"user_labels":{"references":["each.value","var.user_labels"]}}],"timeouts":{"create":{"references":["var.create_timeout"]},"delete":{"references":["var.delete_timeout"]},"update":{"references":["var.update_timeout"]}}},"schema_version":0,"for_each_expression":{"references":["local.replicas"]},"depends_on":["google_sql_database_instance.default"]},{"address":"google_sql_user.additional_users","mode":"managed","type":"google_sql_user","name":"additional_users","provider_config_key":"google","expressions":{"instance":{"references":["google_sql_database_instance.default.name","google_sql_database_instance.default"]},"name":{"references":["each.value.name","each.value"]},"password":{"references":["each.value[\"password\"]","each.value","random_password.additional_passwords","each.value.name","each.value"]},"project":{"references":["var.project_id"]}},"schema_version":1,"for_each_expression":{"references":["local.users"]},"depends_on":["null_resource.module_depends_on","google_sql_database_instance.default","google_sql_database_instance.replicas"]},{"address":"google_sql_user.default","mode":"managed","type":"google_sql_user","name":"default","provider_config_key":"google","expressions":{"instance":{"references":["google_sql_database_instance.default.name","google_sql_database_instance.default"]},"name":{"references":["var.user_name"]},"password":{"references":["var.user_password","random_password.user-password.result","random_password.user-password","var.user_password"]},"project":{"references":["var.project_id"]}},"schema_version":1,"count_expression":{"references":["var.enable_default_user"]},"depends_on":["null_resource.module_depends_on","google_sql_database_instance.default","google_sql_database_instance.replicas"]},{"address":"google_sql_user.iam_account","mode":"managed","type":"google_sql_user","name":"iam_account","provider_config_key":"google","expressions":{"instance":{"references":["google_sql_database_instance.default.name","google_sql_database_instance.default"]},"name":{"references":["each.value.is_account_sa","each.value","each.value.email","each.value","each.value.email","each.value"]},"project":{"references":["var.project_id"]},"type":{"references":["each.value.is_account_sa","each.value"]}},"schema_version":1,"for_each_expression":{"references":["local.iam_users"]},"depends_on":["null_resource.module_depends_on","google_project_iam_member.iam_binding"]},{"address":"null_resource.module_depends_on","mode":"managed","type":"null_resource","name":"module_depends_on","provider_config_key":"null","expressions":{"triggers":{"references":["var.module_depends_on"]}},"schema_version":0},{"address":"random_id.suffix","mode":"managed","type":"random_id","name":"suffix","provider_config_key":"random","expressions":{"byte_length":{"constant_value":4}},"schema_version":0,"count_expression":{"references":["var.random_instance_name"]}},{"address":"random_password.additional_passwords","mode":"managed","type":"random_password","name":"additional_passwords","provider_config_key":"random","expressions":{"keepers":{"references":["google_sql_database_instance.default.name","google_sql_database_instance.default"]},"length":{"constant_value":32},"special":{"constant_value":false}},"schema_version":2,"for_each_expression":{"references":["local.users"]},"depends_on":["null_resource.module_depends_on","google_sql_database_instance.default"]},{"address":"random_password.user-password","mode":"managed","type":"random_password","name":"user-password","provider_config_key":"random","expressions":{"keepers":{"references":["google_sql_database_instance.default.name","google_sql_database_instance.default"]},"length":{"constant_value":32},"special":{"constant_value":false}},"schema_version":2,"depends_on":["null_resource.module_depends_on","google_sql_database_instance.default"]}],"variables":{"activation_policy":{"default":"ALWAYS","description":"The activation policy for the master instance.Can be either `ALWAYS`, `NEVER` or `ON_DEMAND`."},"additional_databases":{"default":[],"description":"A list of databases to be created in your cluster"},"additional_users":{"default":[],"description":"A list of users to be created in your cluster"},"availability_type":{"default":"ZONAL","description":"The availability type for the master instance.This is only used to set up high availability for the PostgreSQL instance. Can be either `ZONAL` or `REGIONAL`."},"backup_configuration":{"default":{"enabled":false,"location":null,"point_in_time_recovery_enabled":false,"retained_backups":null,"retention_unit":null,"start_time":null,"transaction_log_retention_days":null},"description":"The backup_configuration settings subblock for the database setings"},"create_timeout":{"default":"15m","description":"The optional timout that is applied to limit long database creates."},"database_flags":{"default":[],"description":"The database flags for the master instance. See [more details](https://cloud.google.com/sql/docs/postgres/flags)"},"database_version":{"description":"The database version to use"},"db_charset":{"default":"","description":"The charset for the default database"},"db_collation":{"default":"","description":"The collation for the default database. Example: 'en_US.UTF8'"},"db_name":{"default":"default","description":"The name of the default database to create"},"delete_timeout":{"default":"15m","description":"The optional timout that is applied to limit long database deletes."},"deletion_protection":{"default":true,"description":"Used to block Terraform from deleting a SQL Instance."},"disk_autoresize":{"default":true,"description":"Configuration to increase storage size."},"disk_autoresize_limit":{"default":0,"description":"The maximum size to which storage can be auto increased."},"disk_size":{"default":10,"description":"The disk size for the master instance."},"disk_type":{"default":"PD_SSD","description":"The disk type for the master instance."},"enable_default_db":{"default":true,"description":"Enable or disable the creation of the default database"},"enable_default_user":{"default":true,"description":"Enable or disable the creation of the default user"},"encryption_key_name":{"default":null,"description":"The full path to the encryption key used for the CMEK disk encryption"},"iam_user_emails":{"default":[],"description":"A list of IAM users to be created in your cluster"},"insights_config":{"default":null,"description":"The insights_config settings for the database."},"ip_configuration":{"default":{"allocated_ip_range":null,"authorized_networks":[],"ipv4_enabled":true,"private_network":null,"require_ssl":null},"description":"The ip configuration for the master instances."},"maintenance_window_day":{"default":1,"description":"The day of week (1-7) for the master instance maintenance."},"maintenance_window_hour":{"default":23,"description":"The hour of day (0-23) maintenance window for the master instance maintenance."},"maintenance_window_update_track":{"default":"canary","description":"The update track of maintenance window for the master instance maintenance.Can be either `canary` or `stable`."},"module_depends_on":{"default":[],"description":"List of modules or resources this module depends on."},"name":{"description":"The name of the Cloud SQL resources"},"pricing_plan":{"default":"PER_USE","description":"The pricing plan for the master instance."},"project_id":{"description":"The project ID to manage the Cloud SQL resources"},"random_instance_name":{"default":false,"description":"Sets random suffix at the end of the Cloud SQL resource name"},"read_replica_deletion_protection":{"default":false,"description":"Used to block Terraform from deleting replica SQL Instances."},"read_replica_name_suffix":{"default":"","description":"The optional suffix to add to the read instance name"},"read_replicas":{"default":[],"description":"List of read replicas to create. Encryption key is required for replica in different region. For replica in same region as master set encryption_key_name = null"},"region":{"default":"us-central1","description":"The region of the Cloud SQL resources"},"tier":{"default":"db-f1-micro","description":"The tier for the master instance."},"update_timeout":{"default":"15m","description":"The optional timout that is applied to limit long database updates."},"user_labels":{"default":{},"description":"The key/value labels for the master instances."},"user_name":{"default":"default","description":"The name of the default user"},"user_password":{"default":"","description":"The password for the default user. If not set, a random one will be generated and available in the generated_user_password output variable."},"zone":{"description":"The zone for the master instance, it should be something like: `us-central1-a`, `us-east1-c`."}}},"version_constraint":"\u003e= 11.0.0"},"gcp_network":{"source":"terraform-google-modules/network/google","expressions":{"network_name":{"references":["local.gke_net"]},"project_id":{"references":["var.project_id"]},"secondary_ranges":{"references":["local.gke_subnet","local.gcp_secondary_range"]},"subnets":{"references":["local.gke_subnet","local.gcp_region"]}},"module":{"outputs":{"network":{"expression":{"references":["module.vpc"]},"description":"The created network"},"network_id":{"expression":{"references":["module.vpc.network_id","module.vpc"]},"description":"The ID of the VPC being created"},"network_name":{"expression":{"references":["module.vpc.network_name","module.vpc"]},"description":"The name of the VPC being created"},"network_self_link":{"expression":{"references":["module.vpc.network_self_link","module.vpc"]},"description":"The URI of the VPC being created"},"project_id":{"expression":{"references":["module.vpc.project_id","module.vpc"]},"description":"VPC project id"},"route_names":{"expression":{"references":["module.routes.routes","module.routes"]},"description":"The route names associated with this VPC"},"subnets":{"expression":{"references":["module.subnets.subnets","module.subnets"]},"description":"A map with keys of form subnet_region/subnet_name and values being the outputs of the google_compute_subnetwork resources used to create corresponding subnets."},"subnets_flow_logs":{"expression":{"references":["module.subnets.subnets","module.subnets"]},"description":"Whether the subnets will have VPC flow logs enabled"},"subnets_ids":{"expression":{"references":["module.subnets.subnets","module.subnets"]},"description":"The IDs of the subnets being created"},"subnets_ips":{"expression":{"references":["module.subnets.subnets","module.subnets"]},"description":"The IPs and CIDRs of the subnets being created"},"subnets_names":{"expression":{"references":["module.subnets.subnets","module.subnets"]},"description":"The names of the subnets being created"},"subnets_private_access":{"expression":{"references":["module.subnets.subnets","module.subnets"]},"description":"Whether the subnets will have access to Google API's without a public IP"},"subnets_regions":{"expression":{"references":["module.subnets.subnets","module.subnets"]},"description":"The region where the subnets will be created"},"subnets_secondary_ranges":{"expression":{"references":["module.subnets.subnets","module.subnets"]},"description":"The secondary ranges associated with these subnets"},"subnets_self_links":{"expression":{"references":["module.subnets.subnets","module.subnets"]},"description":"The self-links of subnets being created"}},"module_calls":{"firewall_rules":{"source":"./modules/firewall-rules","expressions":{"network_name":{"references":["module.vpc.network_name","module.vpc"]},"project_id":{"references":["var.project_id"]},"rules":{"references":["local.rules"]}},"module":{"outputs":{"firewall_rules":{"expression":{"references":["google_compute_firewall.rules"]},"description":"The created firewall rule resources"}},"resources":[{"address":"google_compute_firewall.rules","mode":"managed","type":"google_compute_firewall","name":"rules","provider_config_key":"google","expressions":{"description":{"references":["each.value.description","each.value"]},"destination_ranges":{"references":["each.value.direction","each.value","each.value.ranges","each.value"]},"direction":{"references":["each.value.direction","each.value"]},"name":{"references":["each.value.name","each.value"]},"network":{"references":["var.network_name"]},"priority":{"references":["each.value.priority","each.value"]},"project":{"references":["var.project_id"]},"source_ranges":{"references":["each.value.direction","each.value","each.value.ranges","each.value"]},"source_service_accounts":{"references":["each.value.source_service_accounts","each.value"]},"source_tags":{"references":["each.value.source_tags","each.value"]},"target_service_accounts":{"references":["each.value.target_service_accounts","each.value"]},"target_tags":{"references":["each.value.target_tags","each.value"]}},"schema_version":1,"for_each_expression":{"references":["var.rules"]}}],"variables":{"network_name":{"description":"Name of the network this set of firewall rules applies to."},"project_id":{"description":"Project id of the project that holds the network."},"rules":{"default":[],"description":"List of custom rule definitions (refer to variables file for syntax)."}}}},"routes":{"source":"./modules/routes","expressions":{"module_depends_on":{"references":["module.subnets.subnets","module.subnets"]},"network_name":{"references":["module.vpc.network_name","module.vpc"]},"project_id":{"references":["var.project_id"]},"routes":{"references":["var.routes"]}},"module":{"outputs":{"routes":{"expression":{"references":["google_compute_route.route"]},"description":"The created routes resources"}},"resources":[{"address":"google_compute_route.route","mode":"managed","type":"google_compute_route","name":"route","provider_config_key":"google","expressions":{"description":{"references":["each.value"]},"dest_range":{"references":["each.value"]},"name":{"references":["each.key"]},"network":{"references":["var.network_name"]},"next_hop_gateway":{"references":["each.value"]},"next_hop_ilb":{"references":["each.value"]},"next_hop_instance":{"references":["each.value"]},"next_hop_instance_zone":{"references":["each.value"]},"next_hop_ip":{"references":["each.value"]},"next_hop_vpn_tunnel":{"references":["each.value"]},"priority":{"references":["each.value"]},"project":{"references":["var.project_id"]},"tags":{"references":["each.value"]}},"schema_version":0,"for_each_expression":{"references":["local.routes"]},"depends_on":["var.module_depends_on"]}],"variables":{"module_depends_on":{"default":[],"description":"List of modules or resources this module depends on."},"network_name":{"description":"The name of the network where routes will be created"},"project_id":{"description":"The ID of the project where the routes will be created"},"routes":{"default":[],"description":"List of routes being created in this VPC"}}}},"subnets":{"source":"./modules/subnets","expressions":{"network_name":{"references":["module.vpc.network_name","module.vpc"]},"project_id":{"references":["var.project_id"]},"secondary_ranges":{"references":["var.secondary_ranges"]},"subnets":{"references":["var.subnets"]}},"module":{"outputs":{"subnets":{"expression":{"references":["google_compute_subnetwork.subnetwork"]},"description":"The created subnet resources"}},"resources":[{"address":"google_compute_subnetwork.subnetwork","mode":"managed","type":"google_compute_subnetwork","name":"subnetwork","provider_config_key":"google","expressions":{"description":{"references":["each.value"]},"ip_cidr_range":{"references":["each.value.subnet_ip","each.value"]},"name":{"references":["each.value.subnet_name","each.value"]},"network":{"references":["var.network_name"]},"private_ip_google_access":{"references":["each.value"]},"project":{"references":["var.project_id"]},"purpose":{"references":["each.value"]},"region":{"references":["each.value.subnet_region","each.value"]},"role":{"references":["each.value"]},"secondary_ip_range":{"references":["var.secondary_ranges","each.value.subnet_name","each.value","var.secondary_ranges","each.value.subnet_name","each.value","var.secondary_ranges","each.value.subnet_name","each.value"]}},"schema_version":0,"for_each_expression":{"references":["local.subnets"]}}],"variables":{"network_name":{"description":"The name of the network where subnets will be created"},"project_id":{"description":"The ID of the project where subnets will be created"},"secondary_ranges":{"default":{},"description":"Secondary ranges that will be used in some of the subnets"},"subnets":{"description":"The list of subnets being created"}}}},"vpc":{"source":"./modules/vpc","expressions":{"auto_create_subnetworks":{"references":["var.auto_create_subnetworks"]},"delete_default_internet_gateway_routes":{"references":["var.delete_default_internet_gateway_routes"]},"description":{"references":["var.description"]},"mtu":{"references":["var.mtu"]},"network_name":{"references":["var.network_name"]},"project_id":{"references":["var.project_id"]},"routing_mode":{"references":["var.routing_mode"]},"shared_vpc_host":{"references":["var.shared_vpc_host"]}},"module":{"outputs":{"network":{"expression":{"references":["google_compute_network.network"]},"description":"The VPC resource being created"},"network_id":{"expression":{"references":["google_compute_network.network.id","google_compute_network.network"]},"description":"The ID of the VPC being created"},"network_name":{"expression":{"references":["google_compute_network.network.name","google_compute_network.network"]},"description":"The name of the VPC being created"},"network_self_link":{"expression":{"references":["google_compute_network.network.self_link","google_compute_network.network"]},"description":"The URI of the VPC being created"},"project_id":{"expression":{"references":["var.shared_vpc_host","google_compute_shared_vpc_host_project.shared_vpc_host","google_compute_shared_vpc_host_project.shared_vpc_host","google_compute_network.network.project","google_compute_network.network"]},"description":"VPC project id"}},"resources":[{"address":"google_compute_network.network","mode":"managed","type":"google_compute_network","name":"network","provider_config_key":"google","expressions":{"auto_create_subnetworks":{"references":["var.auto_create_subnetworks"]},"delete_default_routes_on_create":{"references":["var.delete_default_internet_gateway_routes"]},"description":{"references":["var.description"]},"mtu":{"references":["var.mtu"]},"name":{"references":["var.network_name"]},"project":{"references":["var.project_id"]},"routing_mode":{"references":["var.routing_mode"]}},"schema_version":0},{"address":"google_compute_shared_vpc_host_project.shared_vpc_host","mode":"managed","type":"google_compute_shared_vpc_host_project","name":"shared_vpc_host","provider_config_key":"module.gcp_network:google-beta","expressions":{"project":{"references":["var.project_id"]}},"schema_version":0,"count_expression":{"references":["var.shared_vpc_host"]},"depends_on":["google_compute_network.network"]}],"variables":{"auto_create_subnetworks":{"default":false,"description":"When set to true, the network is created in 'auto subnet mode' and it will create a subnet for each region automatically across the 10.128.0.0/9 address range. When set to false, the network is created in 'custom subnet mode' so the user can explicitly connect subnetwork resources."},"delete_default_internet_gateway_routes":{"default":false,"description":"If set, ensure that all routes within the network specified whose names begin with 'default-route' and with a next hop of 'default-internet-gateway' are deleted"},"description":{"default":"","description":"An optional description of this resource. The resource must be recreated to modify this field."},"mtu":{"default":0,"description":"The network MTU. Must be a value between 1460 and 1500 inclusive. If set to 0 (meaning MTU is unset), the network will default to 1460 automatically."},"network_name":{"description":"The name of the network being created"},"project_id":{"description":"The ID of the project where this VPC will be created"},"routing_mode":{"default":"GLOBAL","description":"The network routing mode (default 'GLOBAL')"},"shared_vpc_host":{"default":false,"description":"Makes this project a Shared VPC host if 'true' (default 'false')"}}}}},"variables":{"auto_create_subnetworks":{"default":false,"description":"When set to true, the network is created in 'auto subnet mode' and it will create a subnet for each region automatically across the 10.128.0.0/9 address range. When set to false, the network is created in 'custom subnet mode' so the user can explicitly connect subnetwork resources."},"delete_default_internet_gateway_routes":{"default":false,"description":"If set, ensure that all routes within the network specified whose names begin with 'default-route' and with a next hop of 'default-internet-gateway' are deleted"},"description":{"default":"","description":"An optional description of this resource. The resource must be recreated to modify this field."},"firewall_rules":{"default":[],"description":"List of firewall rules"},"mtu":{"default":0,"description":"The network MTU. Must be a value between 1460 and 1500 inclusive. If set to 0 (meaning MTU is unset), the network will default to 1460 automatically."},"network_name":{"description":"The name of the network being created"},"project_id":{"description":"The ID of the project where this VPC will be created"},"routes":{"default":[],"description":"List of routes being created in this VPC"},"routing_mode":{"default":"GLOBAL","description":"The network routing mode (default 'GLOBAL')"},"secondary_ranges":{"default":{},"description":"Secondary ranges that will be used in some of the subnets"},"shared_vpc_host":{"default":false,"description":"Makes this project a Shared VPC host if 'true' (default 'false')"},"subnets":{"description":"The list of subnets being created"}}},"version_constraint":"\u003e= 5.1.0"},"gke":{"source":"terraform-google-modules/kubernetes-engine/google//modules/beta-private-cluster","expressions":{"add_master_webhook_firewall_rules":{"constant_value":true},"cluster_autoscaling":{"references":["var.gke_max_cpu_cores","var.gke_min_cpu_cores","var.gke_max_memory_gb","var.gke_min_memory_gb"]},"datapath_provider":{"references":["var.gke_dataplane_v2_enabled"]},"disable_legacy_metadata_endpoints":{"constant_value":true},"enable_private_endpoint":{"constant_value":true},"enable_private_nodes":{"constant_value":false},"gce_pd_csi_driver":{"constant_value":true},"horizontal_pod_autoscaling":{"constant_value":true},"http_load_balancing":{"constant_value":false},"ip_range_pods":{"constant_value":"ip-range-pods"},"ip_range_services":{"constant_value":"ip-range-services"},"kubernetes_version":{"references":["var.gke_version"]},"monitoring_enable_managed_prometheus":{"constant_value":false},"name":{"references":["local.gke_name"]},"network":{"references":["module.gcp_network.network_name","module.gcp_network"]},"node_pools":{"references":["local.gke_pool","var.gke_version","var.gke_machine_type","var.gcp_zones","var.gke_min_num_nodes","var.gke_max_num_nodes","var.gke_disk_size_gb","var.project_name","var.gke_disk_type","var.gke_image_type","var.gke_enable_preemptible"]},"node_pools_labels":{"references":["local.gke_pool","local.gke_pool"]},"node_pools_oauth_scopes":{"references":["local.gke_pool"]},"node_pools_tags":{"references":["local.gke_pool","local.gke_pool"]},"node_pools_taints":{"references":["local.gke_pool","local.gke_pool"]},"project_id":{"references":["var.project_id"]},"region":{"references":["local.gcp_region"]},"regional":{"references":["var.gke_is_regional"]},"remove_default_node_pool":{"constant_value":true},"subnetwork":{"references":["module.gcp_network.subnets_names[0]","module.gcp_network.subnets_names","module.gcp_network"]},"zones":{"references":["var.gcp_zones"]}},"module":{"outputs":{"ca_certificate":{"sensitive":true,"expression":{"references":["local.cluster_ca_certificate"]},"description":"Cluster ca certificate (base64 encoded)"},"cloudrun_enabled":{"expression":{"references":["local.cluster_cloudrun_enabled"]},"description":"Whether CloudRun enabled"},"cluster_id":{"expression":{"references":["local.cluster_id"]},"description":"Cluster ID"},"dns_cache_enabled":{"expression":{"references":["local.cluster_dns_cache_enabled"]},"description":"Whether DNS Cache enabled"},"endpoint":{"sensitive":true,"expression":{"references":["local.cluster_endpoint"]},"depends_on":["google_container_cluster.primary","google_container_node_pool.pools"],"description":"Cluster endpoint"},"horizontal_pod_autoscaling_enabled":{"expression":{"references":["local.cluster_horizontal_pod_autoscaling_enabled"]},"description":"Whether horizontal pod autoscaling enabled"},"http_load_balancing_enabled":{"expression":{"references":["local.cluster_http_load_balancing_enabled"]},"description":"Whether http load balancing enabled"},"identity_namespace":{"expression":{"references":["local.cluster_workload_identity_config","local.cluster_workload_identity_config[0].workload_pool","local.cluster_workload_identity_config[0]","local.cluster_workload_identity_config"]},"depends_on":["google_container_cluster.primary"],"description":"Workload Identity pool"},"identity_service_enabled":{"expression":{"references":["local.cluster_pod_security_policy_enabled"]},"description":"Whether Identity Service is enabled"},"instance_group_urls":{"expression":{"references":["google_container_node_pool.pools"]},"description":"List of GKE generated instance groups"},"intranode_visibility_enabled":{"expression":{"references":["local.cluster_intranode_visibility_enabled"]},"description":"Whether intra-node visibility is enabled"},"istio_enabled":{"expression":{"references":["local.cluster_istio_enabled"]},"description":"Whether Istio is enabled"},"location":{"expression":{"references":["local.cluster_location"]},"description":"Cluster location (region if regional cluster, zone if zonal cluster)"},"logging_service":{"expression":{"references":["local.cluster_logging_service"]},"description":"Logging service used"},"master_authorized_networks_config":{"expression":{"references":["google_container_cluster.primary.master_authorized_networks_config","google_container_cluster.primary"]},"description":"Networks from which access to master is permitted"},"master_ipv4_cidr_block":{"expression":{"references":["var.master_ipv4_cidr_block"]},"description":"The IP range in CIDR notation used for the hosted master network"},"master_version":{"expression":{"references":["local.cluster_master_version"]},"description":"Current master kubernetes version"},"min_master_version":{"expression":{"references":["local.cluster_min_master_version"]},"description":"Minimum master kubernetes version"},"monitoring_service":{"expression":{"references":["local.cluster_monitoring_service"]},"description":"Monitoring service used"},"name":{"expression":{"references":["local.cluster_name_computed"]},"depends_on":["google_container_cluster.primary","google_container_node_pool.pools"],"description":"Cluster name"},"network_policy_enabled":{"expression":{"references":["local.cluster_network_policy_enabled"]},"description":"Whether network policy enabled"},"node_pools_names":{"expression":{"references":["local.cluster_node_pools_names"]},"description":"List of node pools names"},"node_pools_versions":{"expression":{"references":["local.cluster_node_pools_versions"]},"description":"Node pool versions by node pool name"},"peering_name":{"expression":{"references":["local.cluster_peering_name"]},"description":"The name of the peering between this cluster and the Google owned VPC."},"pod_security_policy_enabled":{"expression":{"references":["local.cluster_pod_security_policy_enabled"]},"description":"Whether pod security policy is enabled"},"region":{"expression":{"references":["local.cluster_region"]},"description":"Cluster region"},"release_channel":{"expression":{"references":["var.release_channel"]},"description":"The release channel of this cluster"},"service_account":{"expression":{"references":["local.service_account"]},"description":"The service account to default running nodes as if not overridden in `node_pools`."},"tpu_ipv4_cidr_block":{"expression":{"references":["var.enable_tpu","google_container_cluster.primary.tpu_ipv4_cidr_block","google_container_cluster.primary"]},"description":"The IP range in CIDR notation used for the TPUs"},"type":{"expression":{"references":["local.cluster_type"]},"description":"Cluster type (regional / zonal)"},"vertical_pod_autoscaling_enabled":{"expression":{"references":["local.cluster_vertical_pod_autoscaling_enabled"]},"description":"Whether veritical pod autoscaling is enabled"},"zones":{"expression":{"references":["local.cluster_zones"]},"description":"List of zones in which the cluster resides"}},"resources":[{"address":"google_compute_firewall.intra_egress","mode":"managed","type":"google_compute_firewall","name":"intra_egress","provider_config_key":"google","expressions":{"allow":[{"protocol":{"constant_value":"tcp"}},{"protocol":{"constant_value":"udp"}},{"protocol":{"constant_value":"icmp"}},{"protocol":{"constant_value":"sctp"}},{"protocol":{"constant_value":"esp"}},{"protocol":{"constant_value":"ah"}}],"description":{"constant_value":"Managed by terraform gke module: Allow pods to communicate with each other and the master"},"destination_ranges":{"references":["local.cluster_endpoint_for_nodes","local.cluster_subnet_cidr","local.cluster_alias_ranges_cidr","var.ip_range_pods"]},"direction":{"constant_value":"EGRESS"},"name":{"references":["var.name","var.name"]},"network":{"references":["var.network"]},"priority":{"references":["var.firewall_priority"]},"project":{"references":["local.network_project_id"]},"target_tags":{"references":["local.cluster_network_tag"]}},"schema_version":1,"count_expression":{"references":["var.add_cluster_firewall_rules"]}},{"address":"google_compute_firewall.master_webhooks","mode":"managed","type":"google_compute_firewall","name":"master_webhooks","provider_config_key":"google","expressions":{"allow":[{"ports":{"references":["var.firewall_inbound_ports"]},"protocol":{"constant_value":"tcp"}}],"description":{"constant_value":"Managed by terraform gke module: Allow master to hit pods for admission controllers/webhooks"},"direction":{"constant_value":"INGRESS"},"name":{"references":["var.name","var.name"]},"network":{"references":["var.network"]},"priority":{"references":["var.firewall_priority"]},"project":{"references":["local.network_project_id"]},"source_ranges":{"references":["local.cluster_endpoint_for_nodes"]},"source_tags":{"constant_value":[]},"target_tags":{"references":["local.cluster_network_tag"]}},"schema_version":1,"count_expression":{"references":["var.add_cluster_firewall_rules","var.add_master_webhook_firewall_rules"]}},{"address":"google_compute_firewall.shadow_allow_master","mode":"managed","type":"google_compute_firewall","name":"shadow_allow_master","provider_config_key":"google","expressions":{"allow":[{"ports":{"constant_value":["10250","443"]},"protocol":{"constant_value":"tcp"}}],"description":{"constant_value":"Managed by terraform GKE module: A shadow firewall rule to match the default rule allowing worker nodes communication."},"direction":{"constant_value":"INGRESS"},"log_config":[{"metadata":{"constant_value":"INCLUDE_ALL_METADATA"}}],"name":{"references":["var.name","var.name"]},"network":{"references":["var.network"]},"priority":{"references":["var.shadow_firewall_rules_priority"]},"project":{"references":["local.network_project_id"]},"source_ranges":{"references":["local.cluster_endpoint_for_nodes"]},"target_tags":{"references":["local.cluster_network_tag"]}},"schema_version":1,"count_expression":{"references":["var.add_shadow_firewall_rules"]}},{"address":"google_compute_firewall.shadow_allow_nodes","mode":"managed","type":"google_compute_firewall","name":"shadow_allow_nodes","provider_config_key":"google","expressions":{"allow":[{"protocol":{"constant_value":"icmp"}},{"ports":{"constant_value":["1-65535"]},"protocol":{"constant_value":"udp"}},{"ports":{"constant_value":["1-65535"]},"protocol":{"constant_value":"tcp"}}],"description":{"constant_value":"Managed by Terraform GKE module: A shadow firewall rule to match the default rule allowing worker nodes communication."},"direction":{"constant_value":"INGRESS"},"log_config":[{"metadata":{"constant_value":"INCLUDE_ALL_METADATA"}}],"name":{"references":["var.name","var.name"]},"network":{"references":["var.network"]},"priority":{"references":["var.shadow_firewall_rules_priority"]},"project":{"references":["local.network_project_id"]},"source_ranges":{"references":["local.cluster_subnet_cidr"]},"target_tags":{"references":["local.cluster_network_tag"]}},"schema_version":1,"count_expression":{"references":["var.add_shadow_firewall_rules"]}},{"address":"google_compute_firewall.shadow_allow_pods","mode":"managed","type":"google_compute_firewall","name":"shadow_allow_pods","provider_config_key":"google","expressions":{"allow":[{"protocol":{"constant_value":"tcp"}},{"protocol":{"constant_value":"udp"}},{"protocol":{"constant_value":"icmp"}},{"protocol":{"constant_value":"sctp"}},{"protocol":{"constant_value":"esp"}},{"protocol":{"constant_value":"ah"}}],"description":{"constant_value":"Managed by terraform gke module: A shadow firewall rule to match the default rule allowing pod communication."},"direction":{"constant_value":"INGRESS"},"log_config":[{"metadata":{"constant_value":"INCLUDE_ALL_METADATA"}}],"name":{"references":["var.name","var.name"]},"network":{"references":["var.network"]},"priority":{"references":["var.shadow_firewall_rules_priority"]},"project":{"references":["local.network_project_id"]},"source_ranges":{"references":["local.cluster_alias_ranges_cidr","var.ip_range_pods"]},"target_tags":{"references":["local.cluster_network_tag"]}},"schema_version":1,"count_expression":{"references":["var.add_shadow_firewall_rules"]}},{"address":"google_compute_firewall.tpu_egress","mode":"managed","type":"google_compute_firewall","name":"tpu_egress","provider_config_key":"google","expressions":{"allow":[{"protocol":{"constant_value":"tcp"}},{"protocol":{"constant_value":"udp"}},{"protocol":{"constant_value":"icmp"}},{"protocol":{"constant_value":"sctp"}},{"protocol":{"constant_value":"esp"}},{"protocol":{"constant_value":"ah"}}],"description":{"constant_value":"Managed by terraform gke module: Allow pods to communicate with TPUs"},"destination_ranges":{"references":["google_container_cluster.primary.tpu_ipv4_cidr_block","google_container_cluster.primary"]},"direction":{"constant_value":"EGRESS"},"name":{"references":["var.name","var.name"]},"network":{"references":["var.network"]},"priority":{"references":["var.firewall_priority"]},"project":{"references":["local.network_project_id"]},"target_tags":{"references":["local.cluster_network_tag"]}},"schema_version":1,"count_expression":{"references":["var.add_cluster_firewall_rules","var.enable_tpu"]}},{"address":"google_container_cluster.primary","mode":"managed","type":"google_container_cluster","name":"primary","provider_config_key":"module.gke:google-beta","expressions":{"addons_config":[{"config_connector_config":[{"enabled":{"references":["var.config_connector"]}}],"dns_cache_config":[{"enabled":{"references":["var.dns_cache"]}}],"gcp_filestore_csi_driver_config":[{"enabled":{"references":["var.filestore_csi_driver"]}}],"horizontal_pod_autoscaling":[{"disabled":{"references":["var.horizontal_pod_autoscaling"]}}],"http_load_balancing":[{"disabled":{"references":["var.http_load_balancing"]}}],"istio_config":[{"auth":{"references":["var.istio_auth"]},"disabled":{"references":["var.istio"]}}],"kalm_config":[{"enabled":{"references":["var.kalm_config"]}}],"network_policy_config":[{"disabled":{"references":["var.network_policy"]}}]}],"cluster_autoscaling":[{"autoscaling_profile":{"references":["var.cluster_autoscaling.autoscaling_profile","var.cluster_autoscaling","var.cluster_autoscaling.autoscaling_profile","var.cluster_autoscaling"]},"enabled":{"references":["var.cluster_autoscaling.enabled","var.cluster_autoscaling"]}}],"cluster_ipv4_cidr":{"references":["var.cluster_ipv4_cidr"]},"datapath_provider":{"references":["var.datapath_provider"]},"default_max_pods_per_node":{"references":["var.default_max_pods_per_node"]},"default_snat_status":[{"disabled":{"references":["var.disable_default_snat"]}}],"description":{"references":["var.description"]},"enable_binary_authorization":{"references":["var.enable_binary_authorization"]},"enable_intranode_visibility":{"references":["var.enable_intranode_visibility"]},"enable_kubernetes_alpha":{"references":["var.enable_kubernetes_alpha"]},"enable_l4_ilb_subsetting":{"references":["var.enable_l4_ilb_subsetting"]},"enable_shielded_nodes":{"references":["var.enable_shielded_nodes"]},"enable_tpu":{"references":["var.enable_tpu"]},"ip_allocation_policy":[{"cluster_secondary_range_name":{"references":["var.ip_range_pods"]},"services_secondary_range_name":{"references":["var.ip_range_services"]}}],"location":{"references":["local.location"]},"logging_service":{"references":["local.cluster_telemetry_type_is_set","local.logmon_config_is_set","var.logging_service"]},"maintenance_policy":[{}],"master_auth":[{"client_certificate_config":[{"issue_client_certificate":{"references":["var.issue_client_certificate"]}}]}],"min_master_version":{"references":["var.release_channel","local.master_version"]},"monitoring_service":{"references":["local.cluster_telemetry_type_is_set","local.logmon_config_is_set","var.monitoring_service"]},"name":{"references":["var.name"]},"network":{"references":["local.network_project_id","var.network"]},"networking_mode":{"constant_value":"VPC_NATIVE"},"node_locations":{"references":["local.node_locations"]},"node_pool":[{"initial_node_count":{"references":["var.initial_node_count"]},"name":{"constant_value":"default-pool"},"node_config":[{"boot_disk_kms_key":{"references":["var.node_pools[0]","var.node_pools"]},"image_type":{"references":["var.node_pools[0]","var.node_pools"]},"machine_type":{"references":["var.node_pools[0]","var.node_pools"]},"metadata":{"references":["local.node_pools_metadata[\"all\"]","local.node_pools_metadata"]},"min_cpu_platform":{"references":["var.node_pools[0]","var.node_pools"]},"service_account":{"references":["var.node_pools[0]","var.node_pools","local.service_account"]},"shielded_instance_config":[{"enable_integrity_monitoring":{"references":["var.node_pools[0]","var.node_pools"]},"enable_secure_boot":{"references":["var.node_pools[0]","var.node_pools"]}}],"tags":{"references":["local.node_pools_tags","local.cluster_network_tag","local.node_pools_tags","local.cluster_network_tag","local.node_pools_tags","local.node_pools_tags","var.node_pools[0].name","var.node_pools[0]","var.node_pools"]}}]}],"notification_config":[{"pubsub":[{"enabled":{"references":["var.notification_config_topic"]},"topic":{"references":["var.notification_config_topic"]}}]}],"project":{"references":["var.project_id"]},"remove_default_node_pool":{"references":["var.remove_default_node_pool"]},"resource_labels":{"references":["var.cluster_resource_labels"]},"subnetwork":{"references":["local.network_project_id","local.region","var.subnetwork"]},"timeouts":{"create":{"references":["var.timeouts"]},"delete":{"references":["var.timeouts"]},"update":{"references":["var.timeouts"]}},"vertical_pod_autoscaling":[{"enabled":{"references":["var.enable_vertical_pod_autoscaling"]}}]},"schema_version":1},{"address":"google_container_node_pool.pools","mode":"managed","type":"google_container_node_pool","name":"pools","provider_config_key":"module.gke:google-beta","expressions":{"cluster":{"references":["google_container_cluster.primary.name","google_container_cluster.primary"]},"initial_node_count":{"references":["each.value","each.value","each.value"]},"location":{"references":["local.location"]},"management":[{"auto_repair":{"references":["each.value"]},"auto_upgrade":{"references":["each.value","local.default_auto_upgrade"]}}],"max_pods_per_node":{"references":["each.value"]},"name":{"references":["each.key"]},"node_config":[{"boot_disk_kms_key":{"references":["each.value"]},"disk_size_gb":{"references":["each.value"]},"disk_type":{"references":["each.value"]},"guest_accelerator":{"references":["each.value","each.value","each.value","each.value"]},"image_type":{"references":["each.value"]},"labels":{"references":["local.node_pools_labels","var.name","local.node_pools_labels","each.value[\"name\"]","each.value","local.node_pools_labels[\"all\"]","local.node_pools_labels","local.node_pools_labels","each.value[\"name\"]","each.value"]},"local_ssd_count":{"references":["each.value"]},"machine_type":{"references":["each.value"]},"metadata":{"references":["local.node_pools_metadata","var.name","local.node_pools_metadata","each.value[\"name\"]","each.value","local.node_pools_metadata[\"all\"]","local.node_pools_metadata","local.node_pools_metadata","each.value[\"name\"]","each.value","var.disable_legacy_metadata_endpoints"]},"min_cpu_platform":{"references":["each.value"]},"oauth_scopes":{"references":["local.node_pools_oauth_scopes[\"all\"]","local.node_pools_oauth_scopes","local.node_pools_oauth_scopes","each.value[\"name\"]","each.value"]},"preemptible":{"references":["each.value"]},"service_account":{"references":["each.value","local.service_account"]},"shielded_instance_config":[{"enable_integrity_monitoring":{"references":["each.value"]},"enable_secure_boot":{"references":["each.value"]}}],"spot":{"references":["each.value"]},"tags":{"references":["local.node_pools_tags","local.cluster_network_tag","local.node_pools_tags","local.cluster_network_tag","each.value[\"name\"]","each.value","local.node_pools_tags[\"all\"]","local.node_pools_tags","local.node_pools_tags","each.value[\"name\"]","each.value"]}}],"node_count":{"references":["each.value","each.value"]},"node_locations":{"references":["each.value","each.value[\"node_locations\"]","each.value"]},"project":{"references":["var.project_id"]},"timeouts":{"create":{"references":["var.timeouts"]},"delete":{"references":["var.timeouts"]},"update":{"references":["var.timeouts"]}},"upgrade_settings":[{"max_surge":{"references":["each.value"]},"max_unavailable":{"references":["each.value"]}}],"version":{"references":["each.value","local.default_auto_upgrade","each.value","google_container_cluster.primary.min_master_version","google_container_cluster.primary"]}},"schema_version":1,"for_each_expression":{"references":["local.node_pools"]}},{"address":"google_project_iam_member.cluster_service_account-artifact-registry","mode":"managed","type":"google_project_iam_member","name":"cluster_service_account-artifact-registry","provider_config_key":"google","expressions":{"member":{"references":["google_service_account.cluster_service_account[0].email","google_service_account.cluster_service_account[0]","google_service_account.cluster_service_account"]},"project":{"references":["each.key"]},"role":{"constant_value":"roles/artifactregistry.reader"}},"schema_version":0,"for_each_expression":{"references":["var.create_service_account","var.grant_registry_access","local.registry_projects_list"]}},{"address":"google_project_iam_member.cluster_service_account-gcr","mode":"managed","type":"google_project_iam_member","name":"cluster_service_account-gcr","provider_config_key":"google","expressions":{"member":{"references":["google_service_account.cluster_service_account[0].email","google_service_account.cluster_service_account[0]","google_service_account.cluster_service_account"]},"project":{"references":["each.key"]},"role":{"constant_value":"roles/storage.objectViewer"}},"schema_version":0,"for_each_expression":{"references":["var.create_service_account","var.grant_registry_access","local.registry_projects_list"]}},{"address":"google_project_iam_member.cluster_service_account-log_writer","mode":"managed","type":"google_project_iam_member","name":"cluster_service_account-log_writer","provider_config_key":"google","expressions":{"member":{"references":["google_service_account.cluster_service_account[0].email","google_service_account.cluster_service_account[0]","google_service_account.cluster_service_account"]},"project":{"references":["google_service_account.cluster_service_account[0].project","google_service_account.cluster_service_account[0]","google_service_account.cluster_service_account"]},"role":{"constant_value":"roles/logging.logWriter"}},"schema_version":0,"count_expression":{"references":["var.create_service_account"]}},{"address":"google_project_iam_member.cluster_service_account-metric_writer","mode":"managed","type":"google_project_iam_member","name":"cluster_service_account-metric_writer","provider_config_key":"google","expressions":{"member":{"references":["google_service_account.cluster_service_account[0].email","google_service_account.cluster_service_account[0]","google_service_account.cluster_service_account"]},"project":{"references":["google_project_iam_member.cluster_service_account-log_writer[0].project","google_project_iam_member.cluster_service_account-log_writer[0]","google_project_iam_member.cluster_service_account-log_writer"]},"role":{"constant_value":"roles/monitoring.metricWriter"}},"schema_version":0,"count_expression":{"references":["var.create_service_account"]}},{"address":"google_project_iam_member.cluster_service_account-monitoring_viewer","mode":"managed","type":"google_project_iam_member","name":"cluster_service_account-monitoring_viewer","provider_config_key":"google","expressions":{"member":{"references":["google_service_account.cluster_service_account[0].email","google_service_account.cluster_service_account[0]","google_service_account.cluster_service_account"]},"project":{"references":["google_project_iam_member.cluster_service_account-metric_writer[0].project","google_project_iam_member.cluster_service_account-metric_writer[0]","google_project_iam_member.cluster_service_account-metric_writer"]},"role":{"constant_value":"roles/monitoring.viewer"}},"schema_version":0,"count_expression":{"references":["var.create_service_account"]}},{"address":"google_project_iam_member.cluster_service_account-resourceMetadata-writer","mode":"managed","type":"google_project_iam_member","name":"cluster_service_account-resourceMetadata-writer","provider_config_key":"google","expressions":{"member":{"references":["google_service_account.cluster_service_account[0].email","google_service_account.cluster_service_account[0]","google_service_account.cluster_service_account"]},"project":{"references":["google_project_iam_member.cluster_service_account-monitoring_viewer[0].project","google_project_iam_member.cluster_service_account-monitoring_viewer[0]","google_project_iam_member.cluster_service_account-monitoring_viewer"]},"role":{"constant_value":"roles/stackdriver.resourceMetadata.writer"}},"schema_version":0,"count_expression":{"references":["var.create_service_account"]}},{"address":"google_service_account.cluster_service_account","mode":"managed","type":"google_service_account","name":"cluster_service_account","provider_config_key":"google","expressions":{"account_id":{"references":["var.name","var.name","random_string.cluster_service_account_suffix.result","random_string.cluster_service_account_suffix"]},"display_name":{"references":["var.name"]},"project":{"references":["var.project_id"]}},"schema_version":0,"count_expression":{"references":["var.create_service_account"]}},{"address":"kubernetes_config_map.ip-masq-agent","mode":"managed","type":"kubernetes_config_map","name":"ip-masq-agent","provider_config_key":"kubernetes","expressions":{"data":{"references":["var.non_masquerade_cidrs","var.ip_masq_resync_interval","var.ip_masq_link_local"]},"metadata":[{"labels":{"constant_value":{"maintained_by":"terraform"}},"name":{"constant_value":"ip-masq-agent"},"namespace":{"constant_value":"kube-system"}}]},"schema_version":0,"count_expression":{"references":["var.configure_ip_masq"]},"depends_on":["google_container_cluster.primary","google_container_node_pool.pools"]},{"address":"kubernetes_config_map_v1_data.kube-dns","mode":"managed","type":"kubernetes_config_map_v1_data","name":"kube-dns","provider_config_key":"kubernetes","expressions":{"data":{"references":["var.stub_domains"]},"force":{"constant_value":true},"metadata":[{"name":{"constant_value":"kube-dns"},"namespace":{"constant_value":"kube-system"}}]},"schema_version":0,"count_expression":{"references":["local.custom_kube_dns_config","local.upstream_nameservers_config"]},"depends_on":["google_container_cluster.primary","google_container_node_pool.pools"]},{"address":"kubernetes_config_map_v1_data.kube-dns-upstream-nameservers-and-stub-domains","mode":"managed","type":"kubernetes_config_map_v1_data","name":"kube-dns-upstream-nameservers-and-stub-domains","provider_config_key":"kubernetes","expressions":{"data":{"references":["var.upstream_nameservers","var.stub_domains"]},"force":{"constant_value":true},"metadata":[{"name":{"constant_value":"kube-dns"},"namespace":{"constant_value":"kube-system"}}]},"schema_version":0,"count_expression":{"references":["local.custom_kube_dns_config","local.upstream_nameservers_config"]},"depends_on":["google_container_cluster.primary","google_container_node_pool.pools"]},{"address":"kubernetes_config_map_v1_data.kube-dns-upstream-namservers","mode":"managed","type":"kubernetes_config_map_v1_data","name":"kube-dns-upstream-namservers","provider_config_key":"kubernetes","expressions":{"data":{"references":["var.upstream_nameservers"]},"force":{"constant_value":true},"metadata":[{"name":{"constant_value":"kube-dns"},"namespace":{"constant_value":"kube-system"}}]},"schema_version":0,"count_expression":{"references":["local.custom_kube_dns_config","local.upstream_nameservers_config"]},"depends_on":["google_container_cluster.primary","google_container_node_pool.pools"]},{"address":"random_shuffle.available_zones","mode":"managed","type":"random_shuffle","name":"available_zones","provider_config_key":"random","expressions":{"input":{"references":["data.google_compute_zones.available.names","data.google_compute_zones.available"]},"result_count":{"constant_value":3}},"schema_version":0},{"address":"random_string.cluster_service_account_suffix","mode":"managed","type":"random_string","name":"cluster_service_account_suffix","provider_config_key":"random","expressions":{"length":{"constant_value":4},"lower":{"constant_value":true},"special":{"constant_value":false},"upper":{"constant_value":false}},"schema_version":2},{"address":"data.google_compute_subnetwork.gke_subnetwork","mode":"data","type":"google_compute_subnetwork","name":"gke_subnetwork","provider_config_key":"google","expressions":{"name":{"references":["var.subnetwork"]},"project":{"references":["local.network_project_id"]},"region":{"references":["local.region"]}},"schema_version":0,"count_expression":{"references":["var.add_cluster_firewall_rules"]}},{"address":"data.google_compute_zones.available","mode":"data","type":"google_compute_zones","name":"available","provider_config_key":"module.gke:google-beta","expressions":{"project":{"references":["var.project_id"]},"region":{"references":["local.region"]}},"schema_version":0},{"address":"data.google_container_engine_versions.region","mode":"data","type":"google_container_engine_versions","name":"region","provider_config_key":"google","expressions":{"location":{"references":["local.location"]},"project":{"references":["var.project_id"]}},"schema_version":0},{"address":"data.google_container_engine_versions.zone","mode":"data","type":"google_container_engine_versions","name":"zone","provider_config_key":"google","expressions":{"location":{"references":["local.zone_count","data.google_compute_zones.available.names[0]","data.google_compute_zones.available.names","data.google_compute_zones.available","var.zones[0]","var.zones"]},"project":{"references":["var.project_id"]}},"schema_version":0}],"variables":{"add_cluster_firewall_rules":{"default":false,"description":"Create additional firewall rules"},"add_master_webhook_firewall_rules":{"default":false,"description":"Create master_webhook firewall rules for ports defined in `firewall_inbound_ports`"},"add_shadow_firewall_rules":{"default":false,"description":"Create GKE shadow firewall (the same as default firewall rules with firewall logs enabled)."},"authenticator_security_group":{"default":null,"description":"The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format gke-security-groups@yourdomain.com"},"cloudrun":{"default":false,"description":"(Beta) Enable CloudRun addon"},"cloudrun_load_balancer_type":{"default":"","description":"(Beta) Configure the Cloud Run load balancer type. External by default. Set to `LOAD_BALANCER_TYPE_INTERNAL` to configure as an internal load balancer."},"cluster_autoscaling":{"default":{"autoscaling_profile":"BALANCED","enabled":false,"gpu_resources":[],"max_cpu_cores":0,"max_memory_gb":0,"min_cpu_cores":0,"min_memory_gb":0},"description":"Cluster autoscaling configuration. See [more details](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#clusterautoscaling)"},"cluster_ipv4_cidr":{"default":null,"description":"The IP address range of the kubernetes pods in this cluster. Default is an automatically assigned CIDR."},"cluster_resource_labels":{"default":{},"description":"The GCE resource labels (a map of key/value pairs) to be applied to the cluster"},"cluster_telemetry_type":{"default":null,"description":"Available options include ENABLED, DISABLED, and SYSTEM_ONLY"},"config_connector":{"default":false,"description":"(Beta) Whether ConfigConnector is enabled for this cluster."},"configure_ip_masq":{"default":false,"description":"Enables the installation of ip masquerading, which is usually no longer required when using aliasied IP addresses. IP masquerading uses a kubectl call, so when you have a private cluster, you will need access to the API server."},"create_service_account":{"default":true,"description":"Defines if service account specified to run nodes should be created."},"database_encryption":{"default":[{"key_name":"","state":"DECRYPTED"}],"description":"Application-layer Secrets Encryption settings. The object format is {state = string, key_name = string}. Valid values of state are: \"ENCRYPTED\"; \"DECRYPTED\". key_name is the name of a CloudKMS key."},"datapath_provider":{"default":"DATAPATH_PROVIDER_UNSPECIFIED","description":"The desired datapath provider for this cluster. By default, `DATAPATH_PROVIDER_UNSPECIFIED` enables the IPTables-based kube-proxy implementation. `ADVANCED_DATAPATH` enables Dataplane-V2 feature."},"default_max_pods_per_node":{"default":110,"description":"The maximum number of pods to schedule per node"},"deploy_using_private_endpoint":{"default":false,"description":"(Beta) A toggle for Terraform and kubectl to connect to the master's internal IP address during deployment."},"description":{"default":"","description":"The description of the cluster"},"disable_default_snat":{"default":false,"description":"Whether to disable the default SNAT to support the private use of public IP addresses"},"disable_legacy_metadata_endpoints":{"default":true,"description":"Disable the /0.1/ and /v1beta1/ metadata server endpoints on the node. Changing this value will cause all node pools to be recreated."},"dns_cache":{"default":false,"description":"(Beta) The status of the NodeLocal DNSCache addon."},"enable_binary_authorization":{"default":false,"description":"Enable BinAuthZ Admission controller"},"enable_confidential_nodes":{"default":false,"description":"An optional flag to enable confidential node config."},"enable_identity_service":{"default":false,"description":"Enable the Identity Service component, which allows customers to use external identity providers with the K8S API."},"enable_intranode_visibility":{"default":false,"description":"Whether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC network"},"enable_kubernetes_alpha":{"default":false,"description":"Whether to enable Kubernetes Alpha features for this cluster. Note that when this option is enabled, the cluster cannot be upgraded and will be automatically deleted after 30 days."},"enable_l4_ilb_subsetting":{"default":false,"description":"Enable L4 ILB Subsetting on the cluster"},"enable_network_egress_export":{"default":false,"description":"Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created in the cluster to meter network egress traffic."},"enable_pod_security_policy":{"default":false,"description":"enabled - Enable the PodSecurityPolicy controller for this cluster. If enabled, pods must be valid under a PodSecurityPolicy to be created."},"enable_private_endpoint":{"default":false,"description":"(Beta) Whether the master's internal IP address is used as the cluster endpoint"},"enable_private_nodes":{"default":false,"description":"(Beta) Whether nodes have internal IP addresses only"},"enable_resource_consumption_export":{"default":true,"description":"Whether to enable resource consumption metering on this cluster. When enabled, a table will be created in the resource export BigQuery dataset to store resource consumption data. The resulting table can be joined with the resource usage table or with BigQuery billing export."},"enable_shielded_nodes":{"default":true,"description":"Enable Shielded Nodes features on all nodes in this cluster"},"enable_tpu":{"default":false,"description":"Enable Cloud TPU resources in the cluster. WARNING: changing this after cluster creation is destructive!"},"enable_vertical_pod_autoscaling":{"default":false,"description":"Vertical Pod Autoscaling automatically adjusts the resources of pods controlled by it"},"filestore_csi_driver":{"default":false,"description":"The status of the Filestore CSI driver addon, which allows the usage of filestore instance as volumes"},"firewall_inbound_ports":{"default":["8443","9443","15017"],"description":"List of TCP ports for admission/webhook controllers. Either flag `add_master_webhook_firewall_rules` or `add_cluster_firewall_rules` (also adds egress rules) must be set to `true` for inbound-ports firewall rules to be applied."},"firewall_priority":{"default":1000,"description":"Priority rule for firewall rules"},"gce_pd_csi_driver":{"default":false,"description":"(Beta) Whether this cluster should enable the Google Compute Engine Persistent Disk Container Storage Interface (CSI) Driver."},"grant_registry_access":{"default":false,"description":"Grants created cluster-specific service account storage.objectViewer and artifactregistry.reader roles."},"horizontal_pod_autoscaling":{"default":true,"description":"Enable horizontal pod autoscaling addon"},"http_load_balancing":{"default":true,"description":"Enable httpload balancer addon"},"identity_namespace":{"default":"enabled","description":"The workload pool to attach all Kubernetes service accounts to. (Default value of `enabled` automatically sets project-based pool `[project_id].svc.id.goog`)"},"initial_node_count":{"default":0,"description":"The number of nodes to create in this cluster's default node pool."},"ip_masq_link_local":{"default":false,"description":"Whether to masquerade traffic to the link-local prefix (169.254.0.0/16)."},"ip_masq_resync_interval":{"default":"60s","description":"The interval at which the agent attempts to sync its ConfigMap file from the disk."},"ip_range_pods":{"description":"The _name_ of the secondary subnet ip range to use for pods"},"ip_range_services":{"description":"The _name_ of the secondary subnet range to use for services"},"issue_client_certificate":{"default":false,"description":"Issues a client certificate to authenticate to the cluster endpoint. To maximize the security of your cluster, leave this option disabled. Client certificates don't automatically rotate and aren't easily revocable. WARNING: changing this after cluster creation is destructive!"},"istio":{"default":false,"description":"(Beta) Enable Istio addon"},"istio_auth":{"default":"AUTH_MUTUAL_TLS","description":"(Beta) The authentication type between services in Istio."},"kalm_config":{"default":false,"description":"(Beta) Whether KALM is enabled for this cluster."},"kubernetes_version":{"default":"latest","description":"The Kubernetes version of the masters. If set to 'latest' it will pull latest available version in the selected region."},"logging_enabled_components":{"default":[],"description":"List of services to monitor: SYSTEM_COMPONENTS, WORKLOADS. Empty list is default GKE configuration."},"logging_service":{"default":"logging.googleapis.com/kubernetes","description":"The logging service that the cluster should write logs to. Available options include logging.googleapis.com, logging.googleapis.com/kubernetes (beta), and none"},"maintenance_end_time":{"default":"","description":"Time window specified for recurring maintenance operations in RFC3339 format"},"maintenance_exclusions":{"default":[],"description":"List of maintenance exclusions. A cluster can have up to three"},"maintenance_recurrence":{"default":"","description":"Frequency of the recurring maintenance window in RFC5545 format."},"maintenance_start_time":{"default":"05:00","description":"Time window specified for daily or recurring maintenance operations in RFC3339 format"},"master_authorized_networks":{"default":[],"description":"List of master authorized networks. If none are provided, disallow external access (except the cluster node IPs, which GKE automatically whitelists)."},"master_global_access_enabled":{"default":true,"description":"(Beta) Whether the cluster master is accessible globally (from any region) or only within the same region as the private endpoint."},"master_ipv4_cidr_block":{"default":"10.0.0.0/28","description":"(Beta) The IP range in CIDR notation to use for the hosted master network"},"monitoring_enable_managed_prometheus":{"default":false,"description":"(Beta) Configuration for Managed Service for Prometheus. Whether or not the managed collection is enabled."},"monitoring_enabled_components":{"default":[],"description":"List of services to monitor: SYSTEM_COMPONENTS, WORKLOADS (provider version \u003e= 3.89.0). Empty list is default GKE configuration."},"monitoring_service":{"default":"monitoring.googleapis.com/kubernetes","description":"The monitoring service that the cluster should write metrics to. Automatically send metrics from pods in the cluster to the Google Cloud Monitoring API. VM metrics will be collected by Google Compute Engine regardless of this setting Available options include monitoring.googleapis.com, monitoring.googleapis.com/kubernetes (beta) and none"},"name":{"description":"The name of the cluster (required)"},"network":{"description":"The VPC network to host the cluster in (required)"},"network_policy":{"default":false,"description":"Enable network policy addon"},"network_policy_provider":{"default":"CALICO","description":"The network policy provider."},"network_project_id":{"default":"","description":"The project ID of the shared VPC's host (for shared vpc support)"},"node_metadata":{"default":"GKE_METADATA","description":"Specifies how node metadata is exposed to the workload running on the node"},"node_pools":{"default":[{"name":"default-node-pool"}],"description":"List of maps containing node pools"},"node_pools_labels":{"default":{"all":{},"default-node-pool":{}},"description":"Map of maps containing node labels by node-pool name"},"node_pools_linux_node_configs_sysctls":{"default":{"all":{},"default-node-pool":{}},"description":"Map of maps containing linux node config sysctls by node-pool name"},"node_pools_metadata":{"default":{"all":{},"default-node-pool":{}},"description":"Map of maps containing node metadata by node-pool name"},"node_pools_oauth_scopes":{"default":{"all":["https://www.googleapis.com/auth/cloud-platform"],"default-node-pool":[]},"description":"Map of lists containing node oauth scopes by node-pool name"},"node_pools_tags":{"default":{"all":[],"default-node-pool":[]},"description":"Map of lists containing node network tags by node-pool name"},"node_pools_taints":{"default":{"all":[],"default-node-pool":[]},"description":"Map of lists containing node taints by node-pool name"},"non_masquerade_cidrs":{"default":["10.0.0.0/8","172.16.0.0/12","192.168.0.0/16"],"description":"List of strings in CIDR notation that specify the IP address ranges that do not use IP masquerading."},"notification_config_topic":{"default":"","description":"The desired Pub/Sub topic to which notifications will be sent by GKE. Format is projects/{project}/topics/{topic}."},"project_id":{"description":"The project ID to host the cluster in (required)"},"region":{"default":null,"description":"The region to host the cluster in (optional if zonal cluster / required if regional)"},"regional":{"default":true,"description":"Whether is a regional cluster (zonal cluster if set false. WARNING: changing this after cluster creation is destructive!)"},"registry_project_ids":{"default":[],"description":"Projects holding Google Container Registries. If empty, we use the cluster project. If a service account is created and the `grant_registry_access` variable is set to `true`, the `storage.objectViewer` and `artifactregsitry.reader` roles are assigned on these projects."},"release_channel":{"default":null,"description":"The release channel of this cluster. Accepted values are `UNSPECIFIED`, `RAPID`, `REGULAR` and `STABLE`. Defaults to `UNSPECIFIED`."},"remove_default_node_pool":{"default":false,"description":"Remove default node pool while setting up the cluster"},"resource_usage_export_dataset_id":{"default":"","description":"The ID of a BigQuery Dataset for using BigQuery as the destination of resource usage export."},"sandbox_enabled":{"default":false,"description":"(Beta) Enable GKE Sandbox (Do not forget to set `image_type` = `COS_CONTAINERD` to use it)."},"service_account":{"default":"","description":"The service account to run nodes as if not overridden in `node_pools`. The create_service_account variable default value (true) will cause a cluster-specific service account to be created."},"shadow_firewall_rules_priority":{"default":999,"description":"The firewall priority of GKE shadow firewall rules. The priority should be less than default firewall, which is 1000."},"skip_provisioners":{"default":false,"description":"Flag to skip all local-exec provisioners. It breaks `stub_domains` and `upstream_nameservers` variables functionality."},"stub_domains":{"default":{},"description":"Map of stub domains and their resolvers to forward DNS queries for a certain domain to an external DNS server"},"subnetwork":{"description":"The subnetwork to host the cluster in (required)"},"timeouts":{"default":{},"description":"Timeout for cluster operations."},"upstream_nameservers":{"default":[],"description":"If specified, the values replace the nameservers taken by default from the node’s /etc/resolv.conf"},"zones":{"default":[],"description":"The zones to host the cluster in (optional if regional cluster / required if zonal)"}}},"version_constraint":"\u003e= v22.0.0"},"gke_auth":{"source":"terraform-google-modules/kubernetes-engine/google//modules/auth","expressions":{"cluster_name":{"references":["local.gke_name"]},"location":{"references":["module.gke.location","module.gke"]},"project_id":{"references":["var.project_id"]}},"module":{"outputs":{"cluster_ca_certificate":{"sensitive":true,"expression":{"references":["local.cluster_ca_certificate"]},"description":"The cluster_ca_certificate value for use with the kubernetes provider."},"host":{"expression":{"references":["local.host"]},"description":"The host value for use with the kubernetes provider."},"kubeconfig_raw":{"sensitive":true,"expression":{"references":["path.module","local.context","local.cluster_ca_certificate","local.endpoint","data.google_client_config.provider.access_token","data.google_client_config.provider"]},"description":"A kubeconfig file configured to access the GKE cluster."},"token":{"sensitive":true,"expression":{"references":["data.google_client_config.provider.access_token","data.google_client_config.provider"]},"description":"The token value for use with the kubernetes provider."}},"resources":[{"address":"data.google_client_config.provider","mode":"data","type":"google_client_config","name":"provider","provider_config_key":"google","schema_version":0},{"address":"data.google_container_cluster.gke_cluster","mode":"data","type":"google_container_cluster","name":"gke_cluster","provider_config_key":"google","expressions":{"location":{"references":["var.location"]},"name":{"references":["var.cluster_name"]},"project":{"references":["var.project_id"]}},"schema_version":0}],"variables":{"cluster_name":{"description":"The name of the GKE cluster."},"location":{"description":"The location (region or zone) of the GKE cluster."},"project_id":{"description":"The GCP project of the GKE cluster."},"use_private_endpoint":{"default":false,"description":"Connect on the private GKE cluster endpoint"}}},"version_constraint":"\u003e= v22.0.0","depends_on":["module.gke"]},"private_service_access":{"source":"GoogleCloudPlatform/sql-db/google//modules/private_service_access","expressions":{"project_id":{"references":["var.project_id"]},"vpc_network":{"references":["module.gcp_network.network_name","module.gcp_network"]}},"module":{"outputs":{"address":{"expression":{"references":["google_compute_global_address.google-managed-services-range.address","google_compute_global_address.google-managed-services-range"]},"description":"First IP of the reserved range."},"google_compute_global_address_name":{"expression":{"references":["google_compute_global_address.google-managed-services-range.name","google_compute_global_address.google-managed-services-range"]},"description":"URL of the reserved range."},"peering_completed":{"expression":{"references":["null_resource.dependency_setter.id","null_resource.dependency_setter"]},"description":"Use for enforce ordering between resource creation"}},"resources":[{"address":"google_compute_global_address.google-managed-services-range","mode":"managed","type":"google_compute_global_address","name":"google-managed-services-range","provider_config_key":"module.private_service_access:google-beta","expressions":{"address":{"references":["var.address"]},"address_type":{"constant_value":"INTERNAL"},"description":{"references":["var.description"]},"ip_version":{"references":["var.ip_version"]},"labels":{"references":["var.labels"]},"name":{"references":["var.vpc_network"]},"network":{"references":["data.google_compute_network.main.self_link","data.google_compute_network.main"]},"prefix_length":{"references":["var.prefix_length"]},"project":{"references":["var.project_id"]},"purpose":{"constant_value":"VPC_PEERING"}},"schema_version":0},{"address":"google_service_networking_connection.private_service_access","mode":"managed","type":"google_service_networking_connection","name":"private_service_access","provider_config_key":"module.private_service_access:google-beta","expressions":{"network":{"references":["data.google_compute_network.main.self_link","data.google_compute_network.main"]},"reserved_peering_ranges":{"references":["google_compute_global_address.google-managed-services-range.name","google_compute_global_address.google-managed-services-range"]},"service":{"constant_value":"servicenetworking.googleapis.com"}},"schema_version":0},{"address":"null_resource.dependency_setter","mode":"managed","type":"null_resource","name":"dependency_setter","provider_config_key":"null","schema_version":0,"depends_on":["google_service_networking_connection.private_service_access"]},{"address":"data.google_compute_network.main","mode":"data","type":"google_compute_network","name":"main","provider_config_key":"google","expressions":{"name":{"references":["var.vpc_network"]},"project":{"references":["var.project_id"]}},"schema_version":0}],"variables":{"address":{"default":"","description":"First IP address of the IP range to allocate to CLoud SQL instances and other Private Service Access services. If not set, GCP will pick a valid one for you."},"description":{"default":"","description":"An optional description of the Global Address resource."},"ip_version":{"default":"","description":"IP Version for the allocation. Can be IPV4 or IPV6."},"labels":{"default":{},"description":"The key/value labels for the IP range allocated to the peered network."},"prefix_length":{"default":16,"description":"Prefix length of the IP range reserved for Cloud SQL instances and other Private Service Access services. Defaults to /16."},"project_id":{"description":"The project ID of the VPC network to peer. This can be a shared VPC host projec."},"vpc_network":{"description":"Name of the VPC network to peer."}}},"version_constraint":"\u003e= 11.0.0","depends_on":["module.gcp_network"]}},"variables":{"app_image_name":{"description":"Container image to use"},"app_master_key_file":{"default":"","description":"Rails master key file. This will populate the `RAILS_MASTER_KEY` environment variable"},"app_name":{"description":"Application name"},"app_user_pass":{"description":"List of users to reset password for"},"db_availability_type":{"description":"The availability type for the master instance.This is only used to set up high availability for the PostgreSQL instance. Can be either `ZONAL` or `REGIONAL`."},"db_create_timeout":{"default":"15m","description":"The optional timout that is applied to limit long database creates."},"db_delete_timeout":{"default":"5m","description":"The optional timout that is applied to limit long database deletes."},"db_deletion_protection":{"default":false,"description":"Used to block Terraform from deleting a SQL Instance."},"db_disk_autoresize":{"default":true,"description":"Configuration to increase storage size."},"db_disk_size_gb":{"default":10,"description":"The disk size for the master instance."},"db_disk_type":{"description":"The disk type for the master instance PD_SSD or PD_HDD."},"db_enable_default_db":{"default":true,"description":"Enable or disable the creation of the default database"},"db_enable_default_user":{"default":true,"description":"Enable or disable the creation of the default user"},"db_tier":{"default":"db-g1-small","description":"The tier for the master instance."},"db_update_timeout":{"default":"5m","description":"The optional timout that is applied to limit long database updates."},"db_user":{"description":"The database user"},"environment":{"description":"Environment name (dev, prod, etc)"},"gce_disk_size_gb":{"description":"The disk size for persistent storage"},"gce_disk_type":{"description":"The disk type for the master instance PD-SSD or PD-HDD."},"gcp_region":{"default":null,"description":"The region to create the cluster/compute nodes."},"gcp_zones":{"description":"The zones to create the cluster/compute nodes."},"gke_dataplane_v2_enabled":{"default":true,"description":"Enable Dataplane V2 otherwise use iptables based firewall"},"gke_disk_size_gb":{"description":"The disk size in gigabytes for the GKE nodes"},"gke_disk_type":{"description":"The disk type for the GKE nodes. Valid values are PD-SSD,PD-Standard,PD-Balanced,PD-LocalSSD"},"gke_enable_preemptible":{"description":"Whether to enable preemptible nodes"},"gke_image_type":{"default":"COS_CONTAINERD","description":"The image type to use for GKE nodes"},"gke_is_regional":{"description":"Whether to enable a regional cluster"},"gke_machine_type":{"description":"Machine type for GKE nodes"},"gke_max_cpu_cores":{"description":"Maximum number of CPU cores to use for GKE nodes"},"gke_max_memory_gb":{"description":"The max memory in gigabytes for the GKE nodes"},"gke_max_num_nodes":{"description":"Max number of GKE nodes"},"gke_min_cpu_cores":{"description":"Minimum number of CPU cores to use for GKE nodes"},"gke_min_memory_gb":{"description":"Minimum memory in gigabytes to use for GKE nodes"},"gke_min_num_nodes":{"description":"Min number of GKE nodes"},"gke_version":{"default":"1.24.1-gke.1800","description":"GKE Kubernetes version"},"pg_name":{"description":"The name of the Cloud SQL resources"},"pg_version":{"default":"POSTGRES_14","description":"The database version to use. (Fitbod 'myworkout' uses PostgreSQL client version 13 even though 14 is the latest)"},"project_id":{"description":"Project ID"},"project_name":{"description":"Project Name"}}}},"relevant_attributes":[{"resource":"module.private_service_access.data.google_compute_network.main","attribute":["self_link"]},{"resource":"random_password.app_pass","attribute":[]},{"resource":"module.gcp_network.module.routes.google_compute_route.route","attribute":[]},{"resource":"module.gke.google_container_cluster.primary","attribute":["private_cluster_config",0,"public_endpoint"]},{"resource":"data.local_file.masterkey","attribute":["content"]},{"resource":"module.db.google_sql_database_instance.default","attribute":["public_ip_address"]},{"resource":"module.gke_auth.data.google_container_cluster.gke_cluster","attribute":["name"]},{"resource":"module.gke.google_container_cluster.primary","attribute":["addons_config",0,"istio_config"]},{"resource":"module.gke.google_container_cluster.primary","attribute":["private_cluster_config",0,"private_endpoint"]},{"resource":"module.db.google_sql_user.additional_users","attribute":[]},{"resource":"module.gke.google_container_cluster.primary","attribute":["addons_config",0,"network_policy_config",0,"disabled"]},{"resource":"google_compute_disk.app","attribute":["name"]},{"resource":"random_password.app_pass[\"admin\"]","attribute":["result"]},{"resource":"module.gcp_network.module.firewall_rules.google_compute_firewall.rules","attribute":[]},{"resource":"module.gcp_network.module.subnets.google_compute_subnetwork.subnetwork","attribute":[]},{"resource":"module.db.google_sql_database_instance.default","attribute":["first_ip_address"]},{"resource":"module.gke.google_container_cluster.primary","attribute":["pod_security_policy_config",0,"enabled"]},{"resource":"module.gke_auth.data.google_container_cluster.gke_cluster","attribute":["private_cluster_config",0,"private_endpoint"]},{"resource":"module.gke.google_project_iam_member.cluster_service_account-monitoring_viewer[0]","attribute":["project"]},{"resource":"kubernetes_persistent_volume.prom_pv","attribute":[]},{"resource":"module.db.google_sql_database_instance.default","attribute":["ip_address"]},{"resource":"module.db.google_sql_database_instance.default","attribute":[]},{"resource":"module.gke.random_shuffle.available_zones","attribute":["result"]},{"resource":"module.db.random_password.additional_passwords","attribute":[]},{"resource":"module.gke_auth.data.google_container_cluster.gke_cluster","attribute":["master_auth",0,"cluster_ca_certificate"]},{"resource":"module.gke.google_container_cluster.primary","attribute":[]},{"resource":"module.gke.google_container_cluster.primary","attribute":["min_master_version"]},{"resource":"kubernetes_service.app_frontend","attribute":["metadata",0,"name"]},{"resource":"module.gcp_network.module.vpc.google_compute_network.network","attribute":["project"]},{"resource":"module.db.google_sql_database_instance.default","attribute":["service_account_email_address"]},{"resource":"module.gke_auth.data.google_client_config.provider","attribute":["access_token"]},{"resource":"module.gke.google_container_cluster.primary","attribute":["addons_config",0,"istio_config",0,"disabled"]},{"resource":"module.db.random_id.suffix[0]","attribute":["hex"]},{"resource":"module.gke.google_service_account.cluster_service_account[0]","attribute":["project"]},{"resource":"module.db.random_password.user-password","attribute":["result"]},{"resource":"kubernetes_deployment.app","attribute":["spec",0,"template",0,"metadata",0,"labels","app"]},{"resource":"module.gcp_network.module.vpc.google_compute_network.network","attribute":["self_link"]},{"resource":"module.gke.google_container_cluster.primary","attribute":["master_authorized_networks_config"]},{"resource":"module.private_service_access.google_compute_global_address.google-managed-services-range","attribute":["name"]},{"resource":"kubernetes_persistent_volume.app_pv","attribute":["metadata",0,"name"]},{"resource":"random_password.app_pass[\"user1\"]","attribute":["result"]},{"resource":"module.gke.google_container_cluster.primary","attribute":["pod_security_policy_config"]},{"resource":"module.gke.google_container_cluster.primary","attribute":["id"]},{"resource":"module.gke.google_container_cluster.primary","attribute":["addons_config",0,"horizontal_pod_autoscaling",0,"disabled"]},{"resource":"module.gke.google_container_cluster.primary","attribute":["enable_intranode_visibility"]},{"resource":"module.gke.google_project_iam_member.cluster_service_account-log_writer[0]","attribute":["project"]},{"resource":"kubernetes_secret.grafana","attribute":["data","admin-pass"]},{"resource":"kubernetes_secret.grafana","attribute":["data","admin-user"]},{"resource":"module.db.google_sql_database_instance.default","attribute":["self_link"]},{"resource":"module.gke.google_container_node_pool.pools","attribute":[]},{"resource":"module.gcp_network.module.vpc.google_compute_network.network","attribute":["name"]},{"resource":"module.private_service_access.google_compute_global_address.google-managed-services-range","attribute":["address"]},{"resource":"module.db.google_sql_database_instance.default","attribute":["private_ip_address"]},{"resource":"module.gke.google_service_account.cluster_service_account","attribute":[]},{"resource":"module.gke.google_container_cluster.primary","attribute":["master_version"]},{"resource":"module.db.google_sql_database_instance.default","attribute":["name"]},{"resource":"module.gcp_network.module.vpc.google_compute_shared_vpc_host_project.shared_vpc_host","attribute":[]},{"resource":"module.private_service_access.null_resource.dependency_setter","attribute":["id"]},{"resource":"module.gke.google_container_cluster.primary","attribute":["endpoint"]},{"resource":"module.gke.google_container_cluster.primary","attribute":["vertical_pod_autoscaling"]},{"resource":"module.db.google_sql_database_instance.default","attribute":["connection_name"]},{"resource":"module.gke.google_container_cluster.primary","attribute":["location"]},{"resource":"module.gke.google_container_cluster.primary","attribute":["logging_service"]},{"resource":"module.gke_auth.data.google_container_cluster.gke_cluster","attribute":["endpoint"]},{"resource":"module.gke.google_container_cluster.primary","attribute":["name"]},{"resource":"kubernetes_config_map.config","attribute":["metadata",0,"name"]},{"resource":"module.gcp_network.module.vpc.google_compute_network.network","attribute":["id"]},{"resource":"module.db.google_sql_database_instance.default","attribute":["server_ca_cert"]},{"resource":"module.gke_auth.data.google_container_cluster.gke_cluster","attribute":["master_auth"]},{"resource":"google_compute_address.ingress_ip","attribute":["address"]},{"resource":"module.gke.google_container_cluster.primary","attribute":["monitoring_service"]},{"resource":"module.gke.google_service_account.cluster_service_account[0]","attribute":["email"]},{"resource":"kubernetes_persistent_volume.grafana_pv","attribute":[]},{"resource":"kubernetes_service.app_frontend","attribute":["spec",0,"port",0,"port"]},{"resource":"module.gke.google_container_cluster.primary","attribute":["node_locations"]},{"resource":"module.gke.data.google_container_engine_versions.zone","attribute":["latest_master_version"]},{"resource":"module.gke.google_container_cluster.primary","attribute":["private_cluster_config"]},{"resource":"module.gke.google_container_cluster.primary","attribute":["vertical_pod_autoscaling",0,"enabled"]},{"resource":"random_password.grafana_pass","attribute":["result"]},{"resource":"google_compute_disk.monitoring","attribute":["name"]},{"resource":"kubernetes_persistent_volume_claim.app_pvc","attribute":["metadata",0,"name"]},{"resource":"module.gcp_network.module.vpc.google_compute_network.network","attribute":[]},{"resource":"module.db.google_sql_database_instance.replicas","attribute":[]},{"resource":"module.gke.data.google_container_engine_versions.region","attribute":["latest_master_version"]},{"resource":"module.gke.random_string.cluster_service_account_suffix","attribute":["result"]},{"resource":"module.gke.google_project_iam_member.cluster_service_account-metric_writer[0]","attribute":["project"]},{"resource":"module.gke.data.google_compute_zones.available","attribute":["names"]},{"resource":"module.gke.google_container_cluster.primary","attribute":["addons_config",0,"http_load_balancing",0,"disabled"]}]}
